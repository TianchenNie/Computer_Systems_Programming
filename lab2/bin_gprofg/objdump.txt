
ECE454_Lab2:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8d 05 15 02 00 00 	lea    0x215(%rip),%rax        # 1220 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 6f 00 00    	pushq  0x6fe2(%rip)        # 8008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 6f 00 00    	jmpq   *0x6fe4(%rip)        # 8010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 6f 00 00    	jmpq   *0x6fe2(%rip)        # 8018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <putchar@plt>:
    1040:	ff 25 da 6f 00 00    	jmpq   *0x6fda(%rip)        # 8020 <putchar@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <abort@plt>:
    1050:	ff 25 d2 6f 00 00    	jmpq   *0x6fd2(%rip)        # 8028 <abort@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <strcpy@plt>:
    1060:	ff 25 ca 6f 00 00    	jmpq   *0x6fca(%rip)        # 8030 <strcpy@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <puts@plt>:
    1070:	ff 25 c2 6f 00 00    	jmpq   *0x6fc2(%rip)        # 8038 <puts@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <fread@plt>:
    1080:	ff 25 ba 6f 00 00    	jmpq   *0x6fba(%rip)        # 8040 <fread@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fclose@plt>:
    1090:	ff 25 b2 6f 00 00    	jmpq   *0x6fb2(%rip)        # 8048 <fclose@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <strlen@plt>:
    10a0:	ff 25 aa 6f 00 00    	jmpq   *0x6faa(%rip)        # 8050 <strlen@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <printf@plt>:
    10b0:	ff 25 a2 6f 00 00    	jmpq   *0x6fa2(%rip)        # 8058 <printf@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <memset@plt>:
    10c0:	ff 25 9a 6f 00 00    	jmpq   *0x6f9a(%rip)        # 8060 <memset@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcmp@plt>:
    10d0:	ff 25 92 6f 00 00    	jmpq   *0x6f92(%rip)        # 8068 <memcmp@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <fgets@plt>:
    10e0:	ff 25 8a 6f 00 00    	jmpq   *0x6f8a(%rip)        # 8070 <fgets@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <calloc@plt>:
    10f0:	ff 25 82 6f 00 00    	jmpq   *0x6f82(%rip)        # 8078 <calloc@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcmp@plt>:
    1100:	ff 25 7a 6f 00 00    	jmpq   *0x6f7a(%rip)        # 8080 <strcmp@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <__monstartup@plt>:
    1110:	ff 25 72 6f 00 00    	jmpq   *0x6f72(%rip)        # 8088 <__monstartup@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <fprintf@plt>:
    1120:	ff 25 6a 6f 00 00    	jmpq   *0x6f6a(%rip)        # 8090 <fprintf@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

0000000000001130 <malloc@plt>:
    1130:	ff 25 62 6f 00 00    	jmpq   *0x6f62(%rip)        # 8098 <malloc@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	pushq  $0x10
    113b:	e9 e0 fe ff ff       	jmpq   1020 <.plt>

0000000000001140 <times@plt>:
    1140:	ff 25 5a 6f 00 00    	jmpq   *0x6f5a(%rip)        # 80a0 <times@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	pushq  $0x11
    114b:	e9 d0 fe ff ff       	jmpq   1020 <.plt>

0000000000001150 <fopen@plt>:
    1150:	ff 25 52 6f 00 00    	jmpq   *0x6f52(%rip)        # 80a8 <fopen@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	pushq  $0x12
    115b:	e9 c0 fe ff ff       	jmpq   1020 <.plt>

0000000000001160 <strtok@plt>:
    1160:	ff 25 4a 6f 00 00    	jmpq   *0x6f4a(%rip)        # 80b0 <strtok@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	pushq  $0x13
    116b:	e9 b0 fe ff ff       	jmpq   1020 <.plt>

0000000000001170 <getopt@plt>:
    1170:	ff 25 42 6f 00 00    	jmpq   *0x6f42(%rip)        # 80b8 <getopt@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	pushq  $0x14
    117b:	e9 a0 fe ff ff       	jmpq   1020 <.plt>

0000000000001180 <__cxa_atexit@plt>:
    1180:	ff 25 3a 6f 00 00    	jmpq   *0x6f3a(%rip)        # 80c0 <__cxa_atexit@GLIBC_2.2.5>
    1186:	68 15 00 00 00       	pushq  $0x15
    118b:	e9 90 fe ff ff       	jmpq   1020 <.plt>

0000000000001190 <atoi@plt>:
    1190:	ff 25 32 6f 00 00    	jmpq   *0x6f32(%rip)        # 80c8 <atoi@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	pushq  $0x16
    119b:	e9 80 fe ff ff       	jmpq   1020 <.plt>

00000000000011a0 <exit@plt>:
    11a0:	ff 25 2a 6f 00 00    	jmpq   *0x6f2a(%rip)        # 80d0 <exit@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	pushq  $0x17
    11ab:	e9 70 fe ff ff       	jmpq   1020 <.plt>

00000000000011b0 <fwrite@plt>:
    11b0:	ff 25 22 6f 00 00    	jmpq   *0x6f22(%rip)        # 80d8 <fwrite@GLIBC_2.2.5>
    11b6:	68 18 00 00 00       	pushq  $0x18
    11bb:	e9 60 fe ff ff       	jmpq   1020 <.plt>

00000000000011c0 <sleep@plt>:
    11c0:	ff 25 1a 6f 00 00    	jmpq   *0x6f1a(%rip)        # 80e0 <sleep@GLIBC_2.2.5>
    11c6:	68 19 00 00 00       	pushq  $0x19
    11cb:	e9 50 fe ff ff       	jmpq   1020 <.plt>

00000000000011d0 <__ctype_b_loc@plt>:
    11d0:	ff 25 12 6f 00 00    	jmpq   *0x6f12(%rip)        # 80e8 <__ctype_b_loc@GLIBC_2.3>
    11d6:	68 1a 00 00 00       	pushq  $0x1a
    11db:	e9 40 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

00000000000011e0 <__cxa_finalize@plt>:
    11e0:	ff 25 12 6e 00 00    	jmpq   *0x6e12(%rip)        # 7ff8 <__cxa_finalize@GLIBC_2.2.5>
    11e6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000011f0 <_start>:
    11f0:	31 ed                	xor    %ebp,%ebp
    11f2:	49 89 d1             	mov    %rdx,%r9
    11f5:	5e                   	pop    %rsi
    11f6:	48 89 e2             	mov    %rsp,%rdx
    11f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11fd:	50                   	push   %rax
    11fe:	54                   	push   %rsp
    11ff:	4c 8d 05 7a 35 00 00 	lea    0x357a(%rip),%r8        # 4780 <__libc_csu_fini>
    1206:	48 8d 0d 13 35 00 00 	lea    0x3513(%rip),%rcx        # 4720 <__libc_csu_init>
    120d:	48 8d 3d 1d 09 00 00 	lea    0x91d(%rip),%rdi        # 1b31 <main>
    1214:	ff 15 c6 6d 00 00    	callq  *0x6dc6(%rip)        # 7fe0 <__libc_start_main@GLIBC_2.2.5>
    121a:	f4                   	hlt    
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <__gmon_start__>:
    1220:	8b 05 22 6f 00 00    	mov    0x6f22(%rip),%eax        # 8148 <called.0>
    1226:	85 c0                	test   %eax,%eax
    1228:	74 06                	je     1230 <__gmon_start__+0x10>
    122a:	c3                   	retq   
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1230:	48 83 ec 08          	sub    $0x8,%rsp
    1234:	48 8d 3d b5 ff ff ff 	lea    -0x4b(%rip),%rdi        # 11f0 <_start>
    123b:	48 8d 35 67 35 00 00 	lea    0x3567(%rip),%rsi        # 47a9 <etext>
    1242:	c7 05 fc 6e 00 00 01 	movl   $0x1,0x6efc(%rip)        # 8148 <called.0>
    1249:	00 00 00 
    124c:	e8 bf fe ff ff       	callq  1110 <__monstartup@plt>
    1251:	48 8b 3d 80 6d 00 00 	mov    0x6d80(%rip),%rdi        # 7fd8 <_mcleanup@GLIBC_2.2.5>
    1258:	48 83 c4 08          	add    $0x8,%rsp
    125c:	e9 2f 35 00 00       	jmpq   4790 <atexit>
    1261:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1268:	00 00 00 
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <_dl_relocate_static_pie>:
    1270:	c3                   	retq   
    1271:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1278:	00 00 00 
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <deregister_tm_clones>:
    1280:	48 8d 3d 99 6e 00 00 	lea    0x6e99(%rip),%rdi        # 8120 <optarg@@GLIBC_2.2.5>
    1287:	48 8d 05 92 6e 00 00 	lea    0x6e92(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    128e:	48 39 f8             	cmp    %rdi,%rax
    1291:	74 15                	je     12a8 <deregister_tm_clones+0x28>
    1293:	48 8b 05 36 6d 00 00 	mov    0x6d36(%rip),%rax        # 7fd0 <_ITM_deregisterTMCloneTable>
    129a:	48 85 c0             	test   %rax,%rax
    129d:	74 09                	je     12a8 <deregister_tm_clones+0x28>
    129f:	ff e0                	jmpq   *%rax
    12a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12a8:	c3                   	retq   
    12a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012b0 <register_tm_clones>:
    12b0:	48 8d 3d 69 6e 00 00 	lea    0x6e69(%rip),%rdi        # 8120 <optarg@@GLIBC_2.2.5>
    12b7:	48 8d 35 62 6e 00 00 	lea    0x6e62(%rip),%rsi        # 8120 <optarg@@GLIBC_2.2.5>
    12be:	48 29 fe             	sub    %rdi,%rsi
    12c1:	48 89 f0             	mov    %rsi,%rax
    12c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    12c8:	48 c1 f8 03          	sar    $0x3,%rax
    12cc:	48 01 c6             	add    %rax,%rsi
    12cf:	48 d1 fe             	sar    %rsi
    12d2:	74 14                	je     12e8 <register_tm_clones+0x38>
    12d4:	48 8b 05 15 6d 00 00 	mov    0x6d15(%rip),%rax        # 7ff0 <_ITM_registerTMCloneTable>
    12db:	48 85 c0             	test   %rax,%rax
    12de:	74 08                	je     12e8 <register_tm_clones+0x38>
    12e0:	ff e0                	jmpq   *%rax
    12e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12e8:	c3                   	retq   
    12e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012f0 <__do_global_dtors_aux>:
    12f0:	80 3d 55 6e 00 00 00 	cmpb   $0x0,0x6e55(%rip)        # 814c <completed.0>
    12f7:	75 2f                	jne    1328 <__do_global_dtors_aux+0x38>
    12f9:	55                   	push   %rbp
    12fa:	48 83 3d f6 6c 00 00 	cmpq   $0x0,0x6cf6(%rip)        # 7ff8 <__cxa_finalize@GLIBC_2.2.5>
    1301:	00 
    1302:	48 89 e5             	mov    %rsp,%rbp
    1305:	74 0c                	je     1313 <__do_global_dtors_aux+0x23>
    1307:	48 8b 3d ea 6d 00 00 	mov    0x6dea(%rip),%rdi        # 80f8 <__dso_handle>
    130e:	e8 cd fe ff ff       	callq  11e0 <__cxa_finalize@plt>
    1313:	e8 68 ff ff ff       	callq  1280 <deregister_tm_clones>
    1318:	c6 05 2d 6e 00 00 01 	movb   $0x1,0x6e2d(%rip)        # 814c <completed.0>
    131f:	5d                   	pop    %rbp
    1320:	c3                   	retq   
    1321:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1328:	c3                   	retq   
    1329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001330 <frame_dummy>:
    1330:	e9 7b ff ff ff       	jmpq   12b0 <register_tm_clones>

0000000000001335 <loadbmp_decode_file>:
    1335:	55                   	push   %rbp
    1336:	48 89 e5             	mov    %rsp,%rbp
    1339:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    1340:	ff 15 a2 6c 00 00    	callq  *0x6ca2(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    1346:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    134a:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    134e:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    1355:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    135c:	44 89 85 6c ff ff ff 	mov    %r8d,-0x94(%rbp)
    1363:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1367:	48 8d 35 9a 3c 00 00 	lea    0x3c9a(%rip),%rsi        # 5008 <_IO_stdin_used+0x8>
    136e:	48 89 c7             	mov    %rax,%rdi
    1371:	e8 da fd ff ff       	callq  1150 <fopen@plt>
    1376:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    137a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    137f:	75 0a                	jne    138b <loadbmp_decode_file+0x56>
    1381:	b8 02 00 00 00       	mov    $0x2,%eax
    1386:	e9 45 03 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    138b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1392:	00 
    1393:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    1397:	ba 0e 00 00 00       	mov    $0xe,%edx
    139c:	be 00 00 00 00       	mov    $0x0,%esi
    13a1:	48 89 c7             	mov    %rax,%rdi
    13a4:	e8 17 fd ff ff       	callq  10c0 <memset@plt>
    13a9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    13ad:	ba 28 00 00 00       	mov    $0x28,%edx
    13b2:	be 00 00 00 00       	mov    $0x0,%esi
    13b7:	48 89 c7             	mov    %rax,%rdi
    13ba:	e8 01 fd ff ff       	callq  10c0 <memset@plt>
    13bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    13c3:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    13c7:	48 89 d1             	mov    %rdx,%rcx
    13ca:	ba 01 00 00 00       	mov    $0x1,%edx
    13cf:	be 0e 00 00 00       	mov    $0xe,%esi
    13d4:	48 89 c7             	mov    %rax,%rdi
    13d7:	e8 a4 fc ff ff       	callq  1080 <fread@plt>
    13dc:	48 85 c0             	test   %rax,%rax
    13df:	75 16                	jne    13f7 <loadbmp_decode_file+0xc2>
    13e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13e5:	48 89 c7             	mov    %rax,%rdi
    13e8:	e8 a3 fc ff ff       	callq  1090 <fclose@plt>
    13ed:	b8 04 00 00 00       	mov    $0x4,%eax
    13f2:	e9 d9 02 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    13f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    13fb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    13ff:	48 89 d1             	mov    %rdx,%rcx
    1402:	ba 01 00 00 00       	mov    $0x1,%edx
    1407:	be 28 00 00 00       	mov    $0x28,%esi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 6c fc ff ff       	callq  1080 <fread@plt>
    1414:	48 85 c0             	test   %rax,%rax
    1417:	75 16                	jne    142f <loadbmp_decode_file+0xfa>
    1419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    141d:	48 89 c7             	mov    %rax,%rdi
    1420:	e8 6b fc ff ff       	callq  1090 <fclose@plt>
    1425:	b8 04 00 00 00       	mov    $0x4,%eax
    142a:	e9 a1 02 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    142f:	0f b6 45 ca          	movzbl -0x36(%rbp),%eax
    1433:	3c 42                	cmp    $0x42,%al
    1435:	75 08                	jne    143f <loadbmp_decode_file+0x10a>
    1437:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
    143b:	3c 4d                	cmp    $0x4d,%al
    143d:	74 16                	je     1455 <loadbmp_decode_file+0x120>
    143f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1443:	48 89 c7             	mov    %rax,%rdi
    1446:	e8 45 fc ff ff       	callq  1090 <fclose@plt>
    144b:	b8 05 00 00 00       	mov    $0x5,%eax
    1450:	e9 7b 02 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    1455:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
    1459:	3c 18                	cmp    $0x18,%al
    145b:	74 1e                	je     147b <loadbmp_decode_file+0x146>
    145d:	0f b6 45 ae          	movzbl -0x52(%rbp),%eax
    1461:	3c 20                	cmp    $0x20,%al
    1463:	74 16                	je     147b <loadbmp_decode_file+0x146>
    1465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1469:	48 89 c7             	mov    %rax,%rdi
    146c:	e8 1f fc ff ff       	callq  1090 <fclose@plt>
    1471:	b8 06 00 00 00       	mov    $0x6,%eax
    1476:	e9 55 02 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    147b:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
    147f:	0f b6 d0             	movzbl %al,%edx
    1482:	0f b6 45 a5          	movzbl -0x5b(%rbp),%eax
    1486:	0f b6 c0             	movzbl %al,%eax
    1489:	c1 e0 08             	shl    $0x8,%eax
    148c:	01 c2                	add    %eax,%edx
    148e:	0f b6 45 a6          	movzbl -0x5a(%rbp),%eax
    1492:	0f b6 c0             	movzbl %al,%eax
    1495:	c1 e0 10             	shl    $0x10,%eax
    1498:	01 c2                	add    %eax,%edx
    149a:	0f b6 45 a7          	movzbl -0x59(%rbp),%eax
    149e:	0f b6 c0             	movzbl %al,%eax
    14a1:	c1 e0 18             	shl    $0x18,%eax
    14a4:	01 d0                	add    %edx,%eax
    14a6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    14a9:	0f b6 45 a8          	movzbl -0x58(%rbp),%eax
    14ad:	0f b6 d0             	movzbl %al,%edx
    14b0:	0f b6 45 a9          	movzbl -0x57(%rbp),%eax
    14b4:	0f b6 c0             	movzbl %al,%eax
    14b7:	c1 e0 08             	shl    $0x8,%eax
    14ba:	01 c2                	add    %eax,%edx
    14bc:	0f b6 45 aa          	movzbl -0x56(%rbp),%eax
    14c0:	0f b6 c0             	movzbl %al,%eax
    14c3:	c1 e0 10             	shl    $0x10,%eax
    14c6:	01 c2                	add    %eax,%edx
    14c8:	0f b6 45 ab          	movzbl -0x55(%rbp),%eax
    14cc:	0f b6 c0             	movzbl %al,%eax
    14cf:	c1 e0 18             	shl    $0x18,%eax
    14d2:	01 d0                	add    %edx,%eax
    14d4:	89 45 e0             	mov    %eax,-0x20(%rbp)
    14d7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    14db:	0f 84 bb 01 00 00    	je     169c <loadbmp_decode_file+0x367>
    14e1:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    14e5:	0f 84 b1 01 00 00    	je     169c <loadbmp_decode_file+0x367>
    14eb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    14ee:	0f af 45 e0          	imul   -0x20(%rbp),%eax
    14f2:	0f af 85 6c ff ff ff 	imul   -0x94(%rbp),%eax
    14f9:	89 c0                	mov    %eax,%eax
    14fb:	48 89 c7             	mov    %rax,%rdi
    14fe:	e8 2d fc ff ff       	callq  1130 <malloc@plt>
    1503:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1507:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    150c:	75 16                	jne    1524 <loadbmp_decode_file+0x1ef>
    150e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1512:	48 89 c7             	mov    %rax,%rdi
    1515:	e8 76 fb ff ff       	callq  1090 <fclose@plt>
    151a:	b8 01 00 00 00       	mov    $0x1,%eax
    151f:	e9 ac 01 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    1524:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1527:	83 e8 01             	sub    $0x1,%eax
    152a:	89 45 f0             	mov    %eax,-0x10(%rbp)
    152d:	e9 60 01 00 00       	jmpq   1692 <loadbmp_decode_file+0x35d>
    1532:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1539:	e9 f4 00 00 00       	jmpq   1632 <loadbmp_decode_file+0x2fd>
    153e:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1541:	0f af 45 e4          	imul   -0x1c(%rbp),%eax
    1545:	89 c2                	mov    %eax,%edx
    1547:	8b 45 f4             	mov    -0xc(%rbp),%eax
    154a:	01 c2                	add    %eax,%edx
    154c:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    1552:	0f af c2             	imul   %edx,%eax
    1555:	89 45 d8             	mov    %eax,-0x28(%rbp)
    1558:	8b 55 d8             	mov    -0x28(%rbp),%edx
    155b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155f:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    1563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1567:	48 89 c1             	mov    %rax,%rcx
    156a:	ba 01 00 00 00       	mov    $0x1,%edx
    156f:	be 03 00 00 00       	mov    $0x3,%esi
    1574:	e8 07 fb ff ff       	callq  1080 <fread@plt>
    1579:	48 85 c0             	test   %rax,%rax
    157c:	75 22                	jne    15a0 <loadbmp_decode_file+0x26b>
    157e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1582:	48 89 c7             	mov    %rax,%rdi
    1585:	e8 a6 fa ff ff       	callq  1030 <free@plt>
    158a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    158e:	48 89 c7             	mov    %rax,%rdi
    1591:	e8 fa fa ff ff       	callq  1090 <fclose@plt>
    1596:	b8 04 00 00 00       	mov    $0x4,%eax
    159b:	e9 30 01 00 00       	jmpq   16d0 <loadbmp_decode_file+0x39b>
    15a0:	8b 55 d8             	mov    -0x28(%rbp),%edx
    15a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15a7:	48 01 d0             	add    %rdx,%rax
    15aa:	0f b6 08             	movzbl (%rax),%ecx
    15ad:	8b 45 d8             	mov    -0x28(%rbp),%eax
    15b0:	83 c0 02             	add    $0x2,%eax
    15b3:	89 c2                	mov    %eax,%edx
    15b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15b9:	48 01 d0             	add    %rdx,%rax
    15bc:	0f b6 10             	movzbl (%rax),%edx
    15bf:	8b 75 d8             	mov    -0x28(%rbp),%esi
    15c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15c6:	48 01 f0             	add    %rsi,%rax
    15c9:	31 ca                	xor    %ecx,%edx
    15cb:	88 10                	mov    %dl,(%rax)
    15cd:	0f b6 08             	movzbl (%rax),%ecx
    15d0:	8b 45 d8             	mov    -0x28(%rbp),%eax
    15d3:	83 c0 02             	add    $0x2,%eax
    15d6:	89 c2                	mov    %eax,%edx
    15d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15dc:	48 01 d0             	add    %rdx,%rax
    15df:	0f b6 10             	movzbl (%rax),%edx
    15e2:	8b 45 d8             	mov    -0x28(%rbp),%eax
    15e5:	83 c0 02             	add    $0x2,%eax
    15e8:	89 c6                	mov    %eax,%esi
    15ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ee:	48 01 f0             	add    %rsi,%rax
    15f1:	31 ca                	xor    %ecx,%edx
    15f3:	88 10                	mov    %dl,(%rax)
    15f5:	0f b6 08             	movzbl (%rax),%ecx
    15f8:	8b 55 d8             	mov    -0x28(%rbp),%edx
    15fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ff:	48 01 d0             	add    %rdx,%rax
    1602:	0f b6 10             	movzbl (%rax),%edx
    1605:	8b 75 d8             	mov    -0x28(%rbp),%esi
    1608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    160c:	48 01 f0             	add    %rsi,%rax
    160f:	31 ca                	xor    %ecx,%edx
    1611:	88 10                	mov    %dl,(%rax)
    1613:	83 bd 6c ff ff ff 04 	cmpl   $0x4,-0x94(%rbp)
    161a:	75 12                	jne    162e <loadbmp_decode_file+0x2f9>
    161c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    161f:	83 c0 03             	add    $0x3,%eax
    1622:	89 c2                	mov    %eax,%edx
    1624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1628:	48 01 d0             	add    %rdx,%rax
    162b:	c6 00 ff             	movb   $0xff,(%rax)
    162e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1632:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1635:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1638:	0f 82 00 ff ff ff    	jb     153e <loadbmp_decode_file+0x209>
    163e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1641:	89 d0                	mov    %edx,%eax
    1643:	01 c0                	add    %eax,%eax
    1645:	01 d0                	add    %edx,%eax
    1647:	f7 d8                	neg    %eax
    1649:	83 e0 03             	and    $0x3,%eax
    164c:	89 45 dc             	mov    %eax,-0x24(%rbp)
    164f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1652:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1656:	48 8d 45 9d          	lea    -0x63(%rbp),%rax
    165a:	be 01 00 00 00       	mov    $0x1,%esi
    165f:	48 89 c7             	mov    %rax,%rdi
    1662:	e8 19 fa ff ff       	callq  1080 <fread@plt>
    1667:	8b 55 dc             	mov    -0x24(%rbp),%edx
    166a:	48 39 d0             	cmp    %rdx,%rax
    166d:	74 1f                	je     168e <loadbmp_decode_file+0x359>
    166f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1673:	48 89 c7             	mov    %rax,%rdi
    1676:	e8 b5 f9 ff ff       	callq  1030 <free@plt>
    167b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    167f:	48 89 c7             	mov    %rax,%rdi
    1682:	e8 09 fa ff ff       	callq  1090 <fclose@plt>
    1687:	b8 04 00 00 00       	mov    $0x4,%eax
    168c:	eb 42                	jmp    16d0 <loadbmp_decode_file+0x39b>
    168e:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
    1692:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%rbp)
    1696:	0f 85 96 fe ff ff    	jne    1532 <loadbmp_decode_file+0x1fd>
    169c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    16a3:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    16a6:	89 10                	mov    %edx,(%rax)
    16a8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    16af:	8b 55 e0             	mov    -0x20(%rbp),%edx
    16b2:	89 10                	mov    %edx,(%rax)
    16b4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    16b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    16bc:	48 89 10             	mov    %rdx,(%rax)
    16bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16c3:	48 89 c7             	mov    %rax,%rdi
    16c6:	e8 c5 f9 ff ff       	callq  1090 <fclose@plt>
    16cb:	b8 00 00 00 00       	mov    $0x0,%eax
    16d0:	c9                   	leaveq 
    16d1:	c3                   	retq   

00000000000016d2 <loadbmp_encode_file>:
    16d2:	55                   	push   %rbp
    16d3:	48 89 e5             	mov    %rsp,%rbp
    16d6:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    16dd:	ff 15 05 69 00 00    	callq  *0x6905(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    16e3:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    16e7:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    16eb:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
    16f1:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%rbp)
    16f7:	44 89 85 74 ff ff ff 	mov    %r8d,-0x8c(%rbp)
    16fe:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1702:	48 8d 35 02 39 00 00 	lea    0x3902(%rip),%rsi        # 500b <_IO_stdin_used+0xb>
    1709:	48 89 c7             	mov    %rax,%rdi
    170c:	e8 3f fa ff ff       	callq  1150 <fopen@plt>
    1711:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1715:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    171a:	75 0a                	jne    1726 <loadbmp_encode_file+0x54>
    171c:	b8 03 00 00 00       	mov    $0x3,%eax
    1721:	e9 7b 02 00 00       	jmpq   19a1 <loadbmp_encode_file+0x2cf>
    1726:	48 c7 45 d6 42 4d 00 	movq   $0x4d42,-0x2a(%rbp)
    172d:	00 
    172e:	c7 45 de 00 00 36 00 	movl   $0x360000,-0x22(%rbp)
    1735:	66 c7 45 e2 00 00    	movw   $0x0,-0x1e(%rbp)
    173b:	b8 28 00 00 00       	mov    $0x28,%eax
    1740:	48 ba 00 00 00 00 01 	movabs $0x18000100000000,%rdx
    1747:	00 18 00 
    174a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    174e:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    1752:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    1759:	00 
    175a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    1761:	00 
    1762:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    1769:	00 
    176a:	66 c7 45 9d 00 00    	movw   $0x0,-0x63(%rbp)
    1770:	c6 45 9f 00          	movb   $0x0,-0x61(%rbp)
    1774:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    177a:	0f af 85 78 ff ff ff 	imul   -0x88(%rbp),%eax
    1781:	89 c2                	mov    %eax,%edx
    1783:	89 d0                	mov    %edx,%eax
    1785:	01 c0                	add    %eax,%eax
    1787:	01 d0                	add    %edx,%eax
    1789:	83 c0 36             	add    $0x36,%eax
    178c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    178f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1792:	88 45 d8             	mov    %al,-0x28(%rbp)
    1795:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1798:	c1 e8 08             	shr    $0x8,%eax
    179b:	88 45 d9             	mov    %al,-0x27(%rbp)
    179e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    17a1:	c1 e8 10             	shr    $0x10,%eax
    17a4:	88 45 da             	mov    %al,-0x26(%rbp)
    17a7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    17aa:	c1 e8 18             	shr    $0x18,%eax
    17ad:	88 45 db             	mov    %al,-0x25(%rbp)
    17b0:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    17b6:	88 45 a4             	mov    %al,-0x5c(%rbp)
    17b9:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    17bf:	c1 e8 08             	shr    $0x8,%eax
    17c2:	88 45 a5             	mov    %al,-0x5b(%rbp)
    17c5:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    17cb:	c1 e8 10             	shr    $0x10,%eax
    17ce:	88 45 a6             	mov    %al,-0x5a(%rbp)
    17d1:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    17d7:	c1 e8 18             	shr    $0x18,%eax
    17da:	88 45 a7             	mov    %al,-0x59(%rbp)
    17dd:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    17e3:	88 45 a8             	mov    %al,-0x58(%rbp)
    17e6:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    17ec:	c1 e8 08             	shr    $0x8,%eax
    17ef:	88 45 a9             	mov    %al,-0x57(%rbp)
    17f2:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    17f8:	c1 e8 10             	shr    $0x10,%eax
    17fb:	88 45 aa             	mov    %al,-0x56(%rbp)
    17fe:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    1804:	c1 e8 18             	shr    $0x18,%eax
    1807:	88 45 ab             	mov    %al,-0x55(%rbp)
    180a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    180e:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    1812:	48 89 d1             	mov    %rdx,%rcx
    1815:	ba 01 00 00 00       	mov    $0x1,%edx
    181a:	be 0e 00 00 00       	mov    $0xe,%esi
    181f:	48 89 c7             	mov    %rax,%rdi
    1822:	e8 89 f9 ff ff       	callq  11b0 <fwrite@plt>
    1827:	48 85 c0             	test   %rax,%rax
    182a:	75 16                	jne    1842 <loadbmp_encode_file+0x170>
    182c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1830:	48 89 c7             	mov    %rax,%rdi
    1833:	e8 58 f8 ff ff       	callq  1090 <fclose@plt>
    1838:	b8 03 00 00 00       	mov    $0x3,%eax
    183d:	e9 5f 01 00 00       	jmpq   19a1 <loadbmp_encode_file+0x2cf>
    1842:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1846:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    184a:	48 89 d1             	mov    %rdx,%rcx
    184d:	ba 01 00 00 00       	mov    $0x1,%edx
    1852:	be 28 00 00 00       	mov    $0x28,%esi
    1857:	48 89 c7             	mov    %rax,%rdi
    185a:	e8 51 f9 ff ff       	callq  11b0 <fwrite@plt>
    185f:	48 85 c0             	test   %rax,%rax
    1862:	75 16                	jne    187a <loadbmp_encode_file+0x1a8>
    1864:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1868:	48 89 c7             	mov    %rax,%rdi
    186b:	e8 20 f8 ff ff       	callq  1090 <fclose@plt>
    1870:	b8 03 00 00 00       	mov    $0x3,%eax
    1875:	e9 27 01 00 00       	jmpq   19a1 <loadbmp_encode_file+0x2cf>
    187a:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    1880:	83 e8 01             	sub    $0x1,%eax
    1883:	89 45 f8             	mov    %eax,-0x8(%rbp)
    1886:	e9 fb 00 00 00       	jmpq   1986 <loadbmp_encode_file+0x2b4>
    188b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1892:	e9 95 00 00 00       	jmpq   192c <loadbmp_encode_file+0x25a>
    1897:	8b 45 f8             	mov    -0x8(%rbp),%eax
    189a:	0f af 85 7c ff ff ff 	imul   -0x84(%rbp),%eax
    18a1:	89 c2                	mov    %eax,%edx
    18a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    18a6:	01 c2                	add    %eax,%edx
    18a8:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    18ae:	0f af c2             	imul   %edx,%eax
    18b1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    18b4:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    18b7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    18bb:	48 01 d0             	add    %rdx,%rax
    18be:	0f b7 10             	movzwl (%rax),%edx
    18c1:	66 89 55 9a          	mov    %dx,-0x66(%rbp)
    18c5:	0f b6 40 02          	movzbl 0x2(%rax),%eax
    18c9:	88 45 9c             	mov    %al,-0x64(%rbp)
    18cc:	0f b6 55 9a          	movzbl -0x66(%rbp),%edx
    18d0:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
    18d4:	31 d0                	xor    %edx,%eax
    18d6:	88 45 9a             	mov    %al,-0x66(%rbp)
    18d9:	0f b6 55 9a          	movzbl -0x66(%rbp),%edx
    18dd:	0f b6 45 9c          	movzbl -0x64(%rbp),%eax
    18e1:	31 d0                	xor    %edx,%eax
    18e3:	88 45 9c             	mov    %al,-0x64(%rbp)
    18e6:	0f b6 55 9c          	movzbl -0x64(%rbp),%edx
    18ea:	0f b6 45 9a          	movzbl -0x66(%rbp),%eax
    18ee:	31 d0                	xor    %edx,%eax
    18f0:	88 45 9a             	mov    %al,-0x66(%rbp)
    18f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    18f7:	48 8d 45 9a          	lea    -0x66(%rbp),%rax
    18fb:	48 89 d1             	mov    %rdx,%rcx
    18fe:	ba 01 00 00 00       	mov    $0x1,%edx
    1903:	be 03 00 00 00       	mov    $0x3,%esi
    1908:	48 89 c7             	mov    %rax,%rdi
    190b:	e8 a0 f8 ff ff       	callq  11b0 <fwrite@plt>
    1910:	48 85 c0             	test   %rax,%rax
    1913:	75 13                	jne    1928 <loadbmp_encode_file+0x256>
    1915:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1919:	48 89 c7             	mov    %rax,%rdi
    191c:	e8 6f f7 ff ff       	callq  1090 <fclose@plt>
    1921:	b8 03 00 00 00       	mov    $0x3,%eax
    1926:	eb 79                	jmp    19a1 <loadbmp_encode_file+0x2cf>
    1928:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    192c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    192f:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    1935:	0f 82 5c ff ff ff    	jb     1897 <loadbmp_encode_file+0x1c5>
    193b:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
    1941:	89 d0                	mov    %edx,%eax
    1943:	01 c0                	add    %eax,%eax
    1945:	01 d0                	add    %edx,%eax
    1947:	f7 d8                	neg    %eax
    1949:	83 e0 03             	and    $0x3,%eax
    194c:	89 45 e8             	mov    %eax,-0x18(%rbp)
    194f:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1952:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1956:	48 8d 45 9d          	lea    -0x63(%rbp),%rax
    195a:	be 01 00 00 00       	mov    $0x1,%esi
    195f:	48 89 c7             	mov    %rax,%rdi
    1962:	e8 49 f8 ff ff       	callq  11b0 <fwrite@plt>
    1967:	8b 55 e8             	mov    -0x18(%rbp),%edx
    196a:	48 39 d0             	cmp    %rdx,%rax
    196d:	74 13                	je     1982 <loadbmp_encode_file+0x2b0>
    196f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1973:	48 89 c7             	mov    %rax,%rdi
    1976:	e8 15 f7 ff ff       	callq  1090 <fclose@plt>
    197b:	b8 03 00 00 00       	mov    $0x3,%eax
    1980:	eb 1f                	jmp    19a1 <loadbmp_encode_file+0x2cf>
    1982:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
    1986:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
    198a:	0f 85 fb fe ff ff    	jne    188b <loadbmp_encode_file+0x1b9>
    1990:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1994:	48 89 c7             	mov    %rax,%rdi
    1997:	e8 f4 f6 ff ff       	callq  1090 <fclose@plt>
    199c:	b8 00 00 00 00       	mov    $0x0,%eax
    19a1:	c9                   	leaveq 
    19a2:	c3                   	retq   

00000000000019a3 <implementation_driver_reference_wraper>:
    19a3:	55                   	push   %rbp
    19a4:	48 89 e5             	mov    %rsp,%rbp
    19a7:	48 83 ec 40          	sub    $0x40,%rsp
    19ab:	ff 15 37 66 00 00    	callq  *0x6637(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    19b1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    19b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19b9:	48 8b 00             	mov    (%rax),%rax
    19bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    19c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19c4:	48 83 c0 08          	add    $0x8,%rax
    19c8:	48 8b 00             	mov    (%rax),%rax
    19cb:	89 45 f4             	mov    %eax,-0xc(%rbp)
    19ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19d2:	48 8b 40 10          	mov    0x10(%rax),%rax
    19d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    19da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19de:	48 83 c0 18          	add    $0x18,%rax
    19e2:	48 8b 00             	mov    (%rax),%rax
    19e5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    19e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19ec:	48 83 c0 20          	add    $0x20,%rax
    19f0:	48 8b 00             	mov    (%rax),%rax
    19f3:	89 45 e0             	mov    %eax,-0x20(%rbp)
    19f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19fa:	48 83 c0 20          	add    $0x20,%rax
    19fe:	48 8b 00             	mov    (%rax),%rax
    1a01:	48 85 c0             	test   %rax,%rax
    1a04:	0f 95 c0             	setne  %al
    1a07:	88 45 df             	mov    %al,-0x21(%rbp)
    1a0a:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1a0d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1a10:	89 d6                	mov    %edx,%esi
    1a12:	89 c7                	mov    %eax,%edi
    1a14:	e8 5e 09 00 00       	callq  2377 <allocateFrame>
    1a19:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1a1d:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    1a20:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1a23:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    1a27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2b:	48 89 c7             	mov    %rax,%rdi
    1a2e:	e8 94 09 00 00       	callq  23c7 <copyFrame>
    1a33:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1a37:	44 0f b6 45 df       	movzbl -0x21(%rbp),%r8d
    1a3c:	8b 7d e0             	mov    -0x20(%rbp),%edi
    1a3f:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1a42:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1a46:	8b 75 f4             	mov    -0xc(%rbp),%esi
    1a49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a4d:	45 89 c1             	mov    %r8d,%r9d
    1a50:	41 89 f8             	mov    %edi,%r8d
    1a53:	48 89 c7             	mov    %rax,%rdi
    1a56:	e8 8d 23 00 00       	callq  3de8 <implementation_driver_reference>
    1a5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1a5f:	48 89 c7             	mov    %rax,%rdi
    1a62:	e8 3f 09 00 00       	callq  23a6 <deallocateFrame>
    1a67:	90                   	nop
    1a68:	c9                   	leaveq 
    1a69:	c3                   	retq   

0000000000001a6a <implementation_driver_wraper>:
    1a6a:	55                   	push   %rbp
    1a6b:	48 89 e5             	mov    %rsp,%rbp
    1a6e:	48 83 ec 40          	sub    $0x40,%rsp
    1a72:	ff 15 70 65 00 00    	callq  *0x6570(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    1a78:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    1a7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1a80:	48 8b 00             	mov    (%rax),%rax
    1a83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1a87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1a8b:	48 83 c0 08          	add    $0x8,%rax
    1a8f:	48 8b 00             	mov    (%rax),%rax
    1a92:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1a95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1a99:	48 8b 40 10          	mov    0x10(%rax),%rax
    1a9d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1aa1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1aa5:	48 83 c0 18          	add    $0x18,%rax
    1aa9:	48 8b 00             	mov    (%rax),%rax
    1aac:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    1aaf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1ab3:	48 83 c0 20          	add    $0x20,%rax
    1ab7:	48 8b 00             	mov    (%rax),%rax
    1aba:	89 45 e0             	mov    %eax,-0x20(%rbp)
    1abd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1ac1:	48 83 c0 20          	add    $0x20,%rax
    1ac5:	48 8b 00             	mov    (%rax),%rax
    1ac8:	48 85 c0             	test   %rax,%rax
    1acb:	0f 95 c0             	setne  %al
    1ace:	88 45 df             	mov    %al,-0x21(%rbp)
    1ad1:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1ad4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1ad7:	89 d6                	mov    %edx,%esi
    1ad9:	89 c7                	mov    %eax,%edi
    1adb:	e8 97 08 00 00       	callq  2377 <allocateFrame>
    1ae0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1ae4:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    1ae7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1aea:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    1aee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1af2:	48 89 c7             	mov    %rax,%rdi
    1af5:	e8 cd 08 00 00       	callq  23c7 <copyFrame>
    1afa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1afe:	44 0f b6 45 df       	movzbl -0x21(%rbp),%r8d
    1b03:	8b 7d e0             	mov    -0x20(%rbp),%edi
    1b06:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1b09:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1b0d:	8b 75 f4             	mov    -0xc(%rbp),%esi
    1b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b14:	45 89 c1             	mov    %r8d,%r9d
    1b17:	41 89 f8             	mov    %edi,%r8d
    1b1a:	48 89 c7             	mov    %rax,%rdi
    1b1d:	e8 96 28 00 00       	callq  43b8 <implementation_driver>
    1b22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1b26:	48 89 c7             	mov    %rax,%rdi
    1b29:	e8 78 08 00 00       	callq  23a6 <deallocateFrame>
    1b2e:	90                   	nop
    1b2f:	c9                   	leaveq 
    1b30:	c3                   	retq   

0000000000001b31 <main>:
    1b31:	55                   	push   %rbp
    1b32:	48 89 e5             	mov    %rsp,%rbp
    1b35:	48 81 ec 00 81 02 00 	sub    $0x28100,%rsp
    1b3c:	ff 15 a6 64 00 00    	callq  *0x64a6(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    1b42:	89 bd 0c 7f fd ff    	mov    %edi,-0x280f4(%rbp)
    1b48:	48 89 b5 00 7f fd ff 	mov    %rsi,-0x28100(%rbp)
    1b4f:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    1b56:	00 
    1b57:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1b5e:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
    1b62:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1b69:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1b70:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1b77:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    1b7e:	e9 66 04 00 00       	jmpq   1fe9 <main+0x4b8>
    1b83:	83 7d e4 3f          	cmpl   $0x3f,-0x1c(%rbp)
    1b87:	0f 84 98 03 00 00    	je     1f25 <main+0x3f4>
    1b8d:	83 7d e4 3f          	cmpl   $0x3f,-0x1c(%rbp)
    1b91:	0f 8c 4d 04 00 00    	jl     1fe4 <main+0x4b3>
    1b97:	83 7d e4 72          	cmpl   $0x72,-0x1c(%rbp)
    1b9b:	0f 8f 43 04 00 00    	jg     1fe4 <main+0x4b3>
    1ba1:	83 7d e4 63          	cmpl   $0x63,-0x1c(%rbp)
    1ba5:	0f 8c 39 04 00 00    	jl     1fe4 <main+0x4b3>
    1bab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1bae:	83 e8 63             	sub    $0x63,%eax
    1bb1:	83 f8 0f             	cmp    $0xf,%eax
    1bb4:	0f 87 2a 04 00 00    	ja     1fe4 <main+0x4b3>
    1bba:	89 c0                	mov    %eax,%eax
    1bbc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1bc3:	00 
    1bc4:	48 8d 05 c9 37 00 00 	lea    0x37c9(%rip),%rax        # 5394 <_IO_stdin_used+0x394>
    1bcb:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    1bce:	48 98                	cltq   
    1bd0:	48 8d 15 bd 37 00 00 	lea    0x37bd(%rip),%rdx        # 5394 <_IO_stdin_used+0x394>
    1bd7:	48 01 d0             	add    %rdx,%rax
    1bda:	ff e0                	jmpq   *%rax
    1bdc:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
    1be0:	75 2a                	jne    1c0c <main+0xdb>
    1be2:	48 8b 05 57 65 00 00 	mov    0x6557(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1be9:	48 89 c1             	mov    %rax,%rcx
    1bec:	ba 48 00 00 00       	mov    $0x48,%edx
    1bf1:	be 01 00 00 00       	mov    $0x1,%esi
    1bf6:	48 8d 3d 13 34 00 00 	lea    0x3413(%rip),%rdi        # 5010 <_IO_stdin_used+0x10>
    1bfd:	e8 ae f5 ff ff       	callq  11b0 <fwrite@plt>
    1c02:	b8 01 00 00 00       	mov    $0x1,%eax
    1c07:	e9 8b 06 00 00       	jmpq   2297 <main+0x766>
    1c0c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
    1c13:	48 8b 05 06 65 00 00 	mov    0x6506(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    1c1a:	48 89 c6             	mov    %rax,%rsi
    1c1d:	48 8d 3d 3c 34 00 00 	lea    0x343c(%rip),%rdi        # 5060 <_IO_stdin_used+0x60>
    1c24:	b8 00 00 00 00       	mov    $0x0,%eax
    1c29:	e8 82 f4 ff ff       	callq  10b0 <printf@plt>
    1c2e:	48 8b 05 eb 64 00 00 	mov    0x64eb(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    1c35:	48 8d 35 5a 34 00 00 	lea    0x345a(%rip),%rsi        # 5096 <_IO_stdin_used+0x96>
    1c3c:	48 89 c7             	mov    %rax,%rdi
    1c3f:	e8 1c f5 ff ff       	callq  1160 <strtok@plt>
    1c44:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1c47:	48 63 d2             	movslq %edx,%rdx
    1c4a:	48 c1 e2 04          	shl    $0x4,%rdx
    1c4e:	48 01 ea             	add    %rbp,%rdx
    1c51:	48 81 ea 70 80 02 00 	sub    $0x28070,%rdx
    1c58:	48 89 02             	mov    %rax,(%rdx)
    1c5b:	48 8d 35 34 34 00 00 	lea    0x3434(%rip),%rsi        # 5096 <_IO_stdin_used+0x96>
    1c62:	bf 00 00 00 00       	mov    $0x0,%edi
    1c67:	e8 f4 f4 ff ff       	callq  1160 <strtok@plt>
    1c6c:	48 89 c7             	mov    %rax,%rdi
    1c6f:	e8 1c f5 ff ff       	callq  1190 <atoi@plt>
    1c74:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1c77:	48 63 d2             	movslq %edx,%rdx
    1c7a:	48 c1 e2 04          	shl    $0x4,%rdx
    1c7e:	48 01 ea             	add    %rbp,%rdx
    1c81:	48 81 ea 68 80 02 00 	sub    $0x28068,%rdx
    1c88:	89 02                	mov    %eax,(%rdx)
    1c8a:	eb 5b                	jmp    1ce7 <main+0x1b6>
    1c8c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1c90:	48 8d 35 ff 33 00 00 	lea    0x33ff(%rip),%rsi        # 5096 <_IO_stdin_used+0x96>
    1c97:	bf 00 00 00 00       	mov    $0x0,%edi
    1c9c:	e8 bf f4 ff ff       	callq  1160 <strtok@plt>
    1ca1:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca4:	48 63 d2             	movslq %edx,%rdx
    1ca7:	48 c1 e2 04          	shl    $0x4,%rdx
    1cab:	48 01 ea             	add    %rbp,%rdx
    1cae:	48 81 ea 70 80 02 00 	sub    $0x28070,%rdx
    1cb5:	48 89 02             	mov    %rax,(%rdx)
    1cb8:	48 8d 35 d7 33 00 00 	lea    0x33d7(%rip),%rsi        # 5096 <_IO_stdin_used+0x96>
    1cbf:	bf 00 00 00 00       	mov    $0x0,%edi
    1cc4:	e8 97 f4 ff ff       	callq  1160 <strtok@plt>
    1cc9:	48 89 c7             	mov    %rax,%rdi
    1ccc:	e8 bf f4 ff ff       	callq  1190 <atoi@plt>
    1cd1:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cd4:	48 63 d2             	movslq %edx,%rdx
    1cd7:	48 c1 e2 04          	shl    $0x4,%rdx
    1cdb:	48 01 ea             	add    %rbp,%rdx
    1cde:	48 81 ea 68 80 02 00 	sub    $0x28068,%rdx
    1ce5:	89 02                	mov    %eax,(%rdx)
    1ce7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1cea:	48 98                	cltq   
    1cec:	48 c1 e0 04          	shl    $0x4,%rax
    1cf0:	48 01 e8             	add    %rbp,%rax
    1cf3:	48 2d 70 80 02 00    	sub    $0x28070,%rax
    1cf9:	48 8b 00             	mov    (%rax),%rax
    1cfc:	48 85 c0             	test   %rax,%rax
    1cff:	75 8b                	jne    1c8c <main+0x15b>
    1d01:	e9 e3 02 00 00       	jmpq   1fe9 <main+0x4b8>
    1d06:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
    1d0a:	75 2a                	jne    1d36 <main+0x205>
    1d0c:	48 8b 05 2d 64 00 00 	mov    0x642d(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1d13:	48 89 c1             	mov    %rax,%rcx
    1d16:	ba 48 00 00 00       	mov    $0x48,%edx
    1d1b:	be 01 00 00 00       	mov    $0x1,%esi
    1d20:	48 8d 3d e9 32 00 00 	lea    0x32e9(%rip),%rdi        # 5010 <_IO_stdin_used+0x10>
    1d27:	e8 84 f4 ff ff       	callq  11b0 <fwrite@plt>
    1d2c:	b8 01 00 00 00       	mov    $0x1,%eax
    1d31:	e9 61 05 00 00       	jmpq   2297 <main+0x766>
    1d36:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    1d3d:	48 8b 05 dc 63 00 00 	mov    0x63dc(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    1d44:	48 89 c6             	mov    %rax,%rsi
    1d47:	48 8d 3d 52 33 00 00 	lea    0x3352(%rip),%rdi        # 50a0 <_IO_stdin_used+0xa0>
    1d4e:	b8 00 00 00 00       	mov    $0x0,%eax
    1d53:	e8 58 f3 ff ff       	callq  10b0 <printf@plt>
    1d58:	48 8b 05 c1 63 00 00 	mov    0x63c1(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    1d5f:	48 8d 35 64 33 00 00 	lea    0x3364(%rip),%rsi        # 50ca <_IO_stdin_used+0xca>
    1d66:	48 89 c7             	mov    %rax,%rdi
    1d69:	e8 e2 f3 ff ff       	callq  1150 <fopen@plt>
    1d6e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    1d72:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    1d77:	0f 84 e8 00 00 00    	je     1e65 <main+0x334>
    1d7d:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    1d84:	00 
    1d85:	e9 a9 00 00 00       	jmpq   1e33 <main+0x302>
    1d8a:	48 8d 85 10 7f fd ff 	lea    -0x280f0(%rbp),%rax
    1d91:	48 8d 35 fe 32 00 00 	lea    0x32fe(%rip),%rsi        # 5096 <_IO_stdin_used+0x96>
    1d98:	48 89 c7             	mov    %rax,%rdi
    1d9b:	e8 c0 f3 ff ff       	callq  1160 <strtok@plt>
    1da0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1da4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1da8:	48 89 c7             	mov    %rax,%rdi
    1dab:	e8 f0 f2 ff ff       	callq  10a0 <strlen@plt>
    1db0:	48 83 c0 01          	add    $0x1,%rax
    1db4:	48 89 c7             	mov    %rax,%rdi
    1db7:	e8 74 f3 ff ff       	callq  1130 <malloc@plt>
    1dbc:	48 89 c2             	mov    %rax,%rdx
    1dbf:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1dc2:	48 98                	cltq   
    1dc4:	48 c1 e0 04          	shl    $0x4,%rax
    1dc8:	48 01 e8             	add    %rbp,%rax
    1dcb:	48 2d 70 80 02 00    	sub    $0x28070,%rax
    1dd1:	48 89 10             	mov    %rdx,(%rax)
    1dd4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1dd7:	48 98                	cltq   
    1dd9:	48 c1 e0 04          	shl    $0x4,%rax
    1ddd:	48 01 e8             	add    %rbp,%rax
    1de0:	48 2d 70 80 02 00    	sub    $0x28070,%rax
    1de6:	48 8b 00             	mov    (%rax),%rax
    1de9:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1ded:	48 89 d6             	mov    %rdx,%rsi
    1df0:	48 89 c7             	mov    %rax,%rdi
    1df3:	e8 68 f2 ff ff       	callq  1060 <strcpy@plt>
    1df8:	48 8d 35 97 32 00 00 	lea    0x3297(%rip),%rsi        # 5096 <_IO_stdin_used+0x96>
    1dff:	bf 00 00 00 00       	mov    $0x0,%edi
    1e04:	e8 57 f3 ff ff       	callq  1160 <strtok@plt>
    1e09:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1e0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1e11:	48 89 c7             	mov    %rax,%rdi
    1e14:	e8 77 f3 ff ff       	callq  1190 <atoi@plt>
    1e19:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1e1c:	48 63 d2             	movslq %edx,%rdx
    1e1f:	48 c1 e2 04          	shl    $0x4,%rdx
    1e23:	48 01 ea             	add    %rbp,%rdx
    1e26:	48 81 ea 68 80 02 00 	sub    $0x28068,%rdx
    1e2d:	89 02                	mov    %eax,(%rdx)
    1e2f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1e33:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    1e37:	48 8d 85 10 7f fd ff 	lea    -0x280f0(%rbp),%rax
    1e3e:	be 80 00 00 00       	mov    $0x80,%esi
    1e43:	48 89 c7             	mov    %rax,%rdi
    1e46:	e8 95 f2 ff ff       	callq  10e0 <fgets@plt>
    1e4b:	48 85 c0             	test   %rax,%rax
    1e4e:	0f 85 36 ff ff ff    	jne    1d8a <main+0x259>
    1e54:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1e58:	48 89 c7             	mov    %rax,%rdi
    1e5b:	e8 30 f2 ff ff       	callq  1090 <fclose@plt>
    1e60:	e9 84 01 00 00       	jmpq   1fe9 <main+0x4b8>
    1e65:	48 8b 15 b4 62 00 00 	mov    0x62b4(%rip),%rdx        # 8120 <optarg@@GLIBC_2.2.5>
    1e6c:	48 8b 05 cd 62 00 00 	mov    0x62cd(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1e73:	48 8d 35 56 32 00 00 	lea    0x3256(%rip),%rsi        # 50d0 <_IO_stdin_used+0xd0>
    1e7a:	48 89 c7             	mov    %rax,%rdi
    1e7d:	b8 00 00 00 00       	mov    $0x0,%eax
    1e82:	e8 99 f2 ff ff       	callq  1120 <fprintf@plt>
    1e87:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1e8b:	48 89 c7             	mov    %rax,%rdi
    1e8e:	e8 fd f1 ff ff       	callq  1090 <fclose@plt>
    1e93:	b8 01 00 00 00       	mov    $0x1,%eax
    1e98:	e9 fa 03 00 00       	jmpq   2297 <main+0x766>
    1e9d:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    1ea4:	48 8b 05 75 62 00 00 	mov    0x6275(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    1eab:	48 89 c6             	mov    %rax,%rsi
    1eae:	48 8d 3d 4b 32 00 00 	lea    0x324b(%rip),%rdi        # 5100 <_IO_stdin_used+0x100>
    1eb5:	b8 00 00 00 00       	mov    $0x0,%eax
    1eba:	e8 f1 f1 ff ff       	callq  10b0 <printf@plt>
    1ebf:	48 8b 05 5a 62 00 00 	mov    0x625a(%rip),%rax        # 8120 <optarg@@GLIBC_2.2.5>
    1ec6:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    1eca:	48 8d 55 9c          	lea    -0x64(%rbp),%rdx
    1ece:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    1ed2:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    1ed8:	48 89 c7             	mov    %rax,%rdi
    1edb:	e8 55 f4 ff ff       	callq  1335 <loadbmp_decode_file>
    1ee0:	89 45 bc             	mov    %eax,-0x44(%rbp)
    1ee3:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    1ee7:	0f 84 fc 00 00 00    	je     1fe9 <main+0x4b8>
    1eed:	48 8b 05 4c 62 00 00 	mov    0x624c(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1ef4:	8b 55 bc             	mov    -0x44(%rbp),%edx
    1ef7:	48 8d 35 35 32 00 00 	lea    0x3235(%rip),%rsi        # 5133 <_IO_stdin_used+0x133>
    1efe:	48 89 c7             	mov    %rax,%rdi
    1f01:	b8 00 00 00 00       	mov    $0x0,%eax
    1f06:	e8 15 f2 ff ff       	callq  1120 <fprintf@plt>
    1f0b:	e9 d9 00 00 00       	jmpq   1fe9 <main+0x4b8>
    1f10:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    1f17:	e9 cd 00 00 00       	jmpq   1fe9 <main+0x4b8>
    1f1c:	c6 45 fb 01          	movb   $0x1,-0x5(%rbp)
    1f20:	e9 c4 00 00 00       	jmpq   1fe9 <main+0x4b8>
    1f25:	8b 05 fd 61 00 00    	mov    0x61fd(%rip),%eax        # 8128 <optopt@@GLIBC_2.2.5>
    1f2b:	83 f8 66             	cmp    $0x66,%eax
    1f2e:	74 16                	je     1f46 <main+0x415>
    1f30:	8b 05 f2 61 00 00    	mov    0x61f2(%rip),%eax        # 8128 <optopt@@GLIBC_2.2.5>
    1f36:	83 f8 63             	cmp    $0x63,%eax
    1f39:	74 0b                	je     1f46 <main+0x415>
    1f3b:	8b 05 e7 61 00 00    	mov    0x61e7(%rip),%eax        # 8128 <optopt@@GLIBC_2.2.5>
    1f41:	83 f8 69             	cmp    $0x69,%eax
    1f44:	75 2b                	jne    1f71 <main+0x440>
    1f46:	8b 15 dc 61 00 00    	mov    0x61dc(%rip),%edx        # 8128 <optopt@@GLIBC_2.2.5>
    1f4c:	48 8b 05 ed 61 00 00 	mov    0x61ed(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1f53:	48 8d 35 f6 31 00 00 	lea    0x31f6(%rip),%rsi        # 5150 <_IO_stdin_used+0x150>
    1f5a:	48 89 c7             	mov    %rax,%rdi
    1f5d:	b8 00 00 00 00       	mov    $0x0,%eax
    1f62:	e8 b9 f1 ff ff       	callq  1120 <fprintf@plt>
    1f67:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f6c:	e9 26 03 00 00       	jmpq   2297 <main+0x766>
    1f71:	e8 5a f2 ff ff       	callq  11d0 <__ctype_b_loc@plt>
    1f76:	48 8b 10             	mov    (%rax),%rdx
    1f79:	8b 05 a9 61 00 00    	mov    0x61a9(%rip),%eax        # 8128 <optopt@@GLIBC_2.2.5>
    1f7f:	48 98                	cltq   
    1f81:	48 01 c0             	add    %rax,%rax
    1f84:	48 01 d0             	add    %rdx,%rax
    1f87:	0f b7 00             	movzwl (%rax),%eax
    1f8a:	0f b7 c0             	movzwl %ax,%eax
    1f8d:	25 00 40 00 00       	and    $0x4000,%eax
    1f92:	85 c0                	test   %eax,%eax
    1f94:	74 23                	je     1fb9 <main+0x488>
    1f96:	8b 15 8c 61 00 00    	mov    0x618c(%rip),%edx        # 8128 <optopt@@GLIBC_2.2.5>
    1f9c:	48 8b 05 9d 61 00 00 	mov    0x619d(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1fa3:	48 8d 35 c8 31 00 00 	lea    0x31c8(%rip),%rsi        # 5172 <_IO_stdin_used+0x172>
    1faa:	48 89 c7             	mov    %rax,%rdi
    1fad:	b8 00 00 00 00       	mov    $0x0,%eax
    1fb2:	e8 69 f1 ff ff       	callq  1120 <fprintf@plt>
    1fb7:	eb 21                	jmp    1fda <main+0x4a9>
    1fb9:	8b 15 69 61 00 00    	mov    0x6169(%rip),%edx        # 8128 <optopt@@GLIBC_2.2.5>
    1fbf:	48 8b 05 7a 61 00 00 	mov    0x617a(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    1fc6:	48 8d 35 c3 31 00 00 	lea    0x31c3(%rip),%rsi        # 5190 <_IO_stdin_used+0x190>
    1fcd:	48 89 c7             	mov    %rax,%rdi
    1fd0:	b8 00 00 00 00       	mov    $0x0,%eax
    1fd5:	e8 46 f1 ff ff       	callq  1120 <fprintf@plt>
    1fda:	b8 01 00 00 00       	mov    $0x1,%eax
    1fdf:	e9 b3 02 00 00       	jmpq   2297 <main+0x766>
    1fe4:	e8 67 f0 ff ff       	callq  1050 <abort@plt>
    1fe9:	48 8b 8d 00 7f fd ff 	mov    -0x28100(%rbp),%rcx
    1ff0:	8b 85 0c 7f fd ff    	mov    -0x280f4(%rbp),%eax
    1ff6:	48 8d 15 b5 31 00 00 	lea    0x31b5(%rip),%rdx        # 51b2 <_IO_stdin_used+0x1b2>
    1ffd:	48 89 ce             	mov    %rcx,%rsi
    2000:	89 c7                	mov    %eax,%edi
    2002:	e8 69 f1 ff ff       	callq  1170 <getopt@plt>
    2007:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    200a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%rbp)
    200e:	0f 85 6f fb ff ff    	jne    1b83 <main+0x52>
    2014:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    2018:	75 26                	jne    2040 <main+0x50f>
    201a:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    201e:	75 20                	jne    2040 <main+0x50f>
    2020:	48 8b 05 19 61 00 00 	mov    0x6119(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    2027:	48 89 c1             	mov    %rax,%rcx
    202a:	ba 41 00 00 00       	mov    $0x41,%edx
    202f:	be 01 00 00 00       	mov    $0x1,%esi
    2034:	48 8d 3d 85 31 00 00 	lea    0x3185(%rip),%rdi        # 51c0 <_IO_stdin_used+0x1c0>
    203b:	e8 70 f1 ff ff       	callq  11b0 <fwrite@plt>
    2040:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    2044:	75 20                	jne    2066 <main+0x535>
    2046:	48 8b 05 f3 60 00 00 	mov    0x60f3(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    204d:	48 89 c1             	mov    %rax,%rcx
    2050:	ba 4a 00 00 00       	mov    $0x4a,%edx
    2055:	be 01 00 00 00       	mov    $0x1,%esi
    205a:	48 8d 3d a7 31 00 00 	lea    0x31a7(%rip),%rdi        # 5208 <_IO_stdin_used+0x208>
    2061:	e8 4a f1 ff ff       	callq  11b0 <fwrite@plt>
    2066:	b8 00 00 00 00       	mov    $0x0,%eax
    206b:	e8 6b 22 00 00       	callq  42db <print_team_info>
    2070:	48 8d 3d e1 31 00 00 	lea    0x31e1(%rip),%rdi        # 5258 <_IO_stdin_used+0x258>
    2077:	e8 f4 ef ff ff       	callq  1070 <puts@plt>
    207c:	8b 55 98             	mov    -0x68(%rbp),%edx
    207f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    2082:	89 d6                	mov    %edx,%esi
    2084:	89 c7                	mov    %eax,%edi
    2086:	e8 ec 02 00 00       	callq  2377 <allocateFrame>
    208b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    208f:	80 7d fb 00          	cmpb   $0x0,-0x5(%rbp)
    2093:	0f 84 79 01 00 00    	je     2212 <main+0x6e1>
    2099:	48 8d 3d 20 32 00 00 	lea    0x3220(%rip),%rdi        # 52c0 <_IO_stdin_used+0x2c0>
    20a0:	e8 cb ef ff ff       	callq  1070 <puts@plt>
    20a5:	c6 45 d7 01          	movb   $0x1,-0x29(%rbp)
    20a9:	48 8d 85 90 7f fd ff 	lea    -0x28070(%rbp),%rax
    20b0:	48 89 85 10 7f fd ff 	mov    %rax,-0x280f0(%rbp)
    20b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    20ba:	48 98                	cltq   
    20bc:	48 89 85 18 7f fd ff 	mov    %rax,-0x280e8(%rbp)
    20c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    20c7:	48 89 85 20 7f fd ff 	mov    %rax,-0x280e0(%rbp)
    20ce:	8b 45 9c             	mov    -0x64(%rbp),%eax
    20d1:	89 c0                	mov    %eax,%eax
    20d3:	48 89 85 28 7f fd ff 	mov    %rax,-0x280d8(%rbp)
    20da:	8b 45 98             	mov    -0x68(%rbp),%eax
    20dd:	89 c0                	mov    %eax,%eax
    20df:	48 89 85 30 7f fd ff 	mov    %rax,-0x280d0(%rbp)
    20e6:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
    20ea:	48 89 85 38 7f fd ff 	mov    %rax,-0x280c8(%rbp)
    20f1:	8b 4d 98             	mov    -0x68(%rbp),%ecx
    20f4:	8b 55 9c             	mov    -0x64(%rbp),%edx
    20f7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    20fb:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    20ff:	48 89 c7             	mov    %rax,%rdi
    2102:	e8 c0 02 00 00       	callq  23c7 <copyFrame>
    2107:	bf 00 00 80 00       	mov    $0x800000,%edi
    210c:	e8 4a 0b 00 00       	callq  2c5b <set_fcyc_cache_size>
    2111:	bf 01 00 00 00       	mov    $0x1,%edi
    2116:	e8 23 0b 00 00       	callq  2c3e <set_fcyc_clear_cache>
    211b:	bf 01 00 00 00       	mov    $0x1,%edi
    2120:	e8 a1 0b 00 00       	callq  2cc6 <set_fcyc_compensate>
    2125:	48 8d 85 10 7f fd ff 	lea    -0x280f0(%rbp),%rax
    212c:	48 89 c6             	mov    %rax,%rsi
    212f:	48 8d 3d 6d f8 ff ff 	lea    -0x793(%rip),%rdi        # 19a3 <implementation_driver_reference_wraper>
    2136:	e8 c8 09 00 00       	callq  2b03 <fcyc_v>
    213b:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2140:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2144:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2148:	66 48 0f 6e c0       	movq   %rax,%xmm0
    214d:	48 8d 3d 84 31 00 00 	lea    0x3184(%rip),%rdi        # 52d8 <_IO_stdin_used+0x2d8>
    2154:	b8 01 00 00 00       	mov    $0x1,%eax
    2159:	e8 52 ef ff ff       	callq  10b0 <printf@plt>
    215e:	8b 4d 98             	mov    -0x68(%rbp),%ecx
    2161:	8b 55 9c             	mov    -0x64(%rbp),%edx
    2164:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2168:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    216c:	48 89 c7             	mov    %rax,%rdi
    216f:	e8 53 02 00 00       	callq  23c7 <copyFrame>
    2174:	bf 00 00 80 00       	mov    $0x800000,%edi
    2179:	e8 dd 0a 00 00       	callq  2c5b <set_fcyc_cache_size>
    217e:	bf 01 00 00 00       	mov    $0x1,%edi
    2183:	e8 b6 0a 00 00       	callq  2c3e <set_fcyc_clear_cache>
    2188:	bf 01 00 00 00       	mov    $0x1,%edi
    218d:	e8 34 0b 00 00       	callq  2cc6 <set_fcyc_compensate>
    2192:	48 8d 85 10 7f fd ff 	lea    -0x280f0(%rbp),%rax
    2199:	48 89 c6             	mov    %rax,%rsi
    219c:	48 8d 3d c7 f8 ff ff 	lea    -0x739(%rip),%rdi        # 1a6a <implementation_driver_wraper>
    21a3:	e8 5b 09 00 00       	callq  2b03 <fcyc_v>
    21a8:	66 48 0f 7e c0       	movq   %xmm0,%rax
    21ad:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    21b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    21b5:	66 48 0f 6e c0       	movq   %rax,%xmm0
    21ba:	48 8d 3d 5f 31 00 00 	lea    0x315f(%rip),%rdi        # 5320 <_IO_stdin_used+0x320>
    21c1:	b8 01 00 00 00       	mov    $0x1,%eax
    21c6:	e8 e5 ee ff ff       	callq  10b0 <printf@plt>
    21cb:	b8 00 00 00 00       	mov    $0x0,%eax
    21d0:	e8 ae 04 00 00       	callq  2683 <verifiedAllFramesGrading>
    21d5:	f2 0f 10 45 c8       	movsd  -0x38(%rbp),%xmm0
    21da:	66 0f 28 c8          	movapd %xmm0,%xmm1
    21de:	f2 0f 5e 4d c0       	divsd  -0x40(%rbp),%xmm1
    21e3:	f2 0f 10 05 ed 31 00 	movsd  0x31ed(%rip),%xmm0        # 53d8 <_IO_stdin_used+0x3d8>
    21ea:	00 
    21eb:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    21ef:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    21f3:	89 c6                	mov    %eax,%esi
    21f5:	48 8d 3d 64 31 00 00 	lea    0x3164(%rip),%rdi        # 5360 <_IO_stdin_used+0x360>
    21fc:	b8 00 00 00 00       	mov    $0x0,%eax
    2201:	e8 aa ee ff ff       	callq  10b0 <printf@plt>
    2206:	48 8d 3d 4b 30 00 00 	lea    0x304b(%rip),%rdi        # 5258 <_IO_stdin_used+0x258>
    220d:	e8 5e ee ff ff       	callq  1070 <puts@plt>
    2212:	8b 4d 98             	mov    -0x68(%rbp),%ecx
    2215:	8b 55 9c             	mov    -0x64(%rbp),%edx
    2218:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    221c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    2220:	48 89 c7             	mov    %rax,%rdi
    2223:	e8 9f 01 00 00       	callq  23c7 <copyFrame>
    2228:	8b 7d 98             	mov    -0x68(%rbp),%edi
    222b:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
    222e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2232:	8b 75 fc             	mov    -0x4(%rbp),%esi
    2235:	48 8d 85 90 7f fd ff 	lea    -0x28070(%rbp),%rax
    223c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    2242:	41 89 f8             	mov    %edi,%r8d
    2245:	48 89 c7             	mov    %rax,%rdi
    2248:	e8 9b 1b 00 00       	callq  3de8 <implementation_driver_reference>
    224d:	8b 4d 98             	mov    -0x68(%rbp),%ecx
    2250:	8b 55 9c             	mov    -0x64(%rbp),%edx
    2253:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2257:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    225b:	48 89 c7             	mov    %rax,%rdi
    225e:	e8 64 01 00 00       	callq  23c7 <copyFrame>
    2263:	8b 7d 98             	mov    -0x68(%rbp),%edi
    2266:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
    2269:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    226d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    2270:	48 8d 85 90 7f fd ff 	lea    -0x28070(%rbp),%rax
    2277:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    227d:	41 89 f8             	mov    %edi,%r8d
    2280:	48 89 c7             	mov    %rax,%rdi
    2283:	e8 30 21 00 00       	callq  43b8 <implementation_driver>
    2288:	b8 00 00 00 00       	mov    $0x0,%eax
    228d:	e8 b5 03 00 00       	callq  2647 <verifiedAllFrames>
    2292:	b8 00 00 00 00       	mov    $0x0,%eax
    2297:	c9                   	leaveq 
    2298:	c3                   	retq   

0000000000002299 <printBMP>:
    2299:	55                   	push   %rbp
    229a:	48 89 e5             	mov    %rsp,%rbp
    229d:	48 83 ec 20          	sub    $0x20,%rsp
    22a1:	ff 15 41 5d 00 00    	callq  *0x5d41(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    22a7:	89 7d ec             	mov    %edi,-0x14(%rbp)
    22aa:	89 75 e8             	mov    %esi,-0x18(%rbp)
    22ad:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    22b1:	48 8d 3d 28 31 00 00 	lea    0x3128(%rip),%rdi        # 53e0 <_IO_stdin_used+0x3e0>
    22b8:	e8 b3 ed ff ff       	callq  1070 <puts@plt>
    22bd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    22c4:	e9 93 00 00 00       	jmpq   235c <printBMP+0xc3>
    22c9:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    22d0:	eb 74                	jmp    2346 <printBMP+0xad>
    22d2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    22d5:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    22d9:	89 c2                	mov    %eax,%edx
    22db:	89 d0                	mov    %edx,%eax
    22dd:	01 c0                	add    %eax,%eax
    22df:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    22e2:	8b 55 f8             	mov    -0x8(%rbp),%edx
    22e5:	89 d0                	mov    %edx,%eax
    22e7:	01 c0                	add    %eax,%eax
    22e9:	01 d0                	add    %edx,%eax
    22eb:	01 c8                	add    %ecx,%eax
    22ed:	89 45 f4             	mov    %eax,-0xc(%rbp)
    22f0:	8b 45 f4             	mov    -0xc(%rbp),%eax
    22f3:	48 98                	cltq   
    22f5:	48 8d 50 02          	lea    0x2(%rax),%rdx
    22f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    22fd:	48 01 d0             	add    %rdx,%rax
    2300:	0f b6 00             	movzbl (%rax),%eax
    2303:	0f b6 c8             	movzbl %al,%ecx
    2306:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2309:	48 98                	cltq   
    230b:	48 8d 50 01          	lea    0x1(%rax),%rdx
    230f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2313:	48 01 d0             	add    %rdx,%rax
    2316:	0f b6 00             	movzbl (%rax),%eax
    2319:	0f b6 d0             	movzbl %al,%edx
    231c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    231f:	48 63 f0             	movslq %eax,%rsi
    2322:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2326:	48 01 f0             	add    %rsi,%rax
    2329:	0f b6 00             	movzbl (%rax),%eax
    232c:	0f b6 c0             	movzbl %al,%eax
    232f:	89 c6                	mov    %eax,%esi
    2331:	48 8d 3d 10 31 00 00 	lea    0x3110(%rip),%rdi        # 5448 <_IO_stdin_used+0x448>
    2338:	b8 00 00 00 00       	mov    $0x0,%eax
    233d:	e8 6e ed ff ff       	callq  10b0 <printf@plt>
    2342:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    2346:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2349:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    234c:	77 84                	ja     22d2 <printBMP+0x39>
    234e:	bf 0a 00 00 00       	mov    $0xa,%edi
    2353:	e8 e8 ec ff ff       	callq  1040 <putchar@plt>
    2358:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    235c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    235f:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    2362:	0f 87 61 ff ff ff    	ja     22c9 <printBMP+0x30>
    2368:	48 8d 3d 71 30 00 00 	lea    0x3071(%rip),%rdi        # 53e0 <_IO_stdin_used+0x3e0>
    236f:	e8 fc ec ff ff       	callq  1070 <puts@plt>
    2374:	90                   	nop
    2375:	c9                   	leaveq 
    2376:	c3                   	retq   

0000000000002377 <allocateFrame>:
    2377:	55                   	push   %rbp
    2378:	48 89 e5             	mov    %rsp,%rbp
    237b:	48 83 ec 10          	sub    $0x10,%rsp
    237f:	ff 15 63 5c 00 00    	callq  *0x5c63(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2385:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2388:	89 75 f8             	mov    %esi,-0x8(%rbp)
    238b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    238e:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2392:	89 c2                	mov    %eax,%edx
    2394:	89 d0                	mov    %edx,%eax
    2396:	01 c0                	add    %eax,%eax
    2398:	01 d0                	add    %edx,%eax
    239a:	89 c0                	mov    %eax,%eax
    239c:	48 89 c7             	mov    %rax,%rdi
    239f:	e8 8c ed ff ff       	callq  1130 <malloc@plt>
    23a4:	c9                   	leaveq 
    23a5:	c3                   	retq   

00000000000023a6 <deallocateFrame>:
    23a6:	55                   	push   %rbp
    23a7:	48 89 e5             	mov    %rsp,%rbp
    23aa:	48 83 ec 10          	sub    $0x10,%rsp
    23ae:	ff 15 34 5c 00 00    	callq  *0x5c34(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    23b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    23b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    23bc:	48 89 c7             	mov    %rax,%rdi
    23bf:	e8 6c ec ff ff       	callq  1030 <free@plt>
    23c4:	90                   	nop
    23c5:	c9                   	leaveq 
    23c6:	c3                   	retq   

00000000000023c7 <copyFrame>:
    23c7:	55                   	push   %rbp
    23c8:	48 89 e5             	mov    %rsp,%rbp
    23cb:	48 83 ec 28          	sub    $0x28,%rsp
    23cf:	ff 15 13 5c 00 00    	callq  *0x5c13(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    23d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    23d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    23dd:	89 55 dc             	mov    %edx,-0x24(%rbp)
    23e0:	89 4d d8             	mov    %ecx,-0x28(%rbp)
    23e3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    23ea:	e9 a9 00 00 00       	jmpq   2498 <copyFrame+0xd1>
    23ef:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    23f6:	e9 8d 00 00 00       	jmpq   2488 <copyFrame+0xc1>
    23fb:	8b 45 fc             	mov    -0x4(%rbp),%eax
    23fe:	0f af 45 dc          	imul   -0x24(%rbp),%eax
    2402:	89 c2                	mov    %eax,%edx
    2404:	89 d0                	mov    %edx,%eax
    2406:	01 c0                	add    %eax,%eax
    2408:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    240b:	8b 55 f8             	mov    -0x8(%rbp),%edx
    240e:	89 d0                	mov    %edx,%eax
    2410:	01 c0                	add    %eax,%eax
    2412:	01 d0                	add    %edx,%eax
    2414:	01 c8                	add    %ecx,%eax
    2416:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2419:	8b 45 f4             	mov    -0xc(%rbp),%eax
    241c:	48 63 d0             	movslq %eax,%rdx
    241f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2423:	48 01 d0             	add    %rdx,%rax
    2426:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2429:	48 63 ca             	movslq %edx,%rcx
    242c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2430:	48 01 ca             	add    %rcx,%rdx
    2433:	0f b6 00             	movzbl (%rax),%eax
    2436:	88 02                	mov    %al,(%rdx)
    2438:	8b 45 f4             	mov    -0xc(%rbp),%eax
    243b:	48 98                	cltq   
    243d:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2441:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2445:	48 01 d0             	add    %rdx,%rax
    2448:	8b 55 f4             	mov    -0xc(%rbp),%edx
    244b:	48 63 d2             	movslq %edx,%rdx
    244e:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    2452:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2456:	48 01 ca             	add    %rcx,%rdx
    2459:	0f b6 00             	movzbl (%rax),%eax
    245c:	88 02                	mov    %al,(%rdx)
    245e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2461:	48 98                	cltq   
    2463:	48 8d 50 02          	lea    0x2(%rax),%rdx
    2467:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    246b:	48 01 d0             	add    %rdx,%rax
    246e:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2471:	48 63 d2             	movslq %edx,%rdx
    2474:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    2478:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    247c:	48 01 ca             	add    %rcx,%rdx
    247f:	0f b6 00             	movzbl (%rax),%eax
    2482:	88 02                	mov    %al,(%rdx)
    2484:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    2488:	8b 45 f8             	mov    -0x8(%rbp),%eax
    248b:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    248e:	0f 87 67 ff ff ff    	ja     23fb <copyFrame+0x34>
    2494:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2498:	8b 45 fc             	mov    -0x4(%rbp),%eax
    249b:	39 45 d8             	cmp    %eax,-0x28(%rbp)
    249e:	0f 87 4b ff ff ff    	ja     23ef <copyFrame+0x28>
    24a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    24a8:	c9                   	leaveq 
    24a9:	c3                   	retq   

00000000000024aa <recordFrame>:
    24aa:	55                   	push   %rbp
    24ab:	48 89 e5             	mov    %rsp,%rbp
    24ae:	53                   	push   %rbx
    24af:	48 83 ec 28          	sub    $0x28,%rsp
    24b3:	ff 15 2f 5b 00 00    	callq  *0x5b2f(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    24b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    24bd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    24c0:	89 55 e0             	mov    %edx,-0x20(%rbp)
    24c3:	89 c8                	mov    %ecx,%eax
    24c5:	88 45 dc             	mov    %al,-0x24(%rbp)
    24c8:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
    24cc:	74 11                	je     24df <recordFrame+0x35>
    24ce:	8b 05 cc 7b 00 00    	mov    0x7bcc(%rip),%eax        # a0a0 <recorded_frames_count>
    24d4:	83 c0 01             	add    $0x1,%eax
    24d7:	89 05 c3 7b 00 00    	mov    %eax,0x7bc3(%rip)        # a0a0 <recorded_frames_count>
    24dd:	eb 66                	jmp    2545 <recordFrame+0x9b>
    24df:	8b 1d bb 7b 00 00    	mov    0x7bbb(%rip),%ebx        # a0a0 <recorded_frames_count>
    24e5:	8b 55 e0             	mov    -0x20(%rbp),%edx
    24e8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    24eb:	89 d6                	mov    %edx,%esi
    24ed:	89 c7                	mov    %eax,%edi
    24ef:	e8 83 fe ff ff       	callq  2377 <allocateFrame>
    24f4:	89 da                	mov    %ebx,%edx
    24f6:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    24fd:	00 
    24fe:	48 8d 15 5b 5c 00 00 	lea    0x5c5b(%rip),%rdx        # 8160 <recorded_frames>
    2505:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
    2509:	8b 05 91 7b 00 00    	mov    0x7b91(%rip),%eax        # a0a0 <recorded_frames_count>
    250f:	89 c0                	mov    %eax,%eax
    2511:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2518:	00 
    2519:	48 8d 05 40 5c 00 00 	lea    0x5c40(%rip),%rax        # 8160 <recorded_frames>
    2520:	48 8b 34 02          	mov    (%rdx,%rax,1),%rsi
    2524:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    2527:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    252a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    252e:	48 89 c7             	mov    %rax,%rdi
    2531:	e8 91 fe ff ff       	callq  23c7 <copyFrame>
    2536:	8b 05 64 7b 00 00    	mov    0x7b64(%rip),%eax        # a0a0 <recorded_frames_count>
    253c:	83 c0 01             	add    $0x1,%eax
    253f:	89 05 5b 7b 00 00    	mov    %eax,0x7b5b(%rip)        # a0a0 <recorded_frames_count>
    2545:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2549:	c9                   	leaveq 
    254a:	c3                   	retq   

000000000000254b <verifyFrame>:
    254b:	55                   	push   %rbp
    254c:	48 89 e5             	mov    %rsp,%rbp
    254f:	48 83 ec 20          	sub    $0x20,%rsp
    2553:	ff 15 8f 5a 00 00    	callq  *0x5a8f(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2559:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    255d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    2560:	89 55 f0             	mov    %edx,-0x10(%rbp)
    2563:	89 c8                	mov    %ecx,%eax
    2565:	88 45 ec             	mov    %al,-0x14(%rbp)
    2568:	80 7d ec 00          	cmpb   $0x0,-0x14(%rbp)
    256c:	74 14                	je     2582 <verifyFrame+0x37>
    256e:	8b 05 30 7b 00 00    	mov    0x7b30(%rip),%eax        # a0a4 <verified_frames_count>
    2574:	83 c0 01             	add    $0x1,%eax
    2577:	89 05 27 7b 00 00    	mov    %eax,0x7b27(%rip)        # a0a4 <verified_frames_count>
    257d:	e9 c3 00 00 00       	jmpq   2645 <verifyFrame+0xfa>
    2582:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2585:	0f af 45 f0          	imul   -0x10(%rbp),%eax
    2589:	89 c2                	mov    %eax,%edx
    258b:	89 d0                	mov    %edx,%eax
    258d:	01 c0                	add    %eax,%eax
    258f:	01 d0                	add    %edx,%eax
    2591:	89 c6                	mov    %eax,%esi
    2593:	8b 05 0b 7b 00 00    	mov    0x7b0b(%rip),%eax        # a0a4 <verified_frames_count>
    2599:	89 c0                	mov    %eax,%eax
    259b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    25a2:	00 
    25a3:	48 8d 05 b6 5b 00 00 	lea    0x5bb6(%rip),%rax        # 8160 <recorded_frames>
    25aa:	48 8b 0c 02          	mov    (%rdx,%rax,1),%rcx
    25ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25b2:	48 89 f2             	mov    %rsi,%rdx
    25b5:	48 89 ce             	mov    %rcx,%rsi
    25b8:	48 89 c7             	mov    %rax,%rdi
    25bb:	e8 10 eb ff ff       	callq  10d0 <memcmp@plt>
    25c0:	85 c0                	test   %eax,%eax
    25c2:	74 23                	je     25e7 <verifyFrame+0x9c>
    25c4:	8b 05 da 7a 00 00    	mov    0x7ada(%rip),%eax        # a0a4 <verified_frames_count>
    25ca:	89 c6                	mov    %eax,%esi
    25cc:	48 8d 3d 8d 2e 00 00 	lea    0x2e8d(%rip),%rdi        # 5460 <_IO_stdin_used+0x460>
    25d3:	b8 00 00 00 00       	mov    $0x0,%eax
    25d8:	e8 d3 ea ff ff       	callq  10b0 <printf@plt>
    25dd:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    25e2:	e8 b9 eb ff ff       	callq  11a0 <exit@plt>
    25e7:	8b 05 b7 7a 00 00    	mov    0x7ab7(%rip),%eax        # a0a4 <verified_frames_count>
    25ed:	89 c6                	mov    %eax,%esi
    25ef:	48 8d 3d b2 2e 00 00 	lea    0x2eb2(%rip),%rdi        # 54a8 <_IO_stdin_used+0x4a8>
    25f6:	b8 00 00 00 00       	mov    $0x0,%eax
    25fb:	e8 b0 ea ff ff       	callq  10b0 <printf@plt>
    2600:	8b 05 9e 7a 00 00    	mov    0x7a9e(%rip),%eax        # a0a4 <verified_frames_count>
    2606:	83 c0 01             	add    $0x1,%eax
    2609:	89 05 95 7a 00 00    	mov    %eax,0x7a95(%rip)        # a0a4 <verified_frames_count>
    260f:	8b 15 8f 7a 00 00    	mov    0x7a8f(%rip),%edx        # a0a4 <verified_frames_count>
    2615:	8b 05 85 7a 00 00    	mov    0x7a85(%rip),%eax        # a0a0 <recorded_frames_count>
    261b:	39 c2                	cmp    %eax,%edx
    261d:	76 26                	jbe    2645 <verifyFrame+0xfa>
    261f:	8b 05 7f 7a 00 00    	mov    0x7a7f(%rip),%eax        # a0a4 <verified_frames_count>
    2625:	83 e8 01             	sub    $0x1,%eax
    2628:	89 c6                	mov    %eax,%esi
    262a:	48 8d 3d c7 2e 00 00 	lea    0x2ec7(%rip),%rdi        # 54f8 <_IO_stdin_used+0x4f8>
    2631:	b8 00 00 00 00       	mov    $0x0,%eax
    2636:	e8 75 ea ff ff       	callq  10b0 <printf@plt>
    263b:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    2640:	e8 5b eb ff ff       	callq  11a0 <exit@plt>
    2645:	c9                   	leaveq 
    2646:	c3                   	retq   

0000000000002647 <verifiedAllFrames>:
    2647:	55                   	push   %rbp
    2648:	48 89 e5             	mov    %rsp,%rbp
    264b:	ff 15 97 59 00 00    	callq  *0x5997(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2651:	8b 15 4d 7a 00 00    	mov    0x7a4d(%rip),%edx        # a0a4 <verified_frames_count>
    2657:	8b 05 43 7a 00 00    	mov    0x7a43(%rip),%eax        # a0a0 <recorded_frames_count>
    265d:	39 c2                	cmp    %eax,%edx
    265f:	73 1f                	jae    2680 <verifiedAllFrames+0x39>
    2661:	8b 15 39 7a 00 00    	mov    0x7a39(%rip),%edx        # a0a0 <recorded_frames_count>
    2667:	8b 05 37 7a 00 00    	mov    0x7a37(%rip),%eax        # a0a4 <verified_frames_count>
    266d:	89 c6                	mov    %eax,%esi
    266f:	48 8d 3d d2 2e 00 00 	lea    0x2ed2(%rip),%rdi        # 5548 <_IO_stdin_used+0x548>
    2676:	b8 00 00 00 00       	mov    $0x0,%eax
    267b:	e8 30 ea ff ff       	callq  10b0 <printf@plt>
    2680:	90                   	nop
    2681:	5d                   	pop    %rbp
    2682:	c3                   	retq   

0000000000002683 <verifiedAllFramesGrading>:
    2683:	55                   	push   %rbp
    2684:	48 89 e5             	mov    %rsp,%rbp
    2687:	ff 15 5b 59 00 00    	callq  *0x595b(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    268d:	8b 05 0d 7a 00 00    	mov    0x7a0d(%rip),%eax        # a0a0 <recorded_frames_count>
    2693:	85 c0                	test   %eax,%eax
    2695:	75 25                	jne    26bc <verifiedAllFramesGrading+0x39>
    2697:	8b 05 07 7a 00 00    	mov    0x7a07(%rip),%eax        # a0a4 <verified_frames_count>
    269d:	85 c0                	test   %eax,%eax
    269f:	75 1b                	jne    26bc <verifiedAllFramesGrading+0x39>
    26a1:	48 8d 3d e8 2e 00 00 	lea    0x2ee8(%rip),%rdi        # 5590 <_IO_stdin_used+0x590>
    26a8:	b8 00 00 00 00       	mov    $0x0,%eax
    26ad:	e8 fe e9 ff ff       	callq  10b0 <printf@plt>
    26b2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    26b7:	e8 e4 ea ff ff       	callq  11a0 <exit@plt>
    26bc:	c7 05 da 79 00 00 00 	movl   $0x0,0x79da(%rip)        # a0a0 <recorded_frames_count>
    26c3:	00 00 00 
    26c6:	c7 05 d4 79 00 00 00 	movl   $0x0,0x79d4(%rip)        # a0a4 <verified_frames_count>
    26cd:	00 00 00 
    26d0:	90                   	nop
    26d1:	5d                   	pop    %rbp
    26d2:	c3                   	retq   

00000000000026d3 <init_sampler>:
    26d3:	55                   	push   %rbp
    26d4:	48 89 e5             	mov    %rsp,%rbp
    26d7:	ff 15 0b 59 00 00    	callq  *0x590b(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    26dd:	48 8b 05 d4 79 00 00 	mov    0x79d4(%rip),%rax        # a0b8 <values>
    26e4:	48 85 c0             	test   %rax,%rax
    26e7:	74 0f                	je     26f8 <init_sampler+0x25>
    26e9:	48 8b 05 c8 79 00 00 	mov    0x79c8(%rip),%rax        # a0b8 <values>
    26f0:	48 89 c7             	mov    %rax,%rdi
    26f3:	e8 38 e9 ff ff       	callq  1030 <free@plt>
    26f8:	8b 05 02 5a 00 00    	mov    0x5a02(%rip),%eax        # 8100 <kbest>
    26fe:	48 98                	cltq   
    2700:	be 08 00 00 00       	mov    $0x8,%esi
    2705:	48 89 c7             	mov    %rax,%rdi
    2708:	e8 e3 e9 ff ff       	callq  10f0 <calloc@plt>
    270d:	48 89 05 a4 79 00 00 	mov    %rax,0x79a4(%rip)        # a0b8 <values>
    2714:	c7 05 a2 79 00 00 00 	movl   $0x0,0x79a2(%rip)        # a0c0 <samplecount>
    271b:	00 00 00 
    271e:	90                   	nop
    271f:	5d                   	pop    %rbp
    2720:	c3                   	retq   

0000000000002721 <add_sample>:
    2721:	55                   	push   %rbp
    2722:	48 89 e5             	mov    %rsp,%rbp
    2725:	48 83 ec 18          	sub    $0x18,%rsp
    2729:	ff 15 b9 58 00 00    	callq  *0x58b9(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    272f:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    2734:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    273b:	8b 15 7f 79 00 00    	mov    0x797f(%rip),%edx        # a0c0 <samplecount>
    2741:	8b 05 b9 59 00 00    	mov    0x59b9(%rip),%eax        # 8100 <kbest>
    2747:	39 c2                	cmp    %eax,%edx
    2749:	7d 27                	jge    2772 <add_sample+0x51>
    274b:	8b 05 6f 79 00 00    	mov    0x796f(%rip),%eax        # a0c0 <samplecount>
    2751:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2754:	48 8b 15 5d 79 00 00 	mov    0x795d(%rip),%rdx        # a0b8 <values>
    275b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    275e:	48 98                	cltq   
    2760:	48 c1 e0 03          	shl    $0x3,%rax
    2764:	48 01 d0             	add    %rdx,%rax
    2767:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    276c:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    2770:	eb 4d                	jmp    27bf <add_sample+0x9e>
    2772:	48 8b 15 3f 79 00 00 	mov    0x793f(%rip),%rdx        # a0b8 <values>
    2779:	8b 05 81 59 00 00    	mov    0x5981(%rip),%eax        # 8100 <kbest>
    277f:	48 98                	cltq   
    2781:	48 c1 e0 03          	shl    $0x3,%rax
    2785:	48 83 e8 08          	sub    $0x8,%rax
    2789:	48 01 d0             	add    %rdx,%rax
    278c:	f2 0f 10 00          	movsd  (%rax),%xmm0
    2790:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
    2795:	76 28                	jbe    27bf <add_sample+0x9e>
    2797:	8b 05 63 59 00 00    	mov    0x5963(%rip),%eax        # 8100 <kbest>
    279d:	83 e8 01             	sub    $0x1,%eax
    27a0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    27a3:	48 8b 15 0e 79 00 00 	mov    0x790e(%rip),%rdx        # a0b8 <values>
    27aa:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27ad:	48 98                	cltq   
    27af:	48 c1 e0 03          	shl    $0x3,%rax
    27b3:	48 01 d0             	add    %rdx,%rax
    27b6:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    27bb:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    27bf:	8b 05 fb 78 00 00    	mov    0x78fb(%rip),%eax        # a0c0 <samplecount>
    27c5:	83 c0 01             	add    $0x1,%eax
    27c8:	89 05 f2 78 00 00    	mov    %eax,0x78f2(%rip)        # a0c0 <samplecount>
    27ce:	eb 72                	jmp    2842 <add_sample+0x121>
    27d0:	48 8b 15 e1 78 00 00 	mov    0x78e1(%rip),%rdx        # a0b8 <values>
    27d7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27da:	48 98                	cltq   
    27dc:	48 c1 e0 03          	shl    $0x3,%rax
    27e0:	48 83 e8 08          	sub    $0x8,%rax
    27e4:	48 01 d0             	add    %rdx,%rax
    27e7:	f2 0f 10 00          	movsd  (%rax),%xmm0
    27eb:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    27f0:	48 8b 15 c1 78 00 00 	mov    0x78c1(%rip),%rdx        # a0b8 <values>
    27f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27fa:	48 98                	cltq   
    27fc:	48 c1 e0 03          	shl    $0x3,%rax
    2800:	48 01 c2             	add    %rax,%rdx
    2803:	48 8b 0d ae 78 00 00 	mov    0x78ae(%rip),%rcx        # a0b8 <values>
    280a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    280d:	48 98                	cltq   
    280f:	48 c1 e0 03          	shl    $0x3,%rax
    2813:	48 83 e8 08          	sub    $0x8,%rax
    2817:	48 01 c8             	add    %rcx,%rax
    281a:	f2 0f 10 02          	movsd  (%rdx),%xmm0
    281e:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    2822:	48 8b 15 8f 78 00 00 	mov    0x788f(%rip),%rdx        # a0b8 <values>
    2829:	8b 45 fc             	mov    -0x4(%rbp),%eax
    282c:	48 98                	cltq   
    282e:	48 c1 e0 03          	shl    $0x3,%rax
    2832:	48 01 d0             	add    %rdx,%rax
    2835:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    283a:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    283e:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    2842:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    2846:	7e 3c                	jle    2884 <add_sample+0x163>
    2848:	48 8b 15 69 78 00 00 	mov    0x7869(%rip),%rdx        # a0b8 <values>
    284f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2852:	48 98                	cltq   
    2854:	48 c1 e0 03          	shl    $0x3,%rax
    2858:	48 83 e8 08          	sub    $0x8,%rax
    285c:	48 01 d0             	add    %rdx,%rax
    285f:	f2 0f 10 00          	movsd  (%rax),%xmm0
    2863:	48 8b 15 4e 78 00 00 	mov    0x784e(%rip),%rdx        # a0b8 <values>
    286a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    286d:	48 98                	cltq   
    286f:	48 c1 e0 03          	shl    $0x3,%rax
    2873:	48 01 d0             	add    %rdx,%rax
    2876:	f2 0f 10 08          	movsd  (%rax),%xmm1
    287a:	66 0f 2f c1          	comisd %xmm1,%xmm0
    287e:	0f 87 4c ff ff ff    	ja     27d0 <add_sample+0xaf>
    2884:	90                   	nop
    2885:	c9                   	leaveq 
    2886:	c3                   	retq   

0000000000002887 <has_converged>:
    2887:	55                   	push   %rbp
    2888:	48 89 e5             	mov    %rsp,%rbp
    288b:	ff 15 57 57 00 00    	callq  *0x5757(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2891:	8b 15 29 78 00 00    	mov    0x7829(%rip),%edx        # a0c0 <samplecount>
    2897:	8b 05 63 58 00 00    	mov    0x5863(%rip),%eax        # 8100 <kbest>
    289d:	39 c2                	cmp    %eax,%edx
    289f:	7c 4e                	jl     28ef <has_converged+0x68>
    28a1:	f2 0f 10 0d 67 58 00 	movsd  0x5867(%rip),%xmm1        # 8110 <epsilon>
    28a8:	00 
    28a9:	f2 0f 10 05 8f 2d 00 	movsd  0x2d8f(%rip),%xmm0        # 5640 <_IO_stdin_used+0x640>
    28b0:	00 
    28b1:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    28b5:	48 8b 05 fc 77 00 00 	mov    0x77fc(%rip),%rax        # a0b8 <values>
    28bc:	f2 0f 10 00          	movsd  (%rax),%xmm0
    28c0:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    28c4:	48 8b 15 ed 77 00 00 	mov    0x77ed(%rip),%rdx        # a0b8 <values>
    28cb:	8b 05 2f 58 00 00    	mov    0x582f(%rip),%eax        # 8100 <kbest>
    28d1:	48 98                	cltq   
    28d3:	48 c1 e0 03          	shl    $0x3,%rax
    28d7:	48 83 e8 08          	sub    $0x8,%rax
    28db:	48 01 d0             	add    %rdx,%rax
    28de:	f2 0f 10 08          	movsd  (%rax),%xmm1
    28e2:	66 0f 2f c1          	comisd %xmm1,%xmm0
    28e6:	72 07                	jb     28ef <has_converged+0x68>
    28e8:	b8 01 00 00 00       	mov    $0x1,%eax
    28ed:	eb 05                	jmp    28f4 <has_converged+0x6d>
    28ef:	b8 00 00 00 00       	mov    $0x0,%eax
    28f4:	5d                   	pop    %rbp
    28f5:	c3                   	retq   

00000000000028f6 <clear>:
    28f6:	55                   	push   %rbp
    28f7:	48 89 e5             	mov    %rsp,%rbp
    28fa:	48 83 ec 20          	sub    $0x20,%rsp
    28fe:	ff 15 e4 56 00 00    	callq  *0x56e4(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2904:	8b 05 ba 77 00 00    	mov    0x77ba(%rip),%eax        # a0c4 <sink>
    290a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    290d:	8b 05 09 58 00 00    	mov    0x5809(%rip),%eax        # 811c <cache_block>
    2913:	48 98                	cltq   
    2915:	48 c1 e8 02          	shr    $0x2,%rax
    2919:	89 45 ec             	mov    %eax,-0x14(%rbp)
    291c:	48 8b 05 8d 77 00 00 	mov    0x778d(%rip),%rax        # a0b0 <cache_buf>
    2923:	48 85 c0             	test   %rax,%rax
    2926:	75 4d                	jne    2975 <clear+0x7f>
    2928:	8b 05 ea 57 00 00    	mov    0x57ea(%rip),%eax        # 8118 <cache_bytes>
    292e:	48 98                	cltq   
    2930:	48 89 c7             	mov    %rax,%rdi
    2933:	e8 f8 e7 ff ff       	callq  1130 <malloc@plt>
    2938:	48 89 05 71 77 00 00 	mov    %rax,0x7771(%rip)        # a0b0 <cache_buf>
    293f:	48 8b 05 6a 77 00 00 	mov    0x776a(%rip),%rax        # a0b0 <cache_buf>
    2946:	48 85 c0             	test   %rax,%rax
    2949:	75 2a                	jne    2975 <clear+0x7f>
    294b:	48 8b 05 ee 57 00 00 	mov    0x57ee(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    2952:	48 89 c1             	mov    %rax,%rcx
    2955:	ba 3e 00 00 00       	mov    $0x3e,%edx
    295a:	be 01 00 00 00       	mov    $0x1,%esi
    295f:	48 8d 3d 9a 2c 00 00 	lea    0x2c9a(%rip),%rdi        # 5600 <_IO_stdin_used+0x600>
    2966:	e8 45 e8 ff ff       	callq  11b0 <fwrite@plt>
    296b:	bf 01 00 00 00       	mov    $0x1,%edi
    2970:	e8 2b e8 ff ff       	callq  11a0 <exit@plt>
    2975:	48 8b 05 34 77 00 00 	mov    0x7734(%rip),%rax        # a0b0 <cache_buf>
    297c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2980:	8b 05 92 57 00 00    	mov    0x5792(%rip),%eax        # 8118 <cache_bytes>
    2986:	48 98                	cltq   
    2988:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    298c:	48 89 c2             	mov    %rax,%rdx
    298f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2993:	48 01 d0             	add    %rdx,%rax
    2996:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    299a:	eb 16                	jmp    29b2 <clear+0xbc>
    299c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    29a0:	8b 00                	mov    (%rax),%eax
    29a2:	01 45 fc             	add    %eax,-0x4(%rbp)
    29a5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    29a8:	48 98                	cltq   
    29aa:	48 c1 e0 02          	shl    $0x2,%rax
    29ae:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    29b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    29b6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    29ba:	72 e0                	jb     299c <clear+0xa6>
    29bc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    29bf:	89 05 ff 76 00 00    	mov    %eax,0x76ff(%rip)        # a0c4 <sink>
    29c5:	90                   	nop
    29c6:	c9                   	leaveq 
    29c7:	c3                   	retq   

00000000000029c8 <fcyc>:
    29c8:	55                   	push   %rbp
    29c9:	48 89 e5             	mov    %rsp,%rbp
    29cc:	48 83 ec 30          	sub    $0x30,%rsp
    29d0:	ff 15 12 56 00 00    	callq  *0x5612(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    29d6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    29da:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    29de:	b8 00 00 00 00       	mov    $0x0,%eax
    29e3:	e8 eb fc ff ff       	callq  26d3 <init_sampler>
    29e8:	8b 05 ba 76 00 00    	mov    0x76ba(%rip),%eax        # a0a8 <compensate>
    29ee:	85 c0                	test   %eax,%eax
    29f0:	74 6c                	je     2a5e <fcyc+0x96>
    29f2:	8b 05 0c 57 00 00    	mov    0x570c(%rip),%eax        # 8104 <clear_cache>
    29f8:	85 c0                	test   %eax,%eax
    29fa:	74 0a                	je     2a06 <fcyc+0x3e>
    29fc:	b8 00 00 00 00       	mov    $0x0,%eax
    2a01:	e8 f0 fe ff ff       	callq  28f6 <clear>
    2a06:	b8 00 00 00 00       	mov    $0x0,%eax
    2a0b:	e8 b0 06 00 00       	callq  30c0 <start_comp_counter>
    2a10:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2a14:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2a18:	48 89 c7             	mov    %rax,%rdi
    2a1b:	ff d2                	callq  *%rdx
    2a1d:	b8 00 00 00 00       	mov    $0x0,%eax
    2a22:	e8 f1 06 00 00       	callq  3118 <get_comp_counter>
    2a27:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2a2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2a30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a34:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2a39:	e8 e3 fc ff ff       	callq  2721 <add_sample>
    2a3e:	b8 00 00 00 00       	mov    $0x0,%eax
    2a43:	e8 3f fe ff ff       	callq  2887 <has_converged>
    2a48:	85 c0                	test   %eax,%eax
    2a4a:	75 7c                	jne    2ac8 <fcyc+0x100>
    2a4c:	8b 15 6e 76 00 00    	mov    0x766e(%rip),%edx        # a0c0 <samplecount>
    2a52:	8b 05 b0 56 00 00    	mov    0x56b0(%rip),%eax        # 8108 <maxsamples>
    2a58:	39 c2                	cmp    %eax,%edx
    2a5a:	7c 96                	jl     29f2 <fcyc+0x2a>
    2a5c:	eb 6a                	jmp    2ac8 <fcyc+0x100>
    2a5e:	8b 05 a0 56 00 00    	mov    0x56a0(%rip),%eax        # 8104 <clear_cache>
    2a64:	85 c0                	test   %eax,%eax
    2a66:	74 0a                	je     2a72 <fcyc+0xaa>
    2a68:	b8 00 00 00 00       	mov    $0x0,%eax
    2a6d:	e8 84 fe ff ff       	callq  28f6 <clear>
    2a72:	b8 00 00 00 00       	mov    $0x0,%eax
    2a77:	e8 ef 02 00 00       	callq  2d6b <start_counter>
    2a7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2a80:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2a84:	48 89 c7             	mov    %rax,%rdi
    2a87:	ff d2                	callq  *%rdx
    2a89:	b8 00 00 00 00       	mov    $0x0,%eax
    2a8e:	e8 f8 02 00 00       	callq  2d8b <get_counter>
    2a93:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2a98:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2aa0:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2aa5:	e8 77 fc ff ff       	callq  2721 <add_sample>
    2aaa:	b8 00 00 00 00       	mov    $0x0,%eax
    2aaf:	e8 d3 fd ff ff       	callq  2887 <has_converged>
    2ab4:	85 c0                	test   %eax,%eax
    2ab6:	75 10                	jne    2ac8 <fcyc+0x100>
    2ab8:	8b 15 02 76 00 00    	mov    0x7602(%rip),%edx        # a0c0 <samplecount>
    2abe:	8b 05 44 56 00 00    	mov    0x5644(%rip),%eax        # 8108 <maxsamples>
    2ac4:	39 c2                	cmp    %eax,%edx
    2ac6:	7c 96                	jl     2a5e <fcyc+0x96>
    2ac8:	48 8b 05 e9 75 00 00 	mov    0x75e9(%rip),%rax        # a0b8 <values>
    2acf:	f2 0f 10 00          	movsd  (%rax),%xmm0
    2ad3:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    2ad8:	48 8b 05 d9 75 00 00 	mov    0x75d9(%rip),%rax        # a0b8 <values>
    2adf:	48 89 c7             	mov    %rax,%rdi
    2ae2:	e8 49 e5 ff ff       	callq  1030 <free@plt>
    2ae7:	48 c7 05 c6 75 00 00 	movq   $0x0,0x75c6(%rip)        # a0b8 <values>
    2aee:	00 00 00 00 
    2af2:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    2af7:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2afc:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2b01:	c9                   	leaveq 
    2b02:	c3                   	retq   

0000000000002b03 <fcyc_v>:
    2b03:	55                   	push   %rbp
    2b04:	48 89 e5             	mov    %rsp,%rbp
    2b07:	48 83 ec 30          	sub    $0x30,%rsp
    2b0b:	ff 15 d7 54 00 00    	callq  *0x54d7(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2b11:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2b15:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2b19:	b8 00 00 00 00       	mov    $0x0,%eax
    2b1e:	e8 b0 fb ff ff       	callq  26d3 <init_sampler>
    2b23:	8b 05 7f 75 00 00    	mov    0x757f(%rip),%eax        # a0a8 <compensate>
    2b29:	85 c0                	test   %eax,%eax
    2b2b:	74 6c                	je     2b99 <fcyc_v+0x96>
    2b2d:	8b 05 d1 55 00 00    	mov    0x55d1(%rip),%eax        # 8104 <clear_cache>
    2b33:	85 c0                	test   %eax,%eax
    2b35:	74 0a                	je     2b41 <fcyc_v+0x3e>
    2b37:	b8 00 00 00 00       	mov    $0x0,%eax
    2b3c:	e8 b5 fd ff ff       	callq  28f6 <clear>
    2b41:	b8 00 00 00 00       	mov    $0x0,%eax
    2b46:	e8 75 05 00 00       	callq  30c0 <start_comp_counter>
    2b4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2b53:	48 89 c7             	mov    %rax,%rdi
    2b56:	ff d2                	callq  *%rdx
    2b58:	b8 00 00 00 00       	mov    $0x0,%eax
    2b5d:	e8 b6 05 00 00       	callq  3118 <get_comp_counter>
    2b62:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2b67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2b6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b6f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2b74:	e8 a8 fb ff ff       	callq  2721 <add_sample>
    2b79:	b8 00 00 00 00       	mov    $0x0,%eax
    2b7e:	e8 04 fd ff ff       	callq  2887 <has_converged>
    2b83:	85 c0                	test   %eax,%eax
    2b85:	75 7c                	jne    2c03 <fcyc_v+0x100>
    2b87:	8b 15 33 75 00 00    	mov    0x7533(%rip),%edx        # a0c0 <samplecount>
    2b8d:	8b 05 75 55 00 00    	mov    0x5575(%rip),%eax        # 8108 <maxsamples>
    2b93:	39 c2                	cmp    %eax,%edx
    2b95:	7c 96                	jl     2b2d <fcyc_v+0x2a>
    2b97:	eb 6a                	jmp    2c03 <fcyc_v+0x100>
    2b99:	8b 05 65 55 00 00    	mov    0x5565(%rip),%eax        # 8104 <clear_cache>
    2b9f:	85 c0                	test   %eax,%eax
    2ba1:	74 0a                	je     2bad <fcyc_v+0xaa>
    2ba3:	b8 00 00 00 00       	mov    $0x0,%eax
    2ba8:	e8 49 fd ff ff       	callq  28f6 <clear>
    2bad:	b8 00 00 00 00       	mov    $0x0,%eax
    2bb2:	e8 b4 01 00 00       	callq  2d6b <start_counter>
    2bb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2bbb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2bbf:	48 89 c7             	mov    %rax,%rdi
    2bc2:	ff d2                	callq  *%rdx
    2bc4:	b8 00 00 00 00       	mov    $0x0,%eax
    2bc9:	e8 bd 01 00 00       	callq  2d8b <get_counter>
    2bce:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2bd3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bdb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2be0:	e8 3c fb ff ff       	callq  2721 <add_sample>
    2be5:	b8 00 00 00 00       	mov    $0x0,%eax
    2bea:	e8 98 fc ff ff       	callq  2887 <has_converged>
    2bef:	85 c0                	test   %eax,%eax
    2bf1:	75 10                	jne    2c03 <fcyc_v+0x100>
    2bf3:	8b 15 c7 74 00 00    	mov    0x74c7(%rip),%edx        # a0c0 <samplecount>
    2bf9:	8b 05 09 55 00 00    	mov    0x5509(%rip),%eax        # 8108 <maxsamples>
    2bff:	39 c2                	cmp    %eax,%edx
    2c01:	7c 96                	jl     2b99 <fcyc_v+0x96>
    2c03:	48 8b 05 ae 74 00 00 	mov    0x74ae(%rip),%rax        # a0b8 <values>
    2c0a:	f2 0f 10 00          	movsd  (%rax),%xmm0
    2c0e:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    2c13:	48 8b 05 9e 74 00 00 	mov    0x749e(%rip),%rax        # a0b8 <values>
    2c1a:	48 89 c7             	mov    %rax,%rdi
    2c1d:	e8 0e e4 ff ff       	callq  1030 <free@plt>
    2c22:	48 c7 05 8b 74 00 00 	movq   $0x0,0x748b(%rip)        # a0b8 <values>
    2c29:	00 00 00 00 
    2c2d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    2c32:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2c37:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2c3c:	c9                   	leaveq 
    2c3d:	c3                   	retq   

0000000000002c3e <set_fcyc_clear_cache>:
    2c3e:	55                   	push   %rbp
    2c3f:	48 89 e5             	mov    %rsp,%rbp
    2c42:	48 83 ec 08          	sub    $0x8,%rsp
    2c46:	ff 15 9c 53 00 00    	callq  *0x539c(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2c4c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2c4f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2c52:	89 05 ac 54 00 00    	mov    %eax,0x54ac(%rip)        # 8104 <clear_cache>
    2c58:	90                   	nop
    2c59:	c9                   	leaveq 
    2c5a:	c3                   	retq   

0000000000002c5b <set_fcyc_cache_size>:
    2c5b:	55                   	push   %rbp
    2c5c:	48 89 e5             	mov    %rsp,%rbp
    2c5f:	48 83 ec 10          	sub    $0x10,%rsp
    2c63:	ff 15 7f 53 00 00    	callq  *0x537f(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2c69:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2c6c:	8b 05 a6 54 00 00    	mov    0x54a6(%rip),%eax        # 8118 <cache_bytes>
    2c72:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    2c75:	74 2f                	je     2ca6 <set_fcyc_cache_size+0x4b>
    2c77:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2c7a:	89 05 98 54 00 00    	mov    %eax,0x5498(%rip)        # 8118 <cache_bytes>
    2c80:	48 8b 05 29 74 00 00 	mov    0x7429(%rip),%rax        # a0b0 <cache_buf>
    2c87:	48 85 c0             	test   %rax,%rax
    2c8a:	74 1a                	je     2ca6 <set_fcyc_cache_size+0x4b>
    2c8c:	48 8b 05 1d 74 00 00 	mov    0x741d(%rip),%rax        # a0b0 <cache_buf>
    2c93:	48 89 c7             	mov    %rax,%rdi
    2c96:	e8 95 e3 ff ff       	callq  1030 <free@plt>
    2c9b:	48 c7 05 0a 74 00 00 	movq   $0x0,0x740a(%rip)        # a0b0 <cache_buf>
    2ca2:	00 00 00 00 
    2ca6:	90                   	nop
    2ca7:	c9                   	leaveq 
    2ca8:	c3                   	retq   

0000000000002ca9 <set_fcyc_cache_block>:
    2ca9:	55                   	push   %rbp
    2caa:	48 89 e5             	mov    %rsp,%rbp
    2cad:	48 83 ec 08          	sub    $0x8,%rsp
    2cb1:	ff 15 31 53 00 00    	callq  *0x5331(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2cb7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2cba:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2cbd:	89 05 59 54 00 00    	mov    %eax,0x5459(%rip)        # 811c <cache_block>
    2cc3:	90                   	nop
    2cc4:	c9                   	leaveq 
    2cc5:	c3                   	retq   

0000000000002cc6 <set_fcyc_compensate>:
    2cc6:	55                   	push   %rbp
    2cc7:	48 89 e5             	mov    %rsp,%rbp
    2cca:	48 83 ec 08          	sub    $0x8,%rsp
    2cce:	ff 15 14 53 00 00    	callq  *0x5314(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2cd4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2cd7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2cda:	89 05 c8 73 00 00    	mov    %eax,0x73c8(%rip)        # a0a8 <compensate>
    2ce0:	90                   	nop
    2ce1:	c9                   	leaveq 
    2ce2:	c3                   	retq   

0000000000002ce3 <set_fcyc_k>:
    2ce3:	55                   	push   %rbp
    2ce4:	48 89 e5             	mov    %rsp,%rbp
    2ce7:	48 83 ec 08          	sub    $0x8,%rsp
    2ceb:	ff 15 f7 52 00 00    	callq  *0x52f7(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2cf4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2cf7:	89 05 03 54 00 00    	mov    %eax,0x5403(%rip)        # 8100 <kbest>
    2cfd:	90                   	nop
    2cfe:	c9                   	leaveq 
    2cff:	c3                   	retq   

0000000000002d00 <set_fcyc_maxsamples>:
    2d00:	55                   	push   %rbp
    2d01:	48 89 e5             	mov    %rsp,%rbp
    2d04:	48 83 ec 08          	sub    $0x8,%rsp
    2d08:	ff 15 da 52 00 00    	callq  *0x52da(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2d0e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2d11:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2d14:	89 05 ee 53 00 00    	mov    %eax,0x53ee(%rip)        # 8108 <maxsamples>
    2d1a:	90                   	nop
    2d1b:	c9                   	leaveq 
    2d1c:	c3                   	retq   

0000000000002d1d <set_fcyc_epsilon>:
    2d1d:	55                   	push   %rbp
    2d1e:	48 89 e5             	mov    %rsp,%rbp
    2d21:	48 83 ec 08          	sub    $0x8,%rsp
    2d25:	ff 15 bd 52 00 00    	callq  *0x52bd(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2d2b:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    2d30:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    2d35:	f2 0f 11 05 d3 53 00 	movsd  %xmm0,0x53d3(%rip)        # 8110 <epsilon>
    2d3c:	00 
    2d3d:	90                   	nop
    2d3e:	c9                   	leaveq 
    2d3f:	c3                   	retq   

0000000000002d40 <access_counter>:
    2d40:	55                   	push   %rbp
    2d41:	48 89 e5             	mov    %rsp,%rbp
    2d44:	48 83 ec 10          	sub    $0x10,%rsp
    2d48:	ff 15 9a 52 00 00    	callq  *0x529a(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2d52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2d56:	0f 31                	rdtsc  
    2d58:	89 d6                	mov    %edx,%esi
    2d5a:	89 c1                	mov    %eax,%ecx
    2d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d60:	89 30                	mov    %esi,(%rax)
    2d62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d66:	89 08                	mov    %ecx,(%rax)
    2d68:	90                   	nop
    2d69:	c9                   	leaveq 
    2d6a:	c3                   	retq   

0000000000002d6b <start_counter>:
    2d6b:	55                   	push   %rbp
    2d6c:	48 89 e5             	mov    %rsp,%rbp
    2d6f:	ff 15 73 52 00 00    	callq  *0x5273(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2d75:	48 8d 35 50 73 00 00 	lea    0x7350(%rip),%rsi        # a0cc <cyc_lo>
    2d7c:	48 8d 3d 45 73 00 00 	lea    0x7345(%rip),%rdi        # a0c8 <cyc_hi>
    2d83:	e8 b8 ff ff ff       	callq  2d40 <access_counter>
    2d88:	90                   	nop
    2d89:	5d                   	pop    %rbp
    2d8a:	c3                   	retq   

0000000000002d8b <get_counter>:
    2d8b:	55                   	push   %rbp
    2d8c:	48 89 e5             	mov    %rsp,%rbp
    2d8f:	48 83 ec 20          	sub    $0x20,%rsp
    2d93:	ff 15 4f 52 00 00    	callq  *0x524f(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2d99:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    2d9d:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    2da1:	48 89 d6             	mov    %rdx,%rsi
    2da4:	48 89 c7             	mov    %rax,%rdi
    2da7:	e8 94 ff ff ff       	callq  2d40 <access_counter>
    2dac:	8b 45 e0             	mov    -0x20(%rbp),%eax
    2daf:	8b 15 17 73 00 00    	mov    0x7317(%rip),%edx        # a0cc <cyc_lo>
    2db5:	29 d0                	sub    %edx,%eax
    2db7:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2dba:	8b 45 e0             	mov    -0x20(%rbp),%eax
    2dbd:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    2dc0:	0f 97 c0             	seta   %al
    2dc3:	0f b6 c0             	movzbl %al,%eax
    2dc6:	89 45 f8             	mov    %eax,-0x8(%rbp)
    2dc9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2dcc:	8b 15 f6 72 00 00    	mov    0x72f6(%rip),%edx        # a0c8 <cyc_hi>
    2dd2:	29 d0                	sub    %edx,%eax
    2dd4:	2b 45 f8             	sub    -0x8(%rbp),%eax
    2dd7:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2dda:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2ddd:	48 85 c0             	test   %rax,%rax
    2de0:	78 0b                	js     2ded <get_counter+0x62>
    2de2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2de6:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    2deb:	eb 19                	jmp    2e06 <get_counter+0x7b>
    2ded:	48 89 c2             	mov    %rax,%rdx
    2df0:	48 d1 ea             	shr    %rdx
    2df3:	83 e0 01             	and    $0x1,%eax
    2df6:	48 09 c2             	or     %rax,%rdx
    2df9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2dfd:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    2e02:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2e06:	f2 0f 10 0d 8a 28 00 	movsd  0x288a(%rip),%xmm1        # 5698 <_IO_stdin_used+0x698>
    2e0d:	00 
    2e0e:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    2e12:	f2 0f 10 05 86 28 00 	movsd  0x2886(%rip),%xmm0        # 56a0 <_IO_stdin_used+0x6a0>
    2e19:	00 
    2e1a:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    2e1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2e21:	48 85 c0             	test   %rax,%rax
    2e24:	78 0b                	js     2e31 <get_counter+0xa6>
    2e26:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2e2a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    2e2f:	eb 19                	jmp    2e4a <get_counter+0xbf>
    2e31:	48 89 c2             	mov    %rax,%rdx
    2e34:	48 d1 ea             	shr    %rdx
    2e37:	83 e0 01             	and    $0x1,%eax
    2e3a:	48 09 c2             	or     %rax,%rdx
    2e3d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2e41:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    2e46:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2e4a:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2e4e:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    2e53:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2e57:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
    2e5c:	76 24                	jbe    2e82 <get_counter+0xf7>
    2e5e:	48 8b 05 db 52 00 00 	mov    0x52db(%rip),%rax        # 8140 <stderr@@GLIBC_2.2.5>
    2e65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2e69:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    2e6e:	48 8d 35 d3 27 00 00 	lea    0x27d3(%rip),%rsi        # 5648 <_IO_stdin_used+0x648>
    2e75:	48 89 c7             	mov    %rax,%rdi
    2e78:	b8 01 00 00 00       	mov    $0x1,%eax
    2e7d:	e8 9e e2 ff ff       	callq  1120 <fprintf@plt>
    2e82:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    2e87:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2e8c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2e91:	c9                   	leaveq 
    2e92:	c3                   	retq   

0000000000002e93 <ovhd>:
    2e93:	55                   	push   %rbp
    2e94:	48 89 e5             	mov    %rsp,%rbp
    2e97:	48 83 ec 10          	sub    $0x10,%rsp
    2e9b:	ff 15 47 51 00 00    	callq  *0x5147(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2ea1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2ea8:	eb 21                	jmp    2ecb <ovhd+0x38>
    2eaa:	b8 00 00 00 00       	mov    $0x0,%eax
    2eaf:	e8 b7 fe ff ff       	callq  2d6b <start_counter>
    2eb4:	b8 00 00 00 00       	mov    $0x0,%eax
    2eb9:	e8 cd fe ff ff       	callq  2d8b <get_counter>
    2ebe:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2ec3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2ec7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2ecb:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    2ecf:	7e d9                	jle    2eaa <ovhd+0x17>
    2ed1:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    2ed6:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2edb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2ee0:	c9                   	leaveq 
    2ee1:	c3                   	retq   

0000000000002ee2 <mhz_full>:
    2ee2:	55                   	push   %rbp
    2ee3:	48 89 e5             	mov    %rsp,%rbp
    2ee6:	48 83 ec 20          	sub    $0x20,%rsp
    2eea:	ff 15 f8 50 00 00    	callq  *0x50f8(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2ef0:	89 7d ec             	mov    %edi,-0x14(%rbp)
    2ef3:	89 75 e8             	mov    %esi,-0x18(%rbp)
    2ef6:	b8 00 00 00 00       	mov    $0x0,%eax
    2efb:	e8 6b fe ff ff       	callq  2d6b <start_counter>
    2f00:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2f03:	89 c7                	mov    %eax,%edi
    2f05:	e8 b6 e2 ff ff       	callq  11c0 <sleep@plt>
    2f0a:	b8 00 00 00 00       	mov    $0x0,%eax
    2f0f:	e8 77 fe ff ff       	callq  2d8b <get_counter>
    2f14:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2f19:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2f1d:	f2 0f 2a 4d e8       	cvtsi2sdl -0x18(%rbp),%xmm1
    2f22:	f2 0f 10 05 7e 27 00 	movsd  0x277e(%rip),%xmm0        # 56a8 <_IO_stdin_used+0x6a8>
    2f29:	00 
    2f2a:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    2f2e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2f33:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    2f37:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    2f3c:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    2f40:	74 1a                	je     2f5c <mhz_full+0x7a>
    2f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f46:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2f4b:	48 8d 3d 1e 27 00 00 	lea    0x271e(%rip),%rdi        # 5670 <_IO_stdin_used+0x670>
    2f52:	b8 01 00 00 00       	mov    $0x1,%eax
    2f57:	e8 54 e1 ff ff       	callq  10b0 <printf@plt>
    2f5c:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    2f61:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2f66:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2f6b:	c9                   	leaveq 
    2f6c:	c3                   	retq   

0000000000002f6d <mhz>:
    2f6d:	55                   	push   %rbp
    2f6e:	48 89 e5             	mov    %rsp,%rbp
    2f71:	48 83 ec 10          	sub    $0x10,%rsp
    2f75:	ff 15 6d 50 00 00    	callq  *0x506d(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2f7b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2f7e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2f81:	be 02 00 00 00       	mov    $0x2,%esi
    2f86:	89 c7                	mov    %eax,%edi
    2f88:	e8 55 ff ff ff       	callq  2ee2 <mhz_full>
    2f8d:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2f92:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2f97:	c9                   	leaveq 
    2f98:	c3                   	retq   

0000000000002f99 <callibrate>:
    2f99:	55                   	push   %rbp
    2f9a:	48 89 e5             	mov    %rsp,%rbp
    2f9d:	48 83 ec 60          	sub    $0x60,%rsp
    2fa1:	ff 15 41 50 00 00    	callq  *0x5041(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    2fa7:	89 7d ac             	mov    %edi,-0x54(%rbp)
    2faa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2fb1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    2fb5:	48 89 c7             	mov    %rax,%rdi
    2fb8:	e8 83 e1 ff ff       	callq  1140 <times@plt>
    2fbd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2fc1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2fc5:	b8 00 00 00 00       	mov    $0x0,%eax
    2fca:	e8 9c fd ff ff       	callq  2d6b <start_counter>
    2fcf:	b8 00 00 00 00       	mov    $0x0,%eax
    2fd4:	e8 b2 fd ff ff       	callq  2d8b <get_counter>
    2fd9:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2fde:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2fe2:	e9 cb 00 00 00       	jmpq   30b2 <callibrate+0x119>
    2fe7:	b8 00 00 00 00       	mov    $0x0,%eax
    2fec:	e8 9a fd ff ff       	callq  2d8b <get_counter>
    2ff1:	66 48 0f 7e c0       	movq   %xmm0,%rax
    2ff6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2ffa:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    2fff:	f2 0f 5c 45 f8       	subsd  -0x8(%rbp),%xmm0
    3004:	66 0f 2f 05 a4 26 00 	comisd 0x26a4(%rip),%xmm0        # 56b0 <_IO_stdin_used+0x6b0>
    300b:	00 
    300c:	73 05                	jae    3013 <callibrate+0x7a>
    300e:	e9 9f 00 00 00       	jmpq   30b2 <callibrate+0x119>
    3013:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3017:	48 89 c7             	mov    %rax,%rdi
    301a:	e8 21 e1 ff ff       	callq  1140 <times@plt>
    301f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3023:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3027:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    302b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    302f:	7e 77                	jle    30a8 <callibrate+0x10f>
    3031:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    3036:	f2 0f 5c 45 f8       	subsd  -0x8(%rbp),%xmm0
    303b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    303f:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    3043:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3047:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    304c:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    3050:	f2 0f 11 45 d0       	movsd  %xmm0,-0x30(%rbp)
    3055:	f2 0f 10 05 73 70 00 	movsd  0x7073(%rip),%xmm0        # a0d0 <cyc_per_tick>
    305c:	00 
    305d:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3061:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    3065:	7a 0a                	jp     3071 <callibrate+0xd8>
    3067:	66 0f ef c9          	pxor   %xmm1,%xmm1
    306b:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    306f:	74 0f                	je     3080 <callibrate+0xe7>
    3071:	f2 0f 10 05 57 70 00 	movsd  0x7057(%rip),%xmm0        # a0d0 <cyc_per_tick>
    3078:	00 
    3079:	66 0f 2f 45 d0       	comisd -0x30(%rbp),%xmm0
    307e:	76 1c                	jbe    309c <callibrate+0x103>
    3080:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
    3085:	66 0f 2f 05 2b 26 00 	comisd 0x262b(%rip),%xmm0        # 56b8 <_IO_stdin_used+0x6b8>
    308c:	00 
    308d:	76 0d                	jbe    309c <callibrate+0x103>
    308f:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
    3094:	f2 0f 11 05 34 70 00 	movsd  %xmm0,0x7034(%rip)        # a0d0 <cyc_per_tick>
    309b:	00 
    309c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    30a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30a4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    30a8:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    30ad:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    30b2:	83 7d ec 63          	cmpl   $0x63,-0x14(%rbp)
    30b6:	0f 8e 2b ff ff ff    	jle    2fe7 <callibrate+0x4e>
    30bc:	90                   	nop
    30bd:	90                   	nop
    30be:	c9                   	leaveq 
    30bf:	c3                   	retq   

00000000000030c0 <start_comp_counter>:
    30c0:	55                   	push   %rbp
    30c1:	48 89 e5             	mov    %rsp,%rbp
    30c4:	48 83 ec 20          	sub    $0x20,%rsp
    30c8:	ff 15 1a 4f 00 00    	callq  *0x4f1a(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    30ce:	f2 0f 10 05 fa 6f 00 	movsd  0x6ffa(%rip),%xmm0        # a0d0 <cyc_per_tick>
    30d5:	00 
    30d6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    30da:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    30de:	7a 14                	jp     30f4 <start_comp_counter+0x34>
    30e0:	66 0f ef c9          	pxor   %xmm1,%xmm1
    30e4:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    30e8:	75 0a                	jne    30f4 <start_comp_counter+0x34>
    30ea:	bf 01 00 00 00       	mov    $0x1,%edi
    30ef:	e8 a5 fe ff ff       	callq  2f99 <callibrate>
    30f4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    30f8:	48 89 c7             	mov    %rax,%rdi
    30fb:	e8 40 e0 ff ff       	callq  1140 <times@plt>
    3100:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3104:	48 89 05 cd 6f 00 00 	mov    %rax,0x6fcd(%rip)        # a0d8 <start_tick>
    310b:	b8 00 00 00 00       	mov    $0x0,%eax
    3110:	e8 56 fc ff ff       	callq  2d6b <start_counter>
    3115:	90                   	nop
    3116:	c9                   	leaveq 
    3117:	c3                   	retq   

0000000000003118 <get_comp_counter>:
    3118:	55                   	push   %rbp
    3119:	48 89 e5             	mov    %rsp,%rbp
    311c:	48 83 ec 40          	sub    $0x40,%rsp
    3120:	ff 15 c2 4e 00 00    	callq  *0x4ec2(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3126:	b8 00 00 00 00       	mov    $0x0,%eax
    312b:	e8 5b fc ff ff       	callq  2d8b <get_counter>
    3130:	66 48 0f 7e c0       	movq   %xmm0,%rax
    3135:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3139:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    313d:	48 89 c7             	mov    %rax,%rdi
    3140:	e8 fb df ff ff       	callq  1140 <times@plt>
    3145:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    3149:	48 8b 15 88 6f 00 00 	mov    0x6f88(%rip),%rdx        # a0d8 <start_tick>
    3150:	48 29 d0             	sub    %rdx,%rax
    3153:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3157:	66 0f ef c9          	pxor   %xmm1,%xmm1
    315b:	f2 48 0f 2a 4d f0    	cvtsi2sdq -0x10(%rbp),%xmm1
    3161:	f2 0f 10 05 67 6f 00 	movsd  0x6f67(%rip),%xmm0        # a0d0 <cyc_per_tick>
    3168:	00 
    3169:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    316d:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    3172:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    3176:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    317b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    3180:	66 48 0f 7e c0       	movq   %xmm0,%rax
    3185:	66 48 0f 6e c0       	movq   %rax,%xmm0
    318a:	c9                   	leaveq 
    318b:	c3                   	retq   

000000000000318c <processMoveUpReference>:
    318c:	55                   	push   %rbp
    318d:	48 89 e5             	mov    %rsp,%rbp
    3190:	48 83 ec 50          	sub    $0x50,%rsp
    3194:	ff 15 4e 4e 00 00    	callq  *0x4e4e(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    319a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    319e:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    31a1:	89 55 c0             	mov    %edx,-0x40(%rbp)
    31a4:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    31a7:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    31ab:	79 1e                	jns    31cb <processMoveUpReference+0x3f>
    31ad:	8b 45 bc             	mov    -0x44(%rbp),%eax
    31b0:	f7 d8                	neg    %eax
    31b2:	89 c1                	mov    %eax,%ecx
    31b4:	8b 55 c0             	mov    -0x40(%rbp),%edx
    31b7:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    31ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    31be:	48 89 c7             	mov    %rax,%rdi
    31c1:	e8 a0 03 00 00       	callq  3566 <processMoveDownReference>
    31c6:	e9 ac 01 00 00       	jmpq   3377 <processMoveUpReference+0x1eb>
    31cb:	8b 55 c0             	mov    -0x40(%rbp),%edx
    31ce:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    31d1:	89 d6                	mov    %edx,%esi
    31d3:	89 c7                	mov    %eax,%edi
    31d5:	e8 9d f1 ff ff       	callq  2377 <allocateFrame>
    31da:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    31de:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    31e5:	e9 cc 00 00 00       	jmpq   32b6 <processMoveUpReference+0x12a>
    31ea:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    31f1:	e9 b0 00 00 00       	jmpq   32a6 <processMoveUpReference+0x11a>
    31f6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    31f9:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    31fd:	89 c2                	mov    %eax,%edx
    31ff:	89 d0                	mov    %edx,%eax
    3201:	01 c0                	add    %eax,%eax
    3203:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3206:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3209:	89 d0                	mov    %edx,%eax
    320b:	01 c0                	add    %eax,%eax
    320d:	01 d0                	add    %edx,%eax
    320f:	01 c8                	add    %ecx,%eax
    3211:	89 45 e0             	mov    %eax,-0x20(%rbp)
    3214:	8b 55 fc             	mov    -0x4(%rbp),%edx
    3217:	8b 45 bc             	mov    -0x44(%rbp),%eax
    321a:	01 d0                	add    %edx,%eax
    321c:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    3220:	89 c2                	mov    %eax,%edx
    3222:	89 d0                	mov    %edx,%eax
    3224:	01 c0                	add    %eax,%eax
    3226:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3229:	8b 55 f8             	mov    -0x8(%rbp),%edx
    322c:	89 d0                	mov    %edx,%eax
    322e:	01 c0                	add    %eax,%eax
    3230:	01 d0                	add    %edx,%eax
    3232:	01 c8                	add    %ecx,%eax
    3234:	89 45 dc             	mov    %eax,-0x24(%rbp)
    3237:	8b 45 dc             	mov    -0x24(%rbp),%eax
    323a:	48 63 d0             	movslq %eax,%rdx
    323d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3241:	48 01 d0             	add    %rdx,%rax
    3244:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3247:	48 63 ca             	movslq %edx,%rcx
    324a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    324e:	48 01 ca             	add    %rcx,%rdx
    3251:	0f b6 00             	movzbl (%rax),%eax
    3254:	88 02                	mov    %al,(%rdx)
    3256:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3259:	48 98                	cltq   
    325b:	48 8d 50 01          	lea    0x1(%rax),%rdx
    325f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3263:	48 01 d0             	add    %rdx,%rax
    3266:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3269:	48 63 d2             	movslq %edx,%rdx
    326c:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    3270:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3274:	48 01 ca             	add    %rcx,%rdx
    3277:	0f b6 00             	movzbl (%rax),%eax
    327a:	88 02                	mov    %al,(%rdx)
    327c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    327f:	48 98                	cltq   
    3281:	48 8d 50 02          	lea    0x2(%rax),%rdx
    3285:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3289:	48 01 d0             	add    %rdx,%rax
    328c:	8b 55 e0             	mov    -0x20(%rbp),%edx
    328f:	48 63 d2             	movslq %edx,%rdx
    3292:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    3296:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    329a:	48 01 ca             	add    %rcx,%rdx
    329d:	0f b6 00             	movzbl (%rax),%eax
    32a0:	88 02                	mov    %al,(%rdx)
    32a2:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    32a6:	8b 45 f8             	mov    -0x8(%rbp),%eax
    32a9:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    32ac:	0f 87 44 ff ff ff    	ja     31f6 <processMoveUpReference+0x6a>
    32b2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    32b6:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    32b9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    32bc:	29 c8                	sub    %ecx,%eax
    32be:	89 c2                	mov    %eax,%edx
    32c0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    32c3:	39 c2                	cmp    %eax,%edx
    32c5:	0f 87 1f ff ff ff    	ja     31ea <processMoveUpReference+0x5e>
    32cb:	8b 55 bc             	mov    -0x44(%rbp),%edx
    32ce:	8b 45 c0             	mov    -0x40(%rbp),%eax
    32d1:	29 d0                	sub    %edx,%eax
    32d3:	89 45 f4             	mov    %eax,-0xc(%rbp)
    32d6:	eb 6d                	jmp    3345 <processMoveUpReference+0x1b9>
    32d8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    32df:	eb 58                	jmp    3339 <processMoveUpReference+0x1ad>
    32e1:	8b 45 f4             	mov    -0xc(%rbp),%eax
    32e4:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    32e8:	89 c2                	mov    %eax,%edx
    32ea:	89 d0                	mov    %edx,%eax
    32ec:	01 c0                	add    %eax,%eax
    32ee:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    32f1:	8b 55 f0             	mov    -0x10(%rbp),%edx
    32f4:	89 d0                	mov    %edx,%eax
    32f6:	01 c0                	add    %eax,%eax
    32f8:	01 d0                	add    %edx,%eax
    32fa:	01 c8                	add    %ecx,%eax
    32fc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    32ff:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3302:	48 63 d0             	movslq %eax,%rdx
    3305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3309:	48 01 d0             	add    %rdx,%rax
    330c:	c6 00 ff             	movb   $0xff,(%rax)
    330f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3312:	48 98                	cltq   
    3314:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    331c:	48 01 d0             	add    %rdx,%rax
    331f:	c6 00 ff             	movb   $0xff,(%rax)
    3322:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3325:	48 98                	cltq   
    3327:	48 8d 50 02          	lea    0x2(%rax),%rdx
    332b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    332f:	48 01 d0             	add    %rdx,%rax
    3332:	c6 00 ff             	movb   $0xff,(%rax)
    3335:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    3339:	8b 45 f0             	mov    -0x10(%rbp),%eax
    333c:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    333f:	77 a0                	ja     32e1 <processMoveUpReference+0x155>
    3341:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3345:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3348:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    334b:	77 8b                	ja     32d8 <processMoveUpReference+0x14c>
    334d:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    3350:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    3353:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3357:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    335b:	48 89 c7             	mov    %rax,%rdi
    335e:	e8 64 f0 ff ff       	callq  23c7 <copyFrame>
    3363:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3367:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    336b:	48 89 c7             	mov    %rax,%rdi
    336e:	e8 33 f0 ff ff       	callq  23a6 <deallocateFrame>
    3373:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3377:	c9                   	leaveq 
    3378:	c3                   	retq   

0000000000003379 <processMoveLeftReference>:
    3379:	55                   	push   %rbp
    337a:	48 89 e5             	mov    %rsp,%rbp
    337d:	48 83 ec 50          	sub    $0x50,%rsp
    3381:	ff 15 61 4c 00 00    	callq  *0x4c61(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3387:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    338b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    338e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    3391:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    3394:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    3398:	79 1e                	jns    33b8 <processMoveLeftReference+0x3f>
    339a:	8b 45 bc             	mov    -0x44(%rbp),%eax
    339d:	f7 d8                	neg    %eax
    339f:	89 c1                	mov    %eax,%ecx
    33a1:	8b 55 c0             	mov    -0x40(%rbp),%edx
    33a4:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    33a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    33ab:	48 89 c7             	mov    %rax,%rdi
    33ae:	e8 90 03 00 00       	callq  3743 <processMoveRightReference>
    33b3:	e9 ac 01 00 00       	jmpq   3564 <processMoveLeftReference+0x1eb>
    33b8:	8b 55 c0             	mov    -0x40(%rbp),%edx
    33bb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    33be:	89 d6                	mov    %edx,%esi
    33c0:	89 c7                	mov    %eax,%edi
    33c2:	e8 b0 ef ff ff       	callq  2377 <allocateFrame>
    33c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    33cb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    33d2:	e9 d5 00 00 00       	jmpq   34ac <processMoveLeftReference+0x133>
    33d7:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    33de:	e9 b0 00 00 00       	jmpq   3493 <processMoveLeftReference+0x11a>
    33e3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    33e6:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    33ea:	89 c2                	mov    %eax,%edx
    33ec:	89 d0                	mov    %edx,%eax
    33ee:	01 c0                	add    %eax,%eax
    33f0:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    33f3:	8b 55 f8             	mov    -0x8(%rbp),%edx
    33f6:	89 d0                	mov    %edx,%eax
    33f8:	01 c0                	add    %eax,%eax
    33fa:	01 d0                	add    %edx,%eax
    33fc:	01 c8                	add    %ecx,%eax
    33fe:	89 45 e0             	mov    %eax,-0x20(%rbp)
    3401:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3404:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    3408:	89 c2                	mov    %eax,%edx
    340a:	89 d0                	mov    %edx,%eax
    340c:	01 c0                	add    %eax,%eax
    340e:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3411:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3414:	8b 45 bc             	mov    -0x44(%rbp),%eax
    3417:	01 c2                	add    %eax,%edx
    3419:	89 d0                	mov    %edx,%eax
    341b:	01 c0                	add    %eax,%eax
    341d:	01 d0                	add    %edx,%eax
    341f:	01 c8                	add    %ecx,%eax
    3421:	89 45 dc             	mov    %eax,-0x24(%rbp)
    3424:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3427:	48 63 d0             	movslq %eax,%rdx
    342a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    342e:	48 01 d0             	add    %rdx,%rax
    3431:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3434:	48 63 ca             	movslq %edx,%rcx
    3437:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    343b:	48 01 ca             	add    %rcx,%rdx
    343e:	0f b6 00             	movzbl (%rax),%eax
    3441:	88 02                	mov    %al,(%rdx)
    3443:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3446:	48 98                	cltq   
    3448:	48 8d 50 01          	lea    0x1(%rax),%rdx
    344c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3450:	48 01 d0             	add    %rdx,%rax
    3453:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3456:	48 63 d2             	movslq %edx,%rdx
    3459:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    345d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3461:	48 01 ca             	add    %rcx,%rdx
    3464:	0f b6 00             	movzbl (%rax),%eax
    3467:	88 02                	mov    %al,(%rdx)
    3469:	8b 45 dc             	mov    -0x24(%rbp),%eax
    346c:	48 98                	cltq   
    346e:	48 8d 50 02          	lea    0x2(%rax),%rdx
    3472:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3476:	48 01 d0             	add    %rdx,%rax
    3479:	8b 55 e0             	mov    -0x20(%rbp),%edx
    347c:	48 63 d2             	movslq %edx,%rdx
    347f:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    3483:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3487:	48 01 ca             	add    %rcx,%rdx
    348a:	0f b6 00             	movzbl (%rax),%eax
    348d:	88 02                	mov    %al,(%rdx)
    348f:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3493:	8b 4d bc             	mov    -0x44(%rbp),%ecx
    3496:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3499:	29 c8                	sub    %ecx,%eax
    349b:	89 c2                	mov    %eax,%edx
    349d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    34a0:	39 c2                	cmp    %eax,%edx
    34a2:	0f 87 3b ff ff ff    	ja     33e3 <processMoveLeftReference+0x6a>
    34a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    34ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    34af:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    34b2:	0f 87 1f ff ff ff    	ja     33d7 <processMoveLeftReference+0x5e>
    34b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    34bf:	eb 71                	jmp    3532 <processMoveLeftReference+0x1b9>
    34c1:	8b 55 bc             	mov    -0x44(%rbp),%edx
    34c4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    34c7:	29 d0                	sub    %edx,%eax
    34c9:	89 45 f0             	mov    %eax,-0x10(%rbp)
    34cc:	eb 58                	jmp    3526 <processMoveLeftReference+0x1ad>
    34ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    34d1:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    34d5:	89 c2                	mov    %eax,%edx
    34d7:	89 d0                	mov    %edx,%eax
    34d9:	01 c0                	add    %eax,%eax
    34db:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    34de:	8b 55 f0             	mov    -0x10(%rbp),%edx
    34e1:	89 d0                	mov    %edx,%eax
    34e3:	01 c0                	add    %eax,%eax
    34e5:	01 d0                	add    %edx,%eax
    34e7:	01 c8                	add    %ecx,%eax
    34e9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    34ec:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    34ef:	48 63 d0             	movslq %eax,%rdx
    34f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    34f6:	48 01 d0             	add    %rdx,%rax
    34f9:	c6 00 ff             	movb   $0xff,(%rax)
    34fc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    34ff:	48 98                	cltq   
    3501:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3505:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3509:	48 01 d0             	add    %rdx,%rax
    350c:	c6 00 ff             	movb   $0xff,(%rax)
    350f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3512:	48 98                	cltq   
    3514:	48 8d 50 02          	lea    0x2(%rax),%rdx
    3518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    351c:	48 01 d0             	add    %rdx,%rax
    351f:	c6 00 ff             	movb   $0xff,(%rax)
    3522:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    3526:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3529:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    352c:	77 a0                	ja     34ce <processMoveLeftReference+0x155>
    352e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3532:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3535:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    3538:	77 87                	ja     34c1 <processMoveLeftReference+0x148>
    353a:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    353d:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    3540:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3548:	48 89 c7             	mov    %rax,%rdi
    354b:	e8 77 ee ff ff       	callq  23c7 <copyFrame>
    3550:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3554:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3558:	48 89 c7             	mov    %rax,%rdi
    355b:	e8 46 ee ff ff       	callq  23a6 <deallocateFrame>
    3560:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3564:	c9                   	leaveq 
    3565:	c3                   	retq   

0000000000003566 <processMoveDownReference>:
    3566:	55                   	push   %rbp
    3567:	48 89 e5             	mov    %rsp,%rbp
    356a:	48 83 ec 50          	sub    $0x50,%rsp
    356e:	ff 15 74 4a 00 00    	callq  *0x4a74(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3574:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3578:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    357b:	89 55 c0             	mov    %edx,-0x40(%rbp)
    357e:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    3581:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    3585:	79 1e                	jns    35a5 <processMoveDownReference+0x3f>
    3587:	8b 45 bc             	mov    -0x44(%rbp),%eax
    358a:	f7 d8                	neg    %eax
    358c:	89 c1                	mov    %eax,%ecx
    358e:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3591:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    3594:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3598:	48 89 c7             	mov    %rax,%rdi
    359b:	e8 ec fb ff ff       	callq  318c <processMoveUpReference>
    35a0:	e9 9c 01 00 00       	jmpq   3741 <processMoveDownReference+0x1db>
    35a5:	8b 55 c0             	mov    -0x40(%rbp),%edx
    35a8:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    35ab:	89 d6                	mov    %edx,%esi
    35ad:	89 c7                	mov    %eax,%edi
    35af:	e8 c3 ed ff ff       	callq  2377 <allocateFrame>
    35b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    35b8:	8b 45 bc             	mov    -0x44(%rbp),%eax
    35bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
    35be:	e9 ca 00 00 00       	jmpq   368d <processMoveDownReference+0x127>
    35c3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    35ca:	e9 ae 00 00 00       	jmpq   367d <processMoveDownReference+0x117>
    35cf:	8b 45 fc             	mov    -0x4(%rbp),%eax
    35d2:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    35d6:	89 c2                	mov    %eax,%edx
    35d8:	89 d0                	mov    %edx,%eax
    35da:	01 c0                	add    %eax,%eax
    35dc:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    35df:	8b 55 f8             	mov    -0x8(%rbp),%edx
    35e2:	89 d0                	mov    %edx,%eax
    35e4:	01 c0                	add    %eax,%eax
    35e6:	01 d0                	add    %edx,%eax
    35e8:	01 c8                	add    %ecx,%eax
    35ea:	89 45 e0             	mov    %eax,-0x20(%rbp)
    35ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
    35f0:	2b 45 bc             	sub    -0x44(%rbp),%eax
    35f3:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    35f7:	89 c2                	mov    %eax,%edx
    35f9:	89 d0                	mov    %edx,%eax
    35fb:	01 c0                	add    %eax,%eax
    35fd:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3600:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3603:	89 d0                	mov    %edx,%eax
    3605:	01 c0                	add    %eax,%eax
    3607:	01 d0                	add    %edx,%eax
    3609:	01 c8                	add    %ecx,%eax
    360b:	89 45 dc             	mov    %eax,-0x24(%rbp)
    360e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3611:	48 63 d0             	movslq %eax,%rdx
    3614:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3618:	48 01 d0             	add    %rdx,%rax
    361b:	8b 55 e0             	mov    -0x20(%rbp),%edx
    361e:	48 63 ca             	movslq %edx,%rcx
    3621:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3625:	48 01 ca             	add    %rcx,%rdx
    3628:	0f b6 00             	movzbl (%rax),%eax
    362b:	88 02                	mov    %al,(%rdx)
    362d:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3630:	48 98                	cltq   
    3632:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3636:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    363a:	48 01 d0             	add    %rdx,%rax
    363d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3640:	48 63 d2             	movslq %edx,%rdx
    3643:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    3647:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    364b:	48 01 ca             	add    %rcx,%rdx
    364e:	0f b6 00             	movzbl (%rax),%eax
    3651:	88 02                	mov    %al,(%rdx)
    3653:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3656:	48 98                	cltq   
    3658:	48 8d 50 02          	lea    0x2(%rax),%rdx
    365c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3660:	48 01 d0             	add    %rdx,%rax
    3663:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3666:	48 63 d2             	movslq %edx,%rdx
    3669:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    366d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3671:	48 01 ca             	add    %rcx,%rdx
    3674:	0f b6 00             	movzbl (%rax),%eax
    3677:	88 02                	mov    %al,(%rdx)
    3679:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    367d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3680:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    3683:	0f 87 46 ff ff ff    	ja     35cf <processMoveDownReference+0x69>
    3689:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    368d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3690:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    3693:	0f 87 2a ff ff ff    	ja     35c3 <processMoveDownReference+0x5d>
    3699:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    36a0:	eb 6d                	jmp    370f <processMoveDownReference+0x1a9>
    36a2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    36a9:	eb 58                	jmp    3703 <processMoveDownReference+0x19d>
    36ab:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36ae:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    36b2:	89 c2                	mov    %eax,%edx
    36b4:	89 d0                	mov    %edx,%eax
    36b6:	01 c0                	add    %eax,%eax
    36b8:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    36bb:	8b 55 f0             	mov    -0x10(%rbp),%edx
    36be:	89 d0                	mov    %edx,%eax
    36c0:	01 c0                	add    %eax,%eax
    36c2:	01 d0                	add    %edx,%eax
    36c4:	01 c8                	add    %ecx,%eax
    36c6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    36c9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    36cc:	48 63 d0             	movslq %eax,%rdx
    36cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36d3:	48 01 d0             	add    %rdx,%rax
    36d6:	c6 00 ff             	movb   $0xff,(%rax)
    36d9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    36dc:	48 98                	cltq   
    36de:	48 8d 50 01          	lea    0x1(%rax),%rdx
    36e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36e6:	48 01 d0             	add    %rdx,%rax
    36e9:	c6 00 ff             	movb   $0xff,(%rax)
    36ec:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    36ef:	48 98                	cltq   
    36f1:	48 8d 50 02          	lea    0x2(%rax),%rdx
    36f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36f9:	48 01 d0             	add    %rdx,%rax
    36fc:	c6 00 ff             	movb   $0xff,(%rax)
    36ff:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    3703:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3706:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    3709:	77 a0                	ja     36ab <processMoveDownReference+0x145>
    370b:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    370f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3712:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    3715:	7c 8b                	jl     36a2 <processMoveDownReference+0x13c>
    3717:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    371a:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    371d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3721:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3725:	48 89 c7             	mov    %rax,%rdi
    3728:	e8 9a ec ff ff       	callq  23c7 <copyFrame>
    372d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3735:	48 89 c7             	mov    %rax,%rdi
    3738:	e8 69 ec ff ff       	callq  23a6 <deallocateFrame>
    373d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3741:	c9                   	leaveq 
    3742:	c3                   	retq   

0000000000003743 <processMoveRightReference>:
    3743:	55                   	push   %rbp
    3744:	48 89 e5             	mov    %rsp,%rbp
    3747:	48 83 ec 50          	sub    $0x50,%rsp
    374b:	ff 15 97 48 00 00    	callq  *0x4897(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3751:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3755:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    3758:	89 55 c0             	mov    %edx,-0x40(%rbp)
    375b:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    375e:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    3762:	79 1e                	jns    3782 <processMoveRightReference+0x3f>
    3764:	8b 45 bc             	mov    -0x44(%rbp),%eax
    3767:	f7 d8                	neg    %eax
    3769:	89 c1                	mov    %eax,%ecx
    376b:	8b 55 c0             	mov    -0x40(%rbp),%edx
    376e:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    3771:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3775:	48 89 c7             	mov    %rax,%rdi
    3778:	e8 fc fb ff ff       	callq  3379 <processMoveLeftReference>
    377d:	e9 9e 01 00 00       	jmpq   3920 <processMoveRightReference+0x1dd>
    3782:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3785:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3788:	89 d6                	mov    %edx,%esi
    378a:	89 c7                	mov    %eax,%edi
    378c:	e8 e6 eb ff ff       	callq  2377 <allocateFrame>
    3791:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3795:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    379c:	e9 cb 00 00 00       	jmpq   386c <processMoveRightReference+0x129>
    37a1:	8b 45 bc             	mov    -0x44(%rbp),%eax
    37a4:	89 45 f8             	mov    %eax,-0x8(%rbp)
    37a7:	e9 b0 00 00 00       	jmpq   385c <processMoveRightReference+0x119>
    37ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    37af:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    37b3:	89 c2                	mov    %eax,%edx
    37b5:	89 d0                	mov    %edx,%eax
    37b7:	01 c0                	add    %eax,%eax
    37b9:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    37bc:	8b 55 f8             	mov    -0x8(%rbp),%edx
    37bf:	89 d0                	mov    %edx,%eax
    37c1:	01 c0                	add    %eax,%eax
    37c3:	01 d0                	add    %edx,%eax
    37c5:	01 c8                	add    %ecx,%eax
    37c7:	89 45 e0             	mov    %eax,-0x20(%rbp)
    37ca:	8b 45 fc             	mov    -0x4(%rbp),%eax
    37cd:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    37d1:	89 c2                	mov    %eax,%edx
    37d3:	89 d0                	mov    %edx,%eax
    37d5:	01 c0                	add    %eax,%eax
    37d7:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    37da:	8b 45 f8             	mov    -0x8(%rbp),%eax
    37dd:	2b 45 bc             	sub    -0x44(%rbp),%eax
    37e0:	89 c2                	mov    %eax,%edx
    37e2:	89 d0                	mov    %edx,%eax
    37e4:	01 c0                	add    %eax,%eax
    37e6:	01 d0                	add    %edx,%eax
    37e8:	01 c8                	add    %ecx,%eax
    37ea:	89 45 dc             	mov    %eax,-0x24(%rbp)
    37ed:	8b 45 dc             	mov    -0x24(%rbp),%eax
    37f0:	48 63 d0             	movslq %eax,%rdx
    37f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    37f7:	48 01 d0             	add    %rdx,%rax
    37fa:	8b 55 e0             	mov    -0x20(%rbp),%edx
    37fd:	48 63 ca             	movslq %edx,%rcx
    3800:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3804:	48 01 ca             	add    %rcx,%rdx
    3807:	0f b6 00             	movzbl (%rax),%eax
    380a:	88 02                	mov    %al,(%rdx)
    380c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    380f:	48 98                	cltq   
    3811:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3815:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3819:	48 01 d0             	add    %rdx,%rax
    381c:	8b 55 e0             	mov    -0x20(%rbp),%edx
    381f:	48 63 d2             	movslq %edx,%rdx
    3822:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    3826:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    382a:	48 01 ca             	add    %rcx,%rdx
    382d:	0f b6 00             	movzbl (%rax),%eax
    3830:	88 02                	mov    %al,(%rdx)
    3832:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3835:	48 98                	cltq   
    3837:	48 8d 50 02          	lea    0x2(%rax),%rdx
    383b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    383f:	48 01 d0             	add    %rdx,%rax
    3842:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3845:	48 63 d2             	movslq %edx,%rdx
    3848:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    384c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3850:	48 01 ca             	add    %rcx,%rdx
    3853:	0f b6 00             	movzbl (%rax),%eax
    3856:	88 02                	mov    %al,(%rdx)
    3858:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    385c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    385f:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    3862:	0f 87 44 ff ff ff    	ja     37ac <processMoveRightReference+0x69>
    3868:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    386c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    386f:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    3872:	0f 87 29 ff ff ff    	ja     37a1 <processMoveRightReference+0x5e>
    3878:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    387f:	eb 6d                	jmp    38ee <processMoveRightReference+0x1ab>
    3881:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3888:	eb 58                	jmp    38e2 <processMoveRightReference+0x19f>
    388a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    388d:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    3891:	89 c2                	mov    %eax,%edx
    3893:	89 d0                	mov    %edx,%eax
    3895:	01 c0                	add    %eax,%eax
    3897:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    389a:	8b 55 f0             	mov    -0x10(%rbp),%edx
    389d:	89 d0                	mov    %edx,%eax
    389f:	01 c0                	add    %eax,%eax
    38a1:	01 d0                	add    %edx,%eax
    38a3:	01 c8                	add    %ecx,%eax
    38a5:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    38a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    38ab:	48 63 d0             	movslq %eax,%rdx
    38ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38b2:	48 01 d0             	add    %rdx,%rax
    38b5:	c6 00 ff             	movb   $0xff,(%rax)
    38b8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    38bb:	48 98                	cltq   
    38bd:	48 8d 50 01          	lea    0x1(%rax),%rdx
    38c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38c5:	48 01 d0             	add    %rdx,%rax
    38c8:	c6 00 ff             	movb   $0xff,(%rax)
    38cb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    38ce:	48 98                	cltq   
    38d0:	48 8d 50 02          	lea    0x2(%rax),%rdx
    38d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38d8:	48 01 d0             	add    %rdx,%rax
    38db:	c6 00 ff             	movb   $0xff,(%rax)
    38de:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    38e2:	8b 45 f0             	mov    -0x10(%rbp),%eax
    38e5:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    38e8:	7c a0                	jl     388a <processMoveRightReference+0x147>
    38ea:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    38ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    38f1:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    38f4:	77 8b                	ja     3881 <processMoveRightReference+0x13e>
    38f6:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    38f9:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    38fc:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3900:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3904:	48 89 c7             	mov    %rax,%rdi
    3907:	e8 bb ea ff ff       	callq  23c7 <copyFrame>
    390c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3914:	48 89 c7             	mov    %rax,%rdi
    3917:	e8 8a ea ff ff       	callq  23a6 <deallocateFrame>
    391c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3920:	c9                   	leaveq 
    3921:	c3                   	retq   

0000000000003922 <processRotateCWReference>:
    3922:	55                   	push   %rbp
    3923:	48 89 e5             	mov    %rsp,%rbp
    3926:	48 83 ec 50          	sub    $0x50,%rsp
    392a:	ff 15 b8 46 00 00    	callq  *0x46b8(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3930:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3934:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    3937:	89 55 c0             	mov    %edx,-0x40(%rbp)
    393a:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    393d:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    3941:	79 1e                	jns    3961 <processRotateCWReference+0x3f>
    3943:	8b 45 bc             	mov    -0x44(%rbp),%eax
    3946:	f7 d8                	neg    %eax
    3948:	89 c1                	mov    %eax,%ecx
    394a:	8b 55 c0             	mov    -0x40(%rbp),%edx
    394d:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    3950:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3954:	48 89 c7             	mov    %rax,%rdi
    3957:	e8 86 01 00 00       	callq  3ae2 <processRotateCCWReference>
    395c:	e9 7f 01 00 00       	jmpq   3ae0 <processRotateCWReference+0x1be>
    3961:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3964:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3967:	89 d6                	mov    %edx,%esi
    3969:	89 c7                	mov    %eax,%edi
    396b:	e8 07 ea ff ff       	callq  2377 <allocateFrame>
    3970:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3974:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    397b:	e9 44 01 00 00       	jmpq   3ac4 <processRotateCWReference+0x1a2>
    3980:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3983:	83 e8 01             	sub    $0x1,%eax
    3986:	89 45 f8             	mov    %eax,-0x8(%rbp)
    3989:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3990:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3997:	e9 fe 00 00 00       	jmpq   3a9a <processRotateCWReference+0x178>
    399c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    39a3:	e9 d7 00 00 00       	jmpq   3a7f <processRotateCWReference+0x15d>
    39a8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    39ab:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    39af:	89 c2                	mov    %eax,%edx
    39b1:	89 d0                	mov    %edx,%eax
    39b3:	01 c0                	add    %eax,%eax
    39b5:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    39b8:	8b 55 ec             	mov    -0x14(%rbp),%edx
    39bb:	89 d0                	mov    %edx,%eax
    39bd:	01 c0                	add    %eax,%eax
    39bf:	01 d0                	add    %edx,%eax
    39c1:	01 c8                	add    %ecx,%eax
    39c3:	89 45 dc             	mov    %eax,-0x24(%rbp)
    39c6:	8b 45 dc             	mov    -0x24(%rbp),%eax
    39c9:	48 63 d0             	movslq %eax,%rdx
    39cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39d0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    39d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    39d7:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    39db:	89 c2                	mov    %eax,%edx
    39dd:	89 d0                	mov    %edx,%eax
    39df:	01 c0                	add    %eax,%eax
    39e1:	8d 34 10             	lea    (%rax,%rdx,1),%esi
    39e4:	8b 55 f8             	mov    -0x8(%rbp),%edx
    39e7:	89 d0                	mov    %edx,%eax
    39e9:	01 c0                	add    %eax,%eax
    39eb:	01 d0                	add    %edx,%eax
    39ed:	01 f0                	add    %esi,%eax
    39ef:	89 c2                	mov    %eax,%edx
    39f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    39f5:	48 01 c2             	add    %rax,%rdx
    39f8:	0f b6 01             	movzbl (%rcx),%eax
    39fb:	88 02                	mov    %al,(%rdx)
    39fd:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3a00:	48 98                	cltq   
    3a02:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3a06:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3a0a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    3a0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3a11:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    3a15:	89 c2                	mov    %eax,%edx
    3a17:	89 d0                	mov    %edx,%eax
    3a19:	01 c0                	add    %eax,%eax
    3a1b:	8d 34 10             	lea    (%rax,%rdx,1),%esi
    3a1e:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3a21:	89 d0                	mov    %edx,%eax
    3a23:	01 c0                	add    %eax,%eax
    3a25:	01 d0                	add    %edx,%eax
    3a27:	01 f0                	add    %esi,%eax
    3a29:	83 c0 01             	add    $0x1,%eax
    3a2c:	89 c2                	mov    %eax,%edx
    3a2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a32:	48 01 c2             	add    %rax,%rdx
    3a35:	0f b6 01             	movzbl (%rcx),%eax
    3a38:	88 02                	mov    %al,(%rdx)
    3a3a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3a3d:	48 98                	cltq   
    3a3f:	48 8d 50 02          	lea    0x2(%rax),%rdx
    3a43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3a47:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    3a4b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3a4e:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    3a52:	89 c2                	mov    %eax,%edx
    3a54:	89 d0                	mov    %edx,%eax
    3a56:	01 c0                	add    %eax,%eax
    3a58:	8d 34 10             	lea    (%rax,%rdx,1),%esi
    3a5b:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3a5e:	89 d0                	mov    %edx,%eax
    3a60:	01 c0                	add    %eax,%eax
    3a62:	01 d0                	add    %edx,%eax
    3a64:	01 f0                	add    %esi,%eax
    3a66:	83 c0 02             	add    $0x2,%eax
    3a69:	89 c2                	mov    %eax,%edx
    3a6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a6f:	48 01 c2             	add    %rax,%rdx
    3a72:	0f b6 01             	movzbl (%rcx),%eax
    3a75:	88 02                	mov    %al,(%rdx)
    3a77:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3a7b:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    3a7f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3a82:	39 45 c0             	cmp    %eax,-0x40(%rbp)
    3a85:	0f 87 1d ff ff ff    	ja     39a8 <processRotateCWReference+0x86>
    3a8b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3a92:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
    3a96:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    3a9a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3a9d:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
    3aa0:	0f 87 f6 fe ff ff    	ja     399c <processRotateCWReference+0x7a>
    3aa6:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    3aa9:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    3aac:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3ab0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ab4:	48 89 c7             	mov    %rax,%rdi
    3ab7:	e8 0b e9 ff ff       	callq  23c7 <copyFrame>
    3abc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3ac0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3ac4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3ac7:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    3aca:	0f 8c b0 fe ff ff    	jl     3980 <processRotateCWReference+0x5e>
    3ad0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ad4:	48 89 c7             	mov    %rax,%rdi
    3ad7:	e8 ca e8 ff ff       	callq  23a6 <deallocateFrame>
    3adc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ae0:	c9                   	leaveq 
    3ae1:	c3                   	retq   

0000000000003ae2 <processRotateCCWReference>:
    3ae2:	55                   	push   %rbp
    3ae3:	48 89 e5             	mov    %rsp,%rbp
    3ae6:	48 83 ec 30          	sub    $0x30,%rsp
    3aea:	ff 15 f8 44 00 00    	callq  *0x44f8(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3af0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3af4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    3af7:	89 55 e0             	mov    %edx,-0x20(%rbp)
    3afa:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    3afd:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    3b01:	79 32                	jns    3b35 <processRotateCCWReference+0x53>
    3b03:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3b0a:	eb 1f                	jmp    3b2b <processRotateCCWReference+0x49>
    3b0c:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3b0f:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    3b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b16:	b9 01 00 00 00       	mov    $0x1,%ecx
    3b1b:	48 89 c7             	mov    %rax,%rdi
    3b1e:	e8 ff fd ff ff       	callq  3922 <processRotateCWReference>
    3b23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3b27:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    3b2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3b2e:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    3b31:	7f d9                	jg     3b0c <processRotateCCWReference+0x2a>
    3b33:	eb 30                	jmp    3b65 <processRotateCCWReference+0x83>
    3b35:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3b3c:	eb 1f                	jmp    3b5d <processRotateCCWReference+0x7b>
    3b3e:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3b41:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    3b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b48:	b9 03 00 00 00       	mov    $0x3,%ecx
    3b4d:	48 89 c7             	mov    %rax,%rdi
    3b50:	e8 cd fd ff ff       	callq  3922 <processRotateCWReference>
    3b55:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3b59:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3b5d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3b60:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    3b63:	7c d9                	jl     3b3e <processRotateCCWReference+0x5c>
    3b65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b69:	c9                   	leaveq 
    3b6a:	c3                   	retq   

0000000000003b6b <processMirrorXReference>:
    3b6b:	55                   	push   %rbp
    3b6c:	48 89 e5             	mov    %rsp,%rbp
    3b6f:	48 83 ec 40          	sub    $0x40,%rsp
    3b73:	ff 15 6f 44 00 00    	callq  *0x446f(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3b79:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3b7d:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    3b80:	89 55 d0             	mov    %edx,-0x30(%rbp)
    3b83:	89 4d cc             	mov    %ecx,-0x34(%rbp)
    3b86:	8b 55 d0             	mov    -0x30(%rbp),%edx
    3b89:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3b8c:	89 d6                	mov    %edx,%esi
    3b8e:	89 c7                	mov    %eax,%edi
    3b90:	e8 e2 e7 ff ff       	callq  2377 <allocateFrame>
    3b95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3b99:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3ba0:	e9 d0 00 00 00       	jmpq   3c75 <processMirrorXReference+0x10a>
    3ba5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3bac:	e9 b4 00 00 00       	jmpq   3c65 <processMirrorXReference+0xfa>
    3bb1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3bb4:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    3bb8:	89 c2                	mov    %eax,%edx
    3bba:	89 d0                	mov    %edx,%eax
    3bbc:	01 c0                	add    %eax,%eax
    3bbe:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3bc1:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3bc4:	89 d0                	mov    %edx,%eax
    3bc6:	01 c0                	add    %eax,%eax
    3bc8:	01 d0                	add    %edx,%eax
    3bca:	01 c8                	add    %ecx,%eax
    3bcc:	89 45 ec             	mov    %eax,-0x14(%rbp)
    3bcf:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    3bd2:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3bd5:	29 c8                	sub    %ecx,%eax
    3bd7:	89 c2                	mov    %eax,%edx
    3bd9:	89 d0                	mov    %edx,%eax
    3bdb:	01 c0                	add    %eax,%eax
    3bdd:	01 d0                	add    %edx,%eax
    3bdf:	83 e8 03             	sub    $0x3,%eax
    3be2:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    3be6:	89 c1                	mov    %eax,%ecx
    3be8:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3beb:	89 d0                	mov    %edx,%eax
    3bed:	01 c0                	add    %eax,%eax
    3bef:	01 d0                	add    %edx,%eax
    3bf1:	01 c8                	add    %ecx,%eax
    3bf3:	89 45 e8             	mov    %eax,-0x18(%rbp)
    3bf6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3bf9:	48 63 d0             	movslq %eax,%rdx
    3bfc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c00:	48 01 d0             	add    %rdx,%rax
    3c03:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3c06:	48 63 ca             	movslq %edx,%rcx
    3c09:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c0d:	48 01 ca             	add    %rcx,%rdx
    3c10:	0f b6 00             	movzbl (%rax),%eax
    3c13:	88 02                	mov    %al,(%rdx)
    3c15:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3c18:	48 98                	cltq   
    3c1a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3c1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c22:	48 01 d0             	add    %rdx,%rax
    3c25:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3c28:	48 63 d2             	movslq %edx,%rdx
    3c2b:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    3c2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c33:	48 01 ca             	add    %rcx,%rdx
    3c36:	0f b6 00             	movzbl (%rax),%eax
    3c39:	88 02                	mov    %al,(%rdx)
    3c3b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3c3e:	48 98                	cltq   
    3c40:	48 8d 50 02          	lea    0x2(%rax),%rdx
    3c44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c48:	48 01 d0             	add    %rdx,%rax
    3c4b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3c4e:	48 63 d2             	movslq %edx,%rdx
    3c51:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    3c55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c59:	48 01 ca             	add    %rcx,%rdx
    3c5c:	0f b6 00             	movzbl (%rax),%eax
    3c5f:	88 02                	mov    %al,(%rdx)
    3c61:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3c65:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3c68:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    3c6b:	0f 87 40 ff ff ff    	ja     3bb1 <processMirrorXReference+0x46>
    3c71:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3c75:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3c78:	39 45 d0             	cmp    %eax,-0x30(%rbp)
    3c7b:	0f 87 24 ff ff ff    	ja     3ba5 <processMirrorXReference+0x3a>
    3c81:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3c84:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3c87:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3c8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c8f:	48 89 c7             	mov    %rax,%rdi
    3c92:	e8 30 e7 ff ff       	callq  23c7 <copyFrame>
    3c97:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3c9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c9f:	48 89 c7             	mov    %rax,%rdi
    3ca2:	e8 ff e6 ff ff       	callq  23a6 <deallocateFrame>
    3ca7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cab:	c9                   	leaveq 
    3cac:	c3                   	retq   

0000000000003cad <processMirrorYReference>:
    3cad:	55                   	push   %rbp
    3cae:	48 89 e5             	mov    %rsp,%rbp
    3cb1:	48 83 ec 40          	sub    $0x40,%rsp
    3cb5:	ff 15 2d 43 00 00    	callq  *0x432d(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3cbb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3cbf:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    3cc2:	89 55 d0             	mov    %edx,-0x30(%rbp)
    3cc5:	89 4d cc             	mov    %ecx,-0x34(%rbp)
    3cc8:	8b 55 d0             	mov    -0x30(%rbp),%edx
    3ccb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3cce:	89 d6                	mov    %edx,%esi
    3cd0:	89 c7                	mov    %eax,%edi
    3cd2:	e8 a0 e6 ff ff       	callq  2377 <allocateFrame>
    3cd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3cdb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3ce2:	e9 c9 00 00 00       	jmpq   3db0 <processMirrorYReference+0x103>
    3ce7:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3cee:	e9 ad 00 00 00       	jmpq   3da0 <processMirrorYReference+0xf3>
    3cf3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3cf6:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    3cfa:	89 c2                	mov    %eax,%edx
    3cfc:	89 d0                	mov    %edx,%eax
    3cfe:	01 c0                	add    %eax,%eax
    3d00:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    3d03:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3d06:	89 d0                	mov    %edx,%eax
    3d08:	01 c0                	add    %eax,%eax
    3d0a:	01 d0                	add    %edx,%eax
    3d0c:	01 c8                	add    %ecx,%eax
    3d0e:	89 45 ec             	mov    %eax,-0x14(%rbp)
    3d11:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3d14:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3d17:	29 d0                	sub    %edx,%eax
    3d19:	89 c1                	mov    %eax,%ecx
    3d1b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3d1e:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    3d22:	8d 14 01             	lea    (%rcx,%rax,1),%edx
    3d25:	89 d0                	mov    %edx,%eax
    3d27:	01 c0                	add    %eax,%eax
    3d29:	01 d0                	add    %edx,%eax
    3d2b:	83 e8 03             	sub    $0x3,%eax
    3d2e:	89 45 e8             	mov    %eax,-0x18(%rbp)
    3d31:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3d34:	48 63 d0             	movslq %eax,%rdx
    3d37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d3b:	48 01 d0             	add    %rdx,%rax
    3d3e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3d41:	48 63 ca             	movslq %edx,%rcx
    3d44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d48:	48 01 ca             	add    %rcx,%rdx
    3d4b:	0f b6 00             	movzbl (%rax),%eax
    3d4e:	88 02                	mov    %al,(%rdx)
    3d50:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3d53:	48 98                	cltq   
    3d55:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3d59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d5d:	48 01 d0             	add    %rdx,%rax
    3d60:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3d63:	48 63 d2             	movslq %edx,%rdx
    3d66:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    3d6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d6e:	48 01 ca             	add    %rcx,%rdx
    3d71:	0f b6 00             	movzbl (%rax),%eax
    3d74:	88 02                	mov    %al,(%rdx)
    3d76:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3d79:	48 98                	cltq   
    3d7b:	48 8d 50 02          	lea    0x2(%rax),%rdx
    3d7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d83:	48 01 d0             	add    %rdx,%rax
    3d86:	8b 55 ec             	mov    -0x14(%rbp),%edx
    3d89:	48 63 d2             	movslq %edx,%rdx
    3d8c:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    3d90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d94:	48 01 ca             	add    %rcx,%rdx
    3d97:	0f b6 00             	movzbl (%rax),%eax
    3d9a:	88 02                	mov    %al,(%rdx)
    3d9c:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3da0:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3da3:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    3da6:	0f 87 47 ff ff ff    	ja     3cf3 <processMirrorYReference+0x46>
    3dac:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3db0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3db3:	39 45 d0             	cmp    %eax,-0x30(%rbp)
    3db6:	0f 87 2b ff ff ff    	ja     3ce7 <processMirrorYReference+0x3a>
    3dbc:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    3dbf:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3dc2:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3dc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3dca:	48 89 c7             	mov    %rax,%rdi
    3dcd:	e8 f5 e5 ff ff       	callq  23c7 <copyFrame>
    3dd2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3dd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3dda:	48 89 c7             	mov    %rax,%rdi
    3ddd:	e8 c4 e5 ff ff       	callq  23a6 <deallocateFrame>
    3de2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3de6:	c9                   	leaveq 
    3de7:	c3                   	retq   

0000000000003de8 <implementation_driver_reference>:
    3de8:	55                   	push   %rbp
    3de9:	48 89 e5             	mov    %rsp,%rbp
    3dec:	48 83 ec 30          	sub    $0x30,%rsp
    3df0:	ff 15 f2 41 00 00    	callq  *0x41f2(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    3df6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3dfa:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    3dfd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3e01:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    3e04:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
    3e08:	44 89 c8             	mov    %r9d,%eax
    3e0b:	88 45 d0             	mov    %al,-0x30(%rbp)
    3e0e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3e15:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    3e1c:	e9 1b 03 00 00       	jmpq   413c <implementation_driver_reference+0x354>
    3e21:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3e24:	48 98                	cltq   
    3e26:	48 c1 e0 04          	shl    $0x4,%rax
    3e2a:	48 89 c2             	mov    %rax,%rdx
    3e2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e31:	48 01 d0             	add    %rdx,%rax
    3e34:	48 8b 00             	mov    (%rax),%rax
    3e37:	48 8d 35 82 18 00 00 	lea    0x1882(%rip),%rsi        # 56c0 <_IO_stdin_used+0x6c0>
    3e3e:	48 89 c7             	mov    %rax,%rdi
    3e41:	e8 ba d2 ff ff       	callq  1100 <strcmp@plt>
    3e46:	85 c0                	test   %eax,%eax
    3e48:	75 31                	jne    3e7b <implementation_driver_reference+0x93>
    3e4a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3e4d:	48 98                	cltq   
    3e4f:	48 c1 e0 04          	shl    $0x4,%rax
    3e53:	48 89 c2             	mov    %rax,%rdx
    3e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e5a:	48 01 d0             	add    %rdx,%rax
    3e5d:	8b 48 08             	mov    0x8(%rax),%ecx
    3e60:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3e63:	8b 75 e0             	mov    -0x20(%rbp),%esi
    3e66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e6a:	48 89 c7             	mov    %rax,%rdi
    3e6d:	e8 d1 f8 ff ff       	callq  3743 <processMoveRightReference>
    3e72:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3e76:	e9 6e 02 00 00       	jmpq   40e9 <implementation_driver_reference+0x301>
    3e7b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3e7e:	48 98                	cltq   
    3e80:	48 c1 e0 04          	shl    $0x4,%rax
    3e84:	48 89 c2             	mov    %rax,%rdx
    3e87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e8b:	48 01 d0             	add    %rdx,%rax
    3e8e:	48 8b 00             	mov    (%rax),%rax
    3e91:	48 8d 35 2a 18 00 00 	lea    0x182a(%rip),%rsi        # 56c2 <_IO_stdin_used+0x6c2>
    3e98:	48 89 c7             	mov    %rax,%rdi
    3e9b:	e8 60 d2 ff ff       	callq  1100 <strcmp@plt>
    3ea0:	85 c0                	test   %eax,%eax
    3ea2:	75 31                	jne    3ed5 <implementation_driver_reference+0xed>
    3ea4:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3ea7:	48 98                	cltq   
    3ea9:	48 c1 e0 04          	shl    $0x4,%rax
    3ead:	48 89 c2             	mov    %rax,%rdx
    3eb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3eb4:	48 01 d0             	add    %rdx,%rax
    3eb7:	8b 48 08             	mov    0x8(%rax),%ecx
    3eba:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3ebd:	8b 75 e0             	mov    -0x20(%rbp),%esi
    3ec0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ec4:	48 89 c7             	mov    %rax,%rdi
    3ec7:	e8 ad f4 ff ff       	callq  3379 <processMoveLeftReference>
    3ecc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3ed0:	e9 14 02 00 00       	jmpq   40e9 <implementation_driver_reference+0x301>
    3ed5:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3ed8:	48 98                	cltq   
    3eda:	48 c1 e0 04          	shl    $0x4,%rax
    3ede:	48 89 c2             	mov    %rax,%rdx
    3ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ee5:	48 01 d0             	add    %rdx,%rax
    3ee8:	48 8b 00             	mov    (%rax),%rax
    3eeb:	48 8d 35 d2 17 00 00 	lea    0x17d2(%rip),%rsi        # 56c4 <_IO_stdin_used+0x6c4>
    3ef2:	48 89 c7             	mov    %rax,%rdi
    3ef5:	e8 06 d2 ff ff       	callq  1100 <strcmp@plt>
    3efa:	85 c0                	test   %eax,%eax
    3efc:	75 31                	jne    3f2f <implementation_driver_reference+0x147>
    3efe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3f01:	48 98                	cltq   
    3f03:	48 c1 e0 04          	shl    $0x4,%rax
    3f07:	48 89 c2             	mov    %rax,%rdx
    3f0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f0e:	48 01 d0             	add    %rdx,%rax
    3f11:	8b 48 08             	mov    0x8(%rax),%ecx
    3f14:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3f17:	8b 75 e0             	mov    -0x20(%rbp),%esi
    3f1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f1e:	48 89 c7             	mov    %rax,%rdi
    3f21:	e8 66 f2 ff ff       	callq  318c <processMoveUpReference>
    3f26:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3f2a:	e9 ba 01 00 00       	jmpq   40e9 <implementation_driver_reference+0x301>
    3f2f:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3f32:	48 98                	cltq   
    3f34:	48 c1 e0 04          	shl    $0x4,%rax
    3f38:	48 89 c2             	mov    %rax,%rdx
    3f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f3f:	48 01 d0             	add    %rdx,%rax
    3f42:	48 8b 00             	mov    (%rax),%rax
    3f45:	48 8d 35 7a 17 00 00 	lea    0x177a(%rip),%rsi        # 56c6 <_IO_stdin_used+0x6c6>
    3f4c:	48 89 c7             	mov    %rax,%rdi
    3f4f:	e8 ac d1 ff ff       	callq  1100 <strcmp@plt>
    3f54:	85 c0                	test   %eax,%eax
    3f56:	75 31                	jne    3f89 <implementation_driver_reference+0x1a1>
    3f58:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3f5b:	48 98                	cltq   
    3f5d:	48 c1 e0 04          	shl    $0x4,%rax
    3f61:	48 89 c2             	mov    %rax,%rdx
    3f64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f68:	48 01 d0             	add    %rdx,%rax
    3f6b:	8b 48 08             	mov    0x8(%rax),%ecx
    3f6e:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3f71:	8b 75 e0             	mov    -0x20(%rbp),%esi
    3f74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f78:	48 89 c7             	mov    %rax,%rdi
    3f7b:	e8 e6 f5 ff ff       	callq  3566 <processMoveDownReference>
    3f80:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3f84:	e9 60 01 00 00       	jmpq   40e9 <implementation_driver_reference+0x301>
    3f89:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3f8c:	48 98                	cltq   
    3f8e:	48 c1 e0 04          	shl    $0x4,%rax
    3f92:	48 89 c2             	mov    %rax,%rdx
    3f95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f99:	48 01 d0             	add    %rdx,%rax
    3f9c:	48 8b 00             	mov    (%rax),%rax
    3f9f:	48 8d 35 22 17 00 00 	lea    0x1722(%rip),%rsi        # 56c8 <_IO_stdin_used+0x6c8>
    3fa6:	48 89 c7             	mov    %rax,%rdi
    3fa9:	e8 52 d1 ff ff       	callq  1100 <strcmp@plt>
    3fae:	85 c0                	test   %eax,%eax
    3fb0:	75 31                	jne    3fe3 <implementation_driver_reference+0x1fb>
    3fb2:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3fb5:	48 98                	cltq   
    3fb7:	48 c1 e0 04          	shl    $0x4,%rax
    3fbb:	48 89 c2             	mov    %rax,%rdx
    3fbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fc2:	48 01 d0             	add    %rdx,%rax
    3fc5:	8b 48 08             	mov    0x8(%rax),%ecx
    3fc8:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    3fcb:	8b 75 e0             	mov    -0x20(%rbp),%esi
    3fce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fd2:	48 89 c7             	mov    %rax,%rdi
    3fd5:	e8 48 f9 ff ff       	callq  3922 <processRotateCWReference>
    3fda:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3fde:	e9 06 01 00 00       	jmpq   40e9 <implementation_driver_reference+0x301>
    3fe3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3fe6:	48 98                	cltq   
    3fe8:	48 c1 e0 04          	shl    $0x4,%rax
    3fec:	48 89 c2             	mov    %rax,%rdx
    3fef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ff3:	48 01 d0             	add    %rdx,%rax
    3ff6:	48 8b 00             	mov    (%rax),%rax
    3ff9:	48 8d 35 cb 16 00 00 	lea    0x16cb(%rip),%rsi        # 56cb <_IO_stdin_used+0x6cb>
    4000:	48 89 c7             	mov    %rax,%rdi
    4003:	e8 f8 d0 ff ff       	callq  1100 <strcmp@plt>
    4008:	85 c0                	test   %eax,%eax
    400a:	75 31                	jne    403d <implementation_driver_reference+0x255>
    400c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    400f:	48 98                	cltq   
    4011:	48 c1 e0 04          	shl    $0x4,%rax
    4015:	48 89 c2             	mov    %rax,%rdx
    4018:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    401c:	48 01 d0             	add    %rdx,%rax
    401f:	8b 48 08             	mov    0x8(%rax),%ecx
    4022:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    4025:	8b 75 e0             	mov    -0x20(%rbp),%esi
    4028:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    402c:	48 89 c7             	mov    %rax,%rdi
    402f:	e8 ae fa ff ff       	callq  3ae2 <processRotateCCWReference>
    4034:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4038:	e9 ac 00 00 00       	jmpq   40e9 <implementation_driver_reference+0x301>
    403d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4040:	48 98                	cltq   
    4042:	48 c1 e0 04          	shl    $0x4,%rax
    4046:	48 89 c2             	mov    %rax,%rdx
    4049:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    404d:	48 01 d0             	add    %rdx,%rax
    4050:	48 8b 00             	mov    (%rax),%rax
    4053:	48 8d 35 75 16 00 00 	lea    0x1675(%rip),%rsi        # 56cf <_IO_stdin_used+0x6cf>
    405a:	48 89 c7             	mov    %rax,%rdi
    405d:	e8 9e d0 ff ff       	callq  1100 <strcmp@plt>
    4062:	85 c0                	test   %eax,%eax
    4064:	75 2e                	jne    4094 <implementation_driver_reference+0x2ac>
    4066:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4069:	48 98                	cltq   
    406b:	48 c1 e0 04          	shl    $0x4,%rax
    406f:	48 89 c2             	mov    %rax,%rdx
    4072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4076:	48 01 d0             	add    %rdx,%rax
    4079:	8b 48 08             	mov    0x8(%rax),%ecx
    407c:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    407f:	8b 75 e0             	mov    -0x20(%rbp),%esi
    4082:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4086:	48 89 c7             	mov    %rax,%rdi
    4089:	e8 dd fa ff ff       	callq  3b6b <processMirrorXReference>
    408e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4092:	eb 55                	jmp    40e9 <implementation_driver_reference+0x301>
    4094:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4097:	48 98                	cltq   
    4099:	48 c1 e0 04          	shl    $0x4,%rax
    409d:	48 89 c2             	mov    %rax,%rdx
    40a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40a4:	48 01 d0             	add    %rdx,%rax
    40a7:	48 8b 00             	mov    (%rax),%rax
    40aa:	48 8d 35 21 16 00 00 	lea    0x1621(%rip),%rsi        # 56d2 <_IO_stdin_used+0x6d2>
    40b1:	48 89 c7             	mov    %rax,%rdi
    40b4:	e8 47 d0 ff ff       	callq  1100 <strcmp@plt>
    40b9:	85 c0                	test   %eax,%eax
    40bb:	75 2c                	jne    40e9 <implementation_driver_reference+0x301>
    40bd:	8b 45 f8             	mov    -0x8(%rbp),%eax
    40c0:	48 98                	cltq   
    40c2:	48 c1 e0 04          	shl    $0x4,%rax
    40c6:	48 89 c2             	mov    %rax,%rdx
    40c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40cd:	48 01 d0             	add    %rdx,%rax
    40d0:	8b 48 08             	mov    0x8(%rax),%ecx
    40d3:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    40d6:	8b 75 e0             	mov    -0x20(%rbp),%esi
    40d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40dd:	48 89 c7             	mov    %rax,%rdi
    40e0:	e8 c8 fb ff ff       	callq  3cad <processMirrorYReference>
    40e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    40e9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    40ed:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    40f0:	48 63 c1             	movslq %ecx,%rax
    40f3:	48 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%rax,%rax
    40fa:	48 c1 e8 20          	shr    $0x20,%rax
    40fe:	c1 f8 03             	sar    $0x3,%eax
    4101:	89 ce                	mov    %ecx,%esi
    4103:	c1 fe 1f             	sar    $0x1f,%esi
    4106:	29 f0                	sub    %esi,%eax
    4108:	89 c2                	mov    %eax,%edx
    410a:	89 d0                	mov    %edx,%eax
    410c:	c1 e0 02             	shl    $0x2,%eax
    410f:	01 d0                	add    %edx,%eax
    4111:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    4118:	01 d0                	add    %edx,%eax
    411a:	29 c1                	sub    %eax,%ecx
    411c:	89 ca                	mov    %ecx,%edx
    411e:	85 d2                	test   %edx,%edx
    4120:	75 16                	jne    4138 <implementation_driver_reference+0x350>
    4122:	0f b6 4d d0          	movzbl -0x30(%rbp),%ecx
    4126:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    4129:	8b 75 e0             	mov    -0x20(%rbp),%esi
    412c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4130:	48 89 c7             	mov    %rax,%rdi
    4133:	e8 72 e3 ff ff       	callq  24aa <recordFrame>
    4138:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    413c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    413f:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    4142:	0f 8c d9 fc ff ff    	jl     3e21 <implementation_driver_reference+0x39>
    4148:	90                   	nop
    4149:	c9                   	leaveq 
    414a:	c3                   	retq   

000000000000414b <processMoveUp>:
    414b:	55                   	push   %rbp
    414c:	48 89 e5             	mov    %rsp,%rbp
    414f:	48 83 ec 20          	sub    $0x20,%rsp
    4153:	ff 15 8f 3e 00 00    	callq  *0x3e8f(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    4159:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    415d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    4160:	89 55 f0             	mov    %edx,-0x10(%rbp)
    4163:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    4166:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    4169:	8b 55 f0             	mov    -0x10(%rbp),%edx
    416c:	8b 75 f4             	mov    -0xc(%rbp),%esi
    416f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4173:	48 89 c7             	mov    %rax,%rdi
    4176:	e8 11 f0 ff ff       	callq  318c <processMoveUpReference>
    417b:	c9                   	leaveq 
    417c:	c3                   	retq   

000000000000417d <processMoveRight>:
    417d:	55                   	push   %rbp
    417e:	48 89 e5             	mov    %rsp,%rbp
    4181:	48 83 ec 20          	sub    $0x20,%rsp
    4185:	ff 15 5d 3e 00 00    	callq  *0x3e5d(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    418b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    418f:	89 75 f4             	mov    %esi,-0xc(%rbp)
    4192:	89 55 f0             	mov    %edx,-0x10(%rbp)
    4195:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    4198:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    419b:	8b 55 f0             	mov    -0x10(%rbp),%edx
    419e:	8b 75 f4             	mov    -0xc(%rbp),%esi
    41a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41a5:	48 89 c7             	mov    %rax,%rdi
    41a8:	e8 96 f5 ff ff       	callq  3743 <processMoveRightReference>
    41ad:	c9                   	leaveq 
    41ae:	c3                   	retq   

00000000000041af <processMoveDown>:
    41af:	55                   	push   %rbp
    41b0:	48 89 e5             	mov    %rsp,%rbp
    41b3:	48 83 ec 20          	sub    $0x20,%rsp
    41b7:	ff 15 2b 3e 00 00    	callq  *0x3e2b(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    41bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41c1:	89 75 f4             	mov    %esi,-0xc(%rbp)
    41c4:	89 55 f0             	mov    %edx,-0x10(%rbp)
    41c7:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    41ca:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    41cd:	8b 55 f0             	mov    -0x10(%rbp),%edx
    41d0:	8b 75 f4             	mov    -0xc(%rbp),%esi
    41d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41d7:	48 89 c7             	mov    %rax,%rdi
    41da:	e8 87 f3 ff ff       	callq  3566 <processMoveDownReference>
    41df:	c9                   	leaveq 
    41e0:	c3                   	retq   

00000000000041e1 <processMoveLeft>:
    41e1:	55                   	push   %rbp
    41e2:	48 89 e5             	mov    %rsp,%rbp
    41e5:	48 83 ec 20          	sub    $0x20,%rsp
    41e9:	ff 15 f9 3d 00 00    	callq  *0x3df9(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    41ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41f3:	89 75 f4             	mov    %esi,-0xc(%rbp)
    41f6:	89 55 f0             	mov    %edx,-0x10(%rbp)
    41f9:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    41fc:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    41ff:	8b 55 f0             	mov    -0x10(%rbp),%edx
    4202:	8b 75 f4             	mov    -0xc(%rbp),%esi
    4205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4209:	48 89 c7             	mov    %rax,%rdi
    420c:	e8 68 f1 ff ff       	callq  3379 <processMoveLeftReference>
    4211:	c9                   	leaveq 
    4212:	c3                   	retq   

0000000000004213 <processRotateCW>:
    4213:	55                   	push   %rbp
    4214:	48 89 e5             	mov    %rsp,%rbp
    4217:	48 83 ec 20          	sub    $0x20,%rsp
    421b:	ff 15 c7 3d 00 00    	callq  *0x3dc7(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    4221:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4225:	89 75 f4             	mov    %esi,-0xc(%rbp)
    4228:	89 55 f0             	mov    %edx,-0x10(%rbp)
    422b:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    422e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    4231:	8b 55 f0             	mov    -0x10(%rbp),%edx
    4234:	8b 75 f4             	mov    -0xc(%rbp),%esi
    4237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    423b:	48 89 c7             	mov    %rax,%rdi
    423e:	e8 df f6 ff ff       	callq  3922 <processRotateCWReference>
    4243:	c9                   	leaveq 
    4244:	c3                   	retq   

0000000000004245 <processRotateCCW>:
    4245:	55                   	push   %rbp
    4246:	48 89 e5             	mov    %rsp,%rbp
    4249:	48 83 ec 20          	sub    $0x20,%rsp
    424d:	ff 15 95 3d 00 00    	callq  *0x3d95(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    4253:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4257:	89 75 f4             	mov    %esi,-0xc(%rbp)
    425a:	89 55 f0             	mov    %edx,-0x10(%rbp)
    425d:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    4260:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    4263:	8b 55 f0             	mov    -0x10(%rbp),%edx
    4266:	8b 75 f4             	mov    -0xc(%rbp),%esi
    4269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    426d:	48 89 c7             	mov    %rax,%rdi
    4270:	e8 6d f8 ff ff       	callq  3ae2 <processRotateCCWReference>
    4275:	c9                   	leaveq 
    4276:	c3                   	retq   

0000000000004277 <processMirrorX>:
    4277:	55                   	push   %rbp
    4278:	48 89 e5             	mov    %rsp,%rbp
    427b:	48 83 ec 20          	sub    $0x20,%rsp
    427f:	ff 15 63 3d 00 00    	callq  *0x3d63(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    4285:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4289:	89 75 f4             	mov    %esi,-0xc(%rbp)
    428c:	89 55 f0             	mov    %edx,-0x10(%rbp)
    428f:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    4292:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    4295:	8b 55 f0             	mov    -0x10(%rbp),%edx
    4298:	8b 75 f4             	mov    -0xc(%rbp),%esi
    429b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    429f:	48 89 c7             	mov    %rax,%rdi
    42a2:	e8 c4 f8 ff ff       	callq  3b6b <processMirrorXReference>
    42a7:	c9                   	leaveq 
    42a8:	c3                   	retq   

00000000000042a9 <processMirrorY>:
    42a9:	55                   	push   %rbp
    42aa:	48 89 e5             	mov    %rsp,%rbp
    42ad:	48 83 ec 20          	sub    $0x20,%rsp
    42b1:	ff 15 31 3d 00 00    	callq  *0x3d31(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    42b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42bb:	89 75 f4             	mov    %esi,-0xc(%rbp)
    42be:	89 55 f0             	mov    %edx,-0x10(%rbp)
    42c1:	89 4d ec             	mov    %ecx,-0x14(%rbp)
    42c4:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    42c7:	8b 55 f0             	mov    -0x10(%rbp),%edx
    42ca:	8b 75 f4             	mov    -0xc(%rbp),%esi
    42cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42d1:	48 89 c7             	mov    %rax,%rdi
    42d4:	e8 d4 f9 ff ff       	callq  3cad <processMirrorYReference>
    42d9:	c9                   	leaveq 
    42da:	c3                   	retq   

00000000000042db <print_team_info>:
    42db:	55                   	push   %rbp
    42dc:	48 89 e5             	mov    %rsp,%rbp
    42df:	48 83 ec 40          	sub    $0x40,%rsp
    42e3:	ff 15 ff 3c 00 00    	callq  *0x3cff(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    42e9:	48 b8 57 68 61 74 2d 	movabs $0x2d73692d74616857,%rax
    42f0:	69 73 2d 
    42f3:	48 ba 6f 70 74 69 6d 	movabs $0x617a696d6974706f,%rdx
    42fa:	69 7a 61 
    42fd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4301:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    4305:	c7 45 f0 74 69 6f 6e 	movl   $0x6e6f6974,-0x10(%rbp)
    430c:	c6 45 f4 00          	movb   $0x0,-0xc(%rbp)
    4310:	48 b8 4a 61 63 6b 73 	movabs $0x6e6f736b63614a,%rax
    4317:	6f 6e 00 
    431a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    431e:	c7 45 d4 4e 69 65 00 	movl   $0x65694e,-0x2c(%rbp)
    4325:	48 b8 31 30 30 35 32 	movabs $0x3432383235303031,%rax
    432c:	38 32 34 
    432f:	48 89 45 c9          	mov    %rax,-0x37(%rbp)
    4333:	66 c7 45 d1 30 39    	movw   $0x3930,-0x2f(%rbp)
    4339:	c6 45 d3 00          	movb   $0x0,-0x2d(%rbp)
    433d:	48 8d 3d 94 13 00 00 	lea    0x1394(%rip),%rdi        # 56d8 <_IO_stdin_used+0x6d8>
    4344:	e8 27 cd ff ff       	callq  1070 <puts@plt>
    4349:	48 8d 3d f0 13 00 00 	lea    0x13f0(%rip),%rdi        # 5740 <_IO_stdin_used+0x740>
    4350:	e8 1b cd ff ff       	callq  1070 <puts@plt>
    4355:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4359:	48 89 c6             	mov    %rax,%rsi
    435c:	48 8d 3d ef 13 00 00 	lea    0x13ef(%rip),%rdi        # 5752 <_IO_stdin_used+0x752>
    4363:	b8 00 00 00 00       	mov    $0x0,%eax
    4368:	e8 43 cd ff ff       	callq  10b0 <printf@plt>
    436d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4371:	48 89 c6             	mov    %rax,%rsi
    4374:	48 8d 3d e7 13 00 00 	lea    0x13e7(%rip),%rdi        # 5762 <_IO_stdin_used+0x762>
    437b:	b8 00 00 00 00       	mov    $0x0,%eax
    4380:	e8 2b cd ff ff       	callq  10b0 <printf@plt>
    4385:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    4389:	48 89 c6             	mov    %rax,%rsi
    438c:	48 8d 3d e8 13 00 00 	lea    0x13e8(%rip),%rdi        # 577b <_IO_stdin_used+0x77b>
    4393:	b8 00 00 00 00       	mov    $0x0,%eax
    4398:	e8 13 cd ff ff       	callq  10b0 <printf@plt>
    439d:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    43a1:	48 89 c6             	mov    %rax,%rsi
    43a4:	48 8d 3d e8 13 00 00 	lea    0x13e8(%rip),%rdi        # 5793 <_IO_stdin_used+0x793>
    43ab:	b8 00 00 00 00       	mov    $0x0,%eax
    43b0:	e8 fb cc ff ff       	callq  10b0 <printf@plt>
    43b5:	90                   	nop
    43b6:	c9                   	leaveq 
    43b7:	c3                   	retq   

00000000000043b8 <implementation_driver>:
    43b8:	55                   	push   %rbp
    43b9:	48 89 e5             	mov    %rsp,%rbp
    43bc:	48 83 ec 30          	sub    $0x30,%rsp
    43c0:	ff 15 22 3c 00 00    	callq  *0x3c22(%rip)        # 7fe8 <mcount@GLIBC_2.2.5>
    43c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    43ca:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    43cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    43d1:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    43d4:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
    43d8:	44 89 c8             	mov    %r9d,%eax
    43db:	88 45 d0             	mov    %al,-0x30(%rbp)
    43de:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    43e5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    43ec:	e9 1b 03 00 00       	jmpq   470c <implementation_driver+0x354>
    43f1:	8b 45 f8             	mov    -0x8(%rbp),%eax
    43f4:	48 98                	cltq   
    43f6:	48 c1 e0 04          	shl    $0x4,%rax
    43fa:	48 89 c2             	mov    %rax,%rdx
    43fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4401:	48 01 d0             	add    %rdx,%rax
    4404:	48 8b 00             	mov    (%rax),%rax
    4407:	48 8d 35 a2 13 00 00 	lea    0x13a2(%rip),%rsi        # 57b0 <_IO_stdin_used+0x7b0>
    440e:	48 89 c7             	mov    %rax,%rdi
    4411:	e8 ea cc ff ff       	callq  1100 <strcmp@plt>
    4416:	85 c0                	test   %eax,%eax
    4418:	75 31                	jne    444b <implementation_driver+0x93>
    441a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    441d:	48 98                	cltq   
    441f:	48 c1 e0 04          	shl    $0x4,%rax
    4423:	48 89 c2             	mov    %rax,%rdx
    4426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    442a:	48 01 d0             	add    %rdx,%rax
    442d:	8b 48 08             	mov    0x8(%rax),%ecx
    4430:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    4433:	8b 75 e0             	mov    -0x20(%rbp),%esi
    4436:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    443a:	48 89 c7             	mov    %rax,%rdi
    443d:	e8 09 fd ff ff       	callq  414b <processMoveUp>
    4442:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4446:	e9 6e 02 00 00       	jmpq   46b9 <implementation_driver+0x301>
    444b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    444e:	48 98                	cltq   
    4450:	48 c1 e0 04          	shl    $0x4,%rax
    4454:	48 89 c2             	mov    %rax,%rdx
    4457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    445b:	48 01 d0             	add    %rdx,%rax
    445e:	48 8b 00             	mov    (%rax),%rax
    4461:	48 8d 35 4a 13 00 00 	lea    0x134a(%rip),%rsi        # 57b2 <_IO_stdin_used+0x7b2>
    4468:	48 89 c7             	mov    %rax,%rdi
    446b:	e8 90 cc ff ff       	callq  1100 <strcmp@plt>
    4470:	85 c0                	test   %eax,%eax
    4472:	75 31                	jne    44a5 <implementation_driver+0xed>
    4474:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4477:	48 98                	cltq   
    4479:	48 c1 e0 04          	shl    $0x4,%rax
    447d:	48 89 c2             	mov    %rax,%rdx
    4480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4484:	48 01 d0             	add    %rdx,%rax
    4487:	8b 48 08             	mov    0x8(%rax),%ecx
    448a:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    448d:	8b 75 e0             	mov    -0x20(%rbp),%esi
    4490:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4494:	48 89 c7             	mov    %rax,%rdi
    4497:	e8 45 fd ff ff       	callq  41e1 <processMoveLeft>
    449c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    44a0:	e9 14 02 00 00       	jmpq   46b9 <implementation_driver+0x301>
    44a5:	8b 45 f8             	mov    -0x8(%rbp),%eax
    44a8:	48 98                	cltq   
    44aa:	48 c1 e0 04          	shl    $0x4,%rax
    44ae:	48 89 c2             	mov    %rax,%rdx
    44b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44b5:	48 01 d0             	add    %rdx,%rax
    44b8:	48 8b 00             	mov    (%rax),%rax
    44bb:	48 8d 35 f2 12 00 00 	lea    0x12f2(%rip),%rsi        # 57b4 <_IO_stdin_used+0x7b4>
    44c2:	48 89 c7             	mov    %rax,%rdi
    44c5:	e8 36 cc ff ff       	callq  1100 <strcmp@plt>
    44ca:	85 c0                	test   %eax,%eax
    44cc:	75 31                	jne    44ff <implementation_driver+0x147>
    44ce:	8b 45 f8             	mov    -0x8(%rbp),%eax
    44d1:	48 98                	cltq   
    44d3:	48 c1 e0 04          	shl    $0x4,%rax
    44d7:	48 89 c2             	mov    %rax,%rdx
    44da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44de:	48 01 d0             	add    %rdx,%rax
    44e1:	8b 48 08             	mov    0x8(%rax),%ecx
    44e4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    44e7:	8b 75 e0             	mov    -0x20(%rbp),%esi
    44ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    44ee:	48 89 c7             	mov    %rax,%rdi
    44f1:	e8 b9 fc ff ff       	callq  41af <processMoveDown>
    44f6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    44fa:	e9 ba 01 00 00       	jmpq   46b9 <implementation_driver+0x301>
    44ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4502:	48 98                	cltq   
    4504:	48 c1 e0 04          	shl    $0x4,%rax
    4508:	48 89 c2             	mov    %rax,%rdx
    450b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    450f:	48 01 d0             	add    %rdx,%rax
    4512:	48 8b 00             	mov    (%rax),%rax
    4515:	48 8d 35 9a 12 00 00 	lea    0x129a(%rip),%rsi        # 57b6 <_IO_stdin_used+0x7b6>
    451c:	48 89 c7             	mov    %rax,%rdi
    451f:	e8 dc cb ff ff       	callq  1100 <strcmp@plt>
    4524:	85 c0                	test   %eax,%eax
    4526:	75 31                	jne    4559 <implementation_driver+0x1a1>
    4528:	8b 45 f8             	mov    -0x8(%rbp),%eax
    452b:	48 98                	cltq   
    452d:	48 c1 e0 04          	shl    $0x4,%rax
    4531:	48 89 c2             	mov    %rax,%rdx
    4534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4538:	48 01 d0             	add    %rdx,%rax
    453b:	8b 48 08             	mov    0x8(%rax),%ecx
    453e:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    4541:	8b 75 e0             	mov    -0x20(%rbp),%esi
    4544:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4548:	48 89 c7             	mov    %rax,%rdi
    454b:	e8 2d fc ff ff       	callq  417d <processMoveRight>
    4550:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4554:	e9 60 01 00 00       	jmpq   46b9 <implementation_driver+0x301>
    4559:	8b 45 f8             	mov    -0x8(%rbp),%eax
    455c:	48 98                	cltq   
    455e:	48 c1 e0 04          	shl    $0x4,%rax
    4562:	48 89 c2             	mov    %rax,%rdx
    4565:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4569:	48 01 d0             	add    %rdx,%rax
    456c:	48 8b 00             	mov    (%rax),%rax
    456f:	48 8d 35 42 12 00 00 	lea    0x1242(%rip),%rsi        # 57b8 <_IO_stdin_used+0x7b8>
    4576:	48 89 c7             	mov    %rax,%rdi
    4579:	e8 82 cb ff ff       	callq  1100 <strcmp@plt>
    457e:	85 c0                	test   %eax,%eax
    4580:	75 31                	jne    45b3 <implementation_driver+0x1fb>
    4582:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4585:	48 98                	cltq   
    4587:	48 c1 e0 04          	shl    $0x4,%rax
    458b:	48 89 c2             	mov    %rax,%rdx
    458e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4592:	48 01 d0             	add    %rdx,%rax
    4595:	8b 48 08             	mov    0x8(%rax),%ecx
    4598:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    459b:	8b 75 e0             	mov    -0x20(%rbp),%esi
    459e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45a2:	48 89 c7             	mov    %rax,%rdi
    45a5:	e8 69 fc ff ff       	callq  4213 <processRotateCW>
    45aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    45ae:	e9 06 01 00 00       	jmpq   46b9 <implementation_driver+0x301>
    45b3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    45b6:	48 98                	cltq   
    45b8:	48 c1 e0 04          	shl    $0x4,%rax
    45bc:	48 89 c2             	mov    %rax,%rdx
    45bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45c3:	48 01 d0             	add    %rdx,%rax
    45c6:	48 8b 00             	mov    (%rax),%rax
    45c9:	48 8d 35 eb 11 00 00 	lea    0x11eb(%rip),%rsi        # 57bb <_IO_stdin_used+0x7bb>
    45d0:	48 89 c7             	mov    %rax,%rdi
    45d3:	e8 28 cb ff ff       	callq  1100 <strcmp@plt>
    45d8:	85 c0                	test   %eax,%eax
    45da:	75 31                	jne    460d <implementation_driver+0x255>
    45dc:	8b 45 f8             	mov    -0x8(%rbp),%eax
    45df:	48 98                	cltq   
    45e1:	48 c1 e0 04          	shl    $0x4,%rax
    45e5:	48 89 c2             	mov    %rax,%rdx
    45e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45ec:	48 01 d0             	add    %rdx,%rax
    45ef:	8b 48 08             	mov    0x8(%rax),%ecx
    45f2:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    45f5:	8b 75 e0             	mov    -0x20(%rbp),%esi
    45f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45fc:	48 89 c7             	mov    %rax,%rdi
    45ff:	e8 41 fc ff ff       	callq  4245 <processRotateCCW>
    4604:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4608:	e9 ac 00 00 00       	jmpq   46b9 <implementation_driver+0x301>
    460d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4610:	48 98                	cltq   
    4612:	48 c1 e0 04          	shl    $0x4,%rax
    4616:	48 89 c2             	mov    %rax,%rdx
    4619:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    461d:	48 01 d0             	add    %rdx,%rax
    4620:	48 8b 00             	mov    (%rax),%rax
    4623:	48 8d 35 95 11 00 00 	lea    0x1195(%rip),%rsi        # 57bf <_IO_stdin_used+0x7bf>
    462a:	48 89 c7             	mov    %rax,%rdi
    462d:	e8 ce ca ff ff       	callq  1100 <strcmp@plt>
    4632:	85 c0                	test   %eax,%eax
    4634:	75 2e                	jne    4664 <implementation_driver+0x2ac>
    4636:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4639:	48 98                	cltq   
    463b:	48 c1 e0 04          	shl    $0x4,%rax
    463f:	48 89 c2             	mov    %rax,%rdx
    4642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4646:	48 01 d0             	add    %rdx,%rax
    4649:	8b 48 08             	mov    0x8(%rax),%ecx
    464c:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    464f:	8b 75 e0             	mov    -0x20(%rbp),%esi
    4652:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4656:	48 89 c7             	mov    %rax,%rdi
    4659:	e8 19 fc ff ff       	callq  4277 <processMirrorX>
    465e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4662:	eb 55                	jmp    46b9 <implementation_driver+0x301>
    4664:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4667:	48 98                	cltq   
    4669:	48 c1 e0 04          	shl    $0x4,%rax
    466d:	48 89 c2             	mov    %rax,%rdx
    4670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4674:	48 01 d0             	add    %rdx,%rax
    4677:	48 8b 00             	mov    (%rax),%rax
    467a:	48 8d 35 41 11 00 00 	lea    0x1141(%rip),%rsi        # 57c2 <_IO_stdin_used+0x7c2>
    4681:	48 89 c7             	mov    %rax,%rdi
    4684:	e8 77 ca ff ff       	callq  1100 <strcmp@plt>
    4689:	85 c0                	test   %eax,%eax
    468b:	75 2c                	jne    46b9 <implementation_driver+0x301>
    468d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    4690:	48 98                	cltq   
    4692:	48 c1 e0 04          	shl    $0x4,%rax
    4696:	48 89 c2             	mov    %rax,%rdx
    4699:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    469d:	48 01 d0             	add    %rdx,%rax
    46a0:	8b 48 08             	mov    0x8(%rax),%ecx
    46a3:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    46a6:	8b 75 e0             	mov    -0x20(%rbp),%esi
    46a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    46ad:	48 89 c7             	mov    %rax,%rdi
    46b0:	e8 f4 fb ff ff       	callq  42a9 <processMirrorY>
    46b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    46b9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    46bd:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    46c0:	48 63 c1             	movslq %ecx,%rax
    46c3:	48 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%rax,%rax
    46ca:	48 c1 e8 20          	shr    $0x20,%rax
    46ce:	c1 f8 03             	sar    $0x3,%eax
    46d1:	89 ce                	mov    %ecx,%esi
    46d3:	c1 fe 1f             	sar    $0x1f,%esi
    46d6:	29 f0                	sub    %esi,%eax
    46d8:	89 c2                	mov    %eax,%edx
    46da:	89 d0                	mov    %edx,%eax
    46dc:	c1 e0 02             	shl    $0x2,%eax
    46df:	01 d0                	add    %edx,%eax
    46e1:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    46e8:	01 d0                	add    %edx,%eax
    46ea:	29 c1                	sub    %eax,%ecx
    46ec:	89 ca                	mov    %ecx,%edx
    46ee:	85 d2                	test   %edx,%edx
    46f0:	75 16                	jne    4708 <implementation_driver+0x350>
    46f2:	0f b6 4d d0          	movzbl -0x30(%rbp),%ecx
    46f6:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    46f9:	8b 75 e0             	mov    -0x20(%rbp),%esi
    46fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4700:	48 89 c7             	mov    %rax,%rdi
    4703:	e8 43 de ff ff       	callq  254b <verifyFrame>
    4708:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    470c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    470f:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    4712:	0f 8c d9 fc ff ff    	jl     43f1 <implementation_driver+0x39>
    4718:	90                   	nop
    4719:	c9                   	leaveq 
    471a:	c3                   	retq   
    471b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004720 <__libc_csu_init>:
    4720:	41 57                	push   %r15
    4722:	4c 8d 3d b7 36 00 00 	lea    0x36b7(%rip),%r15        # 7de0 <__frame_dummy_init_array_entry>
    4729:	41 56                	push   %r14
    472b:	49 89 d6             	mov    %rdx,%r14
    472e:	41 55                	push   %r13
    4730:	49 89 f5             	mov    %rsi,%r13
    4733:	41 54                	push   %r12
    4735:	41 89 fc             	mov    %edi,%r12d
    4738:	55                   	push   %rbp
    4739:	48 8d 2d a8 36 00 00 	lea    0x36a8(%rip),%rbp        # 7de8 <__do_global_dtors_aux_fini_array_entry>
    4740:	53                   	push   %rbx
    4741:	4c 29 fd             	sub    %r15,%rbp
    4744:	48 83 ec 08          	sub    $0x8,%rsp
    4748:	e8 b3 c8 ff ff       	callq  1000 <_init>
    474d:	48 c1 fd 03          	sar    $0x3,%rbp
    4751:	74 1b                	je     476e <__libc_csu_init+0x4e>
    4753:	31 db                	xor    %ebx,%ebx
    4755:	0f 1f 00             	nopl   (%rax)
    4758:	4c 89 f2             	mov    %r14,%rdx
    475b:	4c 89 ee             	mov    %r13,%rsi
    475e:	44 89 e7             	mov    %r12d,%edi
    4761:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    4765:	48 83 c3 01          	add    $0x1,%rbx
    4769:	48 39 dd             	cmp    %rbx,%rbp
    476c:	75 ea                	jne    4758 <__libc_csu_init+0x38>
    476e:	48 83 c4 08          	add    $0x8,%rsp
    4772:	5b                   	pop    %rbx
    4773:	5d                   	pop    %rbp
    4774:	41 5c                	pop    %r12
    4776:	41 5d                	pop    %r13
    4778:	41 5e                	pop    %r14
    477a:	41 5f                	pop    %r15
    477c:	c3                   	retq   
    477d:	0f 1f 00             	nopl   (%rax)

0000000000004780 <__libc_csu_fini>:
    4780:	c3                   	retq   
    4781:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4788:	00 00 00 
    478b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004790 <atexit>:
    4790:	48 8b 15 61 39 00 00 	mov    0x3961(%rip),%rdx        # 80f8 <__dso_handle>
    4797:	31 f6                	xor    %esi,%esi
    4799:	e9 e2 c9 ff ff       	jmpq   1180 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000000047a0 <_fini>:
    47a0:	48 83 ec 08          	sub    $0x8,%rsp
    47a4:	48 83 c4 08          	add    $0x8,%rsp
    47a8:	c3                   	retq   
